;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$5470$RCJqu
     g$caar$5542$RCJqu
     (case-lambda ((g$x$5501$RCJqu) (car (car g$x$5501$RCJqu)))))
   (g$cadr$5471$RCJqu
     g$cadr$5543$RCJqu
     (case-lambda ((g$x$5502$RCJqu) (car (cdr g$x$5502$RCJqu)))))
   (g$cdar$5472$RCJqu
     g$cdar$5544$RCJqu
     (case-lambda ((g$x$5503$RCJqu) (cdr (car g$x$5503$RCJqu)))))
   (g$cddr$5473$RCJqu
     g$cddr$5545$RCJqu
     (case-lambda ((g$x$5504$RCJqu) (cdr (cdr g$x$5504$RCJqu)))))
   (g$caaar$5474$RCJqu
     g$caaar$5546$RCJqu
     (case-lambda
       ((g$x$5505$RCJqu) (g$caar$5470$RCJqu (car g$x$5505$RCJqu)))))
   (g$caadr$5475$RCJqu
     g$caadr$5547$RCJqu
     (case-lambda
       ((g$x$5506$RCJqu) (g$caar$5470$RCJqu (cdr g$x$5506$RCJqu)))))
   (g$cadar$5476$RCJqu
     g$cadar$5548$RCJqu
     (case-lambda
       ((g$x$5507$RCJqu) (g$cadr$5471$RCJqu (car g$x$5507$RCJqu)))))
   (g$caddr$5477$RCJqu
     g$caddr$5549$RCJqu
     (case-lambda
       ((g$x$5508$RCJqu) (g$cadr$5471$RCJqu (cdr g$x$5508$RCJqu)))))
   (g$cdaar$5478$RCJqu
     g$cdaar$5550$RCJqu
     (case-lambda
       ((g$x$5509$RCJqu) (g$cdar$5472$RCJqu (car g$x$5509$RCJqu)))))
   (g$cdadr$5479$RCJqu
     g$cdadr$5551$RCJqu
     (case-lambda
       ((g$x$5510$RCJqu) (g$cdar$5472$RCJqu (cdr g$x$5510$RCJqu)))))
   (g$cddar$5480$RCJqu
     g$cddar$5552$RCJqu
     (case-lambda
       ((g$x$5511$RCJqu) (g$cddr$5473$RCJqu (car g$x$5511$RCJqu)))))
   (g$cdddr$5481$RCJqu
     g$cdddr$5553$RCJqu
     (case-lambda
       ((g$x$5512$RCJqu) (g$cddr$5473$RCJqu (cdr g$x$5512$RCJqu)))))
   (g$caaaar$5482$RCJqu
     g$caaaar$5554$RCJqu
     (case-lambda
       ((g$x$5513$RCJqu) (g$caaar$5474$RCJqu (car g$x$5513$RCJqu)))))
   (g$caaadr$5483$RCJqu
     g$caaadr$5555$RCJqu
     (case-lambda
       ((g$x$5514$RCJqu) (g$caaar$5474$RCJqu (cdr g$x$5514$RCJqu)))))
   (g$caadar$5484$RCJqu
     g$caadar$5556$RCJqu
     (case-lambda
       ((g$x$5515$RCJqu) (g$caadr$5475$RCJqu (car g$x$5515$RCJqu)))))
   (g$caaddr$5485$RCJqu
     g$caaddr$5557$RCJqu
     (case-lambda
       ((g$x$5516$RCJqu) (g$caadr$5475$RCJqu (cdr g$x$5516$RCJqu)))))
   (g$cadaar$5486$RCJqu
     g$cadaar$5558$RCJqu
     (case-lambda
       ((g$x$5517$RCJqu) (g$cadar$5476$RCJqu (car g$x$5517$RCJqu)))))
   (g$cadadr$5487$RCJqu
     g$cadadr$5559$RCJqu
     (case-lambda
       ((g$x$5518$RCJqu) (g$cadar$5476$RCJqu (cdr g$x$5518$RCJqu)))))
   (g$caddar$5488$RCJqu
     g$caddar$5560$RCJqu
     (case-lambda
       ((g$x$5519$RCJqu) (g$caddr$5477$RCJqu (car g$x$5519$RCJqu)))))
   (g$cadddr$5489$RCJqu
     g$cadddr$5561$RCJqu
     (case-lambda
       ((g$x$5520$RCJqu) (g$caddr$5477$RCJqu (cdr g$x$5520$RCJqu)))))
   (g$cdaaar$5490$RCJqu
     g$cdaaar$5562$RCJqu
     (case-lambda
       ((g$x$5521$RCJqu) (g$cdaar$5478$RCJqu (car g$x$5521$RCJqu)))))
   (g$cdaadr$5491$RCJqu
     g$cdaadr$5563$RCJqu
     (case-lambda
       ((g$x$5522$RCJqu) (g$cdaar$5478$RCJqu (cdr g$x$5522$RCJqu)))))
   (g$cdadar$5492$RCJqu
     g$cdadar$5564$RCJqu
     (case-lambda
       ((g$x$5523$RCJqu) (g$cdadr$5479$RCJqu (car g$x$5523$RCJqu)))))
   (g$cdaddr$5493$RCJqu
     g$cdaddr$5565$RCJqu
     (case-lambda
       ((g$x$5524$RCJqu) (g$cdadr$5479$RCJqu (cdr g$x$5524$RCJqu)))))
   (g$cddaar$5494$RCJqu
     g$cddaar$5566$RCJqu
     (case-lambda
       ((g$x$5525$RCJqu) (g$cddar$5480$RCJqu (car g$x$5525$RCJqu)))))
   (g$cddadr$5495$RCJqu
     g$cddadr$5567$RCJqu
     (case-lambda
       ((g$x$5526$RCJqu) (g$cddar$5480$RCJqu (cdr g$x$5526$RCJqu)))))
   (g$cdddar$5496$RCJqu
     g$cdddar$5568$RCJqu
     (case-lambda
       ((g$x$5527$RCJqu) (g$cdddr$5481$RCJqu (car g$x$5527$RCJqu)))))
   (g$cddddr$5497$RCJqu
     g$cddddr$5569$RCJqu
     (case-lambda
       ((g$x$5528$RCJqu) (g$cdddr$5481$RCJqu (cdr g$x$5528$RCJqu)))))
   (g$rationalize$5498$RCJqu
     g$rationalize$5570$RCJqu
     (case-lambda
       ((g$x$5529$RCJqu g$e$5530$RCJqu)
        (apply / (g$find-ratio$5499$RCJqu g$x$5529$RCJqu g$e$5530$RCJqu)))))
   (g$find-ratio$5499$RCJqu
     g$find-ratio$5571$RCJqu
     (case-lambda
       ((g$x$5531$RCJqu g$e$5532$RCJqu)
        (g$find-ratio-between$5500$RCJqu
          (- g$x$5531$RCJqu g$e$5532$RCJqu)
          (+ g$x$5531$RCJqu g$e$5532$RCJqu)))))
   (g$find-ratio-between$5500$RCJqu
     g$find-ratio-between$5572$RCJqu
     (case-lambda
       ((g$x$5533$RCJqu g$y$5534$RCJqu)
        (letrec* ((g$sr$5535$RCJqu
                    (case-lambda
                      ((g$x$5537$RCJqu g$y$5538$RCJqu)
                       ((case-lambda
                          ((g$fx$5539$RCJqu g$fy$5540$RCJqu)
                           (if (>= g$fx$5539$RCJqu g$x$5537$RCJqu)
                             (list g$fx$5539$RCJqu '1)
                             (if (= g$fx$5539$RCJqu g$fy$5540$RCJqu)
                               ((case-lambda
                                  ((g$rat$5541$RCJqu)
                                   (list
                                     (+ (g$cadr$5471$RCJqu g$rat$5541$RCJqu)
                                        (* g$fx$5539$RCJqu
                                           (car g$rat$5541$RCJqu)))
                                     (car g$rat$5541$RCJqu))))
                                (g$sr$5535$RCJqu
                                  (/ (- g$y$5538$RCJqu g$fy$5540$RCJqu))
                                  (/ (- g$x$5537$RCJqu g$fx$5539$RCJqu))))
                               (list (+ '1 g$fx$5539$RCJqu) '1)))))
                        (exact (floor g$x$5537$RCJqu))
                        (exact (floor g$y$5538$RCJqu)))))))
          (if (< g$y$5534$RCJqu g$x$5533$RCJqu)
            (g$find-ratio-between$5500$RCJqu g$y$5534$RCJqu g$x$5533$RCJqu)
            (if (>= g$x$5533$RCJqu g$y$5534$RCJqu)
              (list g$x$5533$RCJqu '1)
              (if (positive? g$x$5533$RCJqu)
                (g$sr$5535$RCJqu g$x$5533$RCJqu g$y$5534$RCJqu)
                (if (negative? g$y$5534$RCJqu)
                  ((case-lambda
                     ((g$rat$5536$RCJqu)
                      (list
                        (- (car g$rat$5536$RCJqu))
                        (g$cadr$5471$RCJqu g$rat$5536$RCJqu))))
                   (g$sr$5535$RCJqu (- g$y$5534$RCJqu) (- g$x$5533$RCJqu)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5768$RCJqu g$using$5803$RCJqu (clr-using-internal 'system))
   (g$using$5770$RCJqu
     g$using$5804$RCJqu
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5771$RCJqu
     g$make-eq-hashtable$5805$RCJqu
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5782$RCJqu)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5782$RCJqu)))))
   (g$make-eqv-hashtable$5772$RCJqu
     g$make-eqv-hashtable$5806$RCJqu
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5783$RCJqu) (make-hashtable eqv-hash eqv? g$k$5783$RCJqu))))
   (g$hashtable-size$5773$RCJqu
     g$hashtable-size$5807$RCJqu
     (case-lambda
       ((g$ht$5784$RCJqu)
        (clr-call-internal 'hashtable 'get_count g$ht$5784$RCJqu))))
   (g$hashtable-ref$5774$RCJqu
     g$hashtable-ref$5808$RCJqu
     (case-lambda
       ((g$ht$5785$RCJqu g$key$5786$RCJqu g$default$5787$RCJqu)
        (letrec* ((g$r$5788$RCJqu
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5785$RCJqu
                      g$key$5786$RCJqu)))
          (if (not (null? g$r$5788$RCJqu))
            g$r$5788$RCJqu
            g$default$5787$RCJqu)))))
   (g$hashtable-set!$5775$RCJqu
     g$hashtable-set!$5809$RCJqu
     (case-lambda
       ((g$ht$5789$RCJqu g$key$5790$RCJqu g$obj$5791$RCJqu)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5789$RCJqu
          g$key$5790$RCJqu
          g$obj$5791$RCJqu))))
   (g$hashtable-delete!$5776$RCJqu
     g$hashtable-delete!$5810$RCJqu
     (case-lambda
       ((g$ht$5792$RCJqu g$key$5793$RCJqu)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5792$RCJqu
          g$key$5793$RCJqu))))
   (g$hashtable-contains?$5777$RCJqu
     g$hashtable-contains?$5811$RCJqu
     (case-lambda
       ((g$ht$5794$RCJqu g$key$5795$RCJqu)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5794$RCJqu
          g$key$5795$RCJqu))))
   (g$hashtable-update!$5778$RCJqu
     g$hashtable-update!$5812$RCJqu
     (case-lambda
       ((g$ht$5796$RCJqu
          g$key$5797$RCJqu
          g$proc$5798$RCJqu
          g$default$5799$RCJqu)
        (g$hashtable-set!$5775$RCJqu
          g$ht$5796$RCJqu
          g$key$5797$RCJqu
          (g$proc$5798$RCJqu
            (g$hashtable-ref$5774$RCJqu
              g$ht$5796$RCJqu
              g$key$5797$RCJqu
              g$default$5799$RCJqu))))))
   (g$hashtable-clear!$5779$RCJqu
     g$hashtable-clear!$5813$RCJqu
     (case-lambda
       ((g$ht$5800$RCJqu)
        (clr-call-internal 'hashtable 'clear g$ht$5800$RCJqu))
       ((g$ht$5801$RCJqu g$k$5802$RCJqu)
        (clr-call-internal 'hashtable 'clear g$ht$5801$RCJqu))))
   (g$clear-usings$5781$RCJqu
     g$clear-usings$5814$RCJqu
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5816$RCJqu g$using$5882$RCJqu (clr-using-internal 'system.io))
   (g$file-exists?$5817$RCJqu
     g$file-exists?$5883$RCJqu
     (case-lambda
       ((g$fn$5845$RCJqu)
        (clr-call-internal 'file 'exists '() g$fn$5845$RCJqu))))
   (g$delete-file$5818$RCJqu
     g$delete-file$5884$RCJqu
     (case-lambda
       ((g$fn$5846$RCJqu)
        (clr-call-internal 'file 'delete '() g$fn$5846$RCJqu))))
   (g$file-copy$5819$RCJqu
     g$file-copy$5885$RCJqu
     (case-lambda
       ((g$from$5847$RCJqu g$to$5848$RCJqu)
        (g$file-copy$5819$RCJqu g$from$5847$RCJqu g$to$5848$RCJqu '#f))
       ((g$from$5849$RCJqu g$to$5850$RCJqu g$overwrite?$5851$RCJqu)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5849$RCJqu
          g$to$5850$RCJqu
          g$overwrite?$5851$RCJqu))))
   (g$file-move$5820$RCJqu
     g$file-move$5886$RCJqu
     (case-lambda
       ((g$from$5852$RCJqu g$to$5853$RCJqu)
        (clr-call-internal 'file 'move '() g$from$5852$RCJqu g$to$5853$RCJqu))))
   (g$file-create-time$5821$RCJqu
     g$file-create-time$5887$RCJqu
     (case-lambda
       ((g$fn$5854$RCJqu)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5854$RCJqu))))
   (g$file-access-time$5822$RCJqu
     g$file-access-time$5888$RCJqu
     (case-lambda
       ((g$fn$5855$RCJqu)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5855$RCJqu))))
   (g$file-modified-time$5823$RCJqu
     g$file-modified-time$5889$RCJqu
     (case-lambda
       ((g$fn$5856$RCJqu)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5856$RCJqu))))
   (g$directory-exists?$5824$RCJqu
     g$directory-exists?$5890$RCJqu
     (case-lambda
       ((g$fn$5857$RCJqu)
        (clr-call-internal 'directory 'exists '() g$fn$5857$RCJqu))))
   (g$delete-directory$5825$RCJqu
     g$delete-directory$5891$RCJqu
     (case-lambda
       ((g$dir$5858$RCJqu)
        (g$delete-directory$5825$RCJqu g$dir$5858$RCJqu '#f))
       ((g$dir$5859$RCJqu g$recursive?$5860$RCJqu)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5859$RCJqu
          g$recursive?$5860$RCJqu))))
   (g$directory-move$5826$RCJqu
     g$directory-move$5892$RCJqu
     (case-lambda
       ((g$from$5861$RCJqu g$to$5862$RCJqu)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5861$RCJqu
          g$to$5862$RCJqu))))
   (g$create-directory$5827$RCJqu
     g$create-directory$5893$RCJqu
     (case-lambda
       ((g$name$5863$RCJqu)
        (clr-call-internal 'directory 'createdirectory '() g$name$5863$RCJqu))))
   (g$get-files$5828$RCJqu
     g$get-files$5894$RCJqu
     (case-lambda
       ((g$dir$5864$RCJqu) (g$get-files$5828$RCJqu g$dir$5864$RCJqu '"*"))
       ((g$dir$5865$RCJqu g$pattern$5866$RCJqu)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5865$RCJqu
          g$pattern$5866$RCJqu))))
   (g$get-directories$5829$RCJqu
     g$get-directories$5895$RCJqu
     (case-lambda
       ((g$dir$5867$RCJqu)
        (g$get-directories$5829$RCJqu g$dir$5867$RCJqu '"*"))
       ((g$dir$5868$RCJqu g$pattern$5869$RCJqu)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5868$RCJqu
          g$pattern$5869$RCJqu))))
   (g$change-extension$5830$RCJqu
     g$change-extension$5896$RCJqu
     (case-lambda
       ((g$path$5870$RCJqu g$extension$5871$RCJqu)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5870$RCJqu
          g$extension$5871$RCJqu))))
   (g$path-combine$5831$RCJqu
     g$path-combine$5897$RCJqu
     (case-lambda
       ((g$path1$5872$RCJqu g$path2$5873$RCJqu)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5872$RCJqu
          g$path2$5873$RCJqu))))
   (g$get-directory-name$5832$RCJqu
     g$get-directory-name$5898$RCJqu
     (case-lambda
       ((g$path$5874$RCJqu)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5874$RCJqu))))
   (g$get-extension$5833$RCJqu
     g$get-extension$5899$RCJqu
     (case-lambda
       ((g$path$5875$RCJqu)
        (clr-call-internal 'path 'getextension '() g$path$5875$RCJqu))))
   (g$get-filename$5834$RCJqu
     g$get-filename$5900$RCJqu
     (case-lambda
       ((g$path$5876$RCJqu)
        (clr-call-internal 'path 'getfilename '() g$path$5876$RCJqu))))
   (g$get-filename-without-extension$5835$RCJqu
     g$get-filename-without-extension$5901$RCJqu
     (case-lambda
       ((g$path$5877$RCJqu)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5877$RCJqu))))
   (g$get-full-path$5836$RCJqu
     g$get-full-path$5902$RCJqu
     (case-lambda
       ((g$path$5878$RCJqu)
        (clr-call-internal 'path 'getfullpath '() g$path$5878$RCJqu))))
   (g$get-path-root$5837$RCJqu
     g$get-path-root$5903$RCJqu
     (case-lambda
       ((g$path$5879$RCJqu)
        (clr-call-internal 'path 'getpathroot '() g$path$5879$RCJqu))))
   (g$get-random-filename$5838$RCJqu
     g$get-random-filename$5904$RCJqu
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5839$RCJqu
     g$get-temp-filename$5905$RCJqu
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5840$RCJqu
     g$get-temp-path$5906$RCJqu
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5841$RCJqu
     g$path-rooted?$5907$RCJqu
     (case-lambda
       ((g$path$5880$RCJqu)
        (clr-call-internal 'path 'ispathrooted '() g$path$5880$RCJqu))))
   (g$path-has-extension?$5842$RCJqu
     g$path-has-extension?$5908$RCJqu
     (case-lambda
       ((g$path$5881$RCJqu)
        (clr-call-internal 'path 'hasextension '() g$path$5881$RCJqu))))
   (g$clear-usings$5844$RCJqu
     g$clear-usings$5909$RCJqu
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5910$RCJqu
     g$find$6001$RCJqu
     (case-lambda
       ((g$proc$5929$RCJqu g$l$5930$RCJqu)
        (if (null? g$l$5930$RCJqu)
          '#f
          ((case-lambda
             ((g$e$5931$RCJqu)
              (if (g$proc$5929$RCJqu g$e$5931$RCJqu)
                g$e$5931$RCJqu
                (g$find$5910$RCJqu g$proc$5929$RCJqu (cdr g$l$5930$RCJqu)))))
           (car g$l$5930$RCJqu))))))
   (g$partition$5911$RCJqu
     g$partition$6002$RCJqu
     (case-lambda
       ((g$proc$5932$RCJqu g$l$5933$RCJqu)
        ((letrec ((g$f$5934$RCJqu
                    (case-lambda
                      ((g$l$5935$RCJqu g$a$5936$RCJqu g$b$5937$RCJqu)
                       (if (null? g$l$5935$RCJqu)
                         (values
                           (reverse! g$a$5936$RCJqu)
                           (reverse! g$b$5937$RCJqu))
                         ((case-lambda
                            ((g$e$5938$RCJqu)
                             (if (g$proc$5932$RCJqu g$e$5938$RCJqu)
                               (g$f$5934$RCJqu
                                 (cdr g$l$5935$RCJqu)
                                 (cons g$e$5938$RCJqu g$a$5936$RCJqu)
                                 g$b$5937$RCJqu)
                               (g$f$5934$RCJqu
                                 (cdr g$l$5935$RCJqu)
                                 g$a$5936$RCJqu
                                 (cons g$e$5938$RCJqu g$b$5937$RCJqu)))))
                          (car g$l$5935$RCJqu)))))))
           g$f$5934$RCJqu)
         g$l$5933$RCJqu
         '()
         '()))))
   (g$remp$5912$RCJqu
     g$remp$6003$RCJqu
     (case-lambda
       ((g$proc$5939$RCJqu g$l$5940$RCJqu)
        ((letrec ((g$f$5941$RCJqu
                    (case-lambda
                      ((g$l$5942$RCJqu g$a$5943$RCJqu)
                       (if (null? g$l$5942$RCJqu)
                         (reverse! g$a$5943$RCJqu)
                         ((case-lambda
                            ((g$e$5944$RCJqu)
                             (if (g$proc$5939$RCJqu g$e$5944$RCJqu)
                               (g$f$5941$RCJqu
                                 (cdr g$l$5942$RCJqu)
                                 g$a$5943$RCJqu)
                               (g$f$5941$RCJqu
                                 (cdr g$l$5942$RCJqu)
                                 (cons g$e$5944$RCJqu g$a$5943$RCJqu)))))
                          (car g$l$5942$RCJqu)))))))
           g$f$5941$RCJqu)
         g$l$5940$RCJqu
         '()))))
   (g$filter$5913$RCJqu
     g$filter$6004$RCJqu
     (case-lambda
       ((g$proc$5945$RCJqu g$l$5946$RCJqu)
        ((letrec ((g$f$5947$RCJqu
                    (case-lambda
                      ((g$l$5948$RCJqu g$a$5949$RCJqu)
                       (if (null? g$l$5948$RCJqu)
                         (reverse! g$a$5949$RCJqu)
                         ((case-lambda
                            ((g$e$5950$RCJqu)
                             (if (g$proc$5945$RCJqu g$e$5950$RCJqu)
                               (g$f$5947$RCJqu
                                 (cdr g$l$5948$RCJqu)
                                 (cons g$e$5950$RCJqu g$a$5949$RCJqu))
                               (g$f$5947$RCJqu
                                 (cdr g$l$5948$RCJqu)
                                 g$a$5949$RCJqu))))
                          (car g$l$5948$RCJqu)))))))
           g$f$5947$RCJqu)
         g$l$5946$RCJqu
         '()))))
   (g$assv$5914$RCJqu
     g$assv$6005$RCJqu
     (case-lambda
       ((g$obj$5951$RCJqu g$lst$5952$RCJqu)
        (if (null? g$lst$5952$RCJqu)
          '#f
          ((case-lambda
             ((g$c$5953$RCJqu)
              (if (eqv? g$obj$5951$RCJqu (car g$c$5953$RCJqu))
                g$c$5953$RCJqu
                (g$assv$5914$RCJqu g$obj$5951$RCJqu (cdr g$lst$5952$RCJqu)))))
           (car g$lst$5952$RCJqu))))))
   (g$assoc$5915$RCJqu
     g$assoc$6006$RCJqu
     (case-lambda
       ((g$obj$5954$RCJqu g$lst$5955$RCJqu)
        (if (null? g$lst$5955$RCJqu)
          '#f
          ((case-lambda
             ((g$c$5956$RCJqu)
              (if (equal? g$obj$5954$RCJqu (car g$c$5956$RCJqu))
                g$c$5956$RCJqu
                (g$assoc$5915$RCJqu g$obj$5954$RCJqu (cdr g$lst$5955$RCJqu)))))
           (car g$lst$5955$RCJqu))))))
   (g$assp$5916$RCJqu
     g$assp$6007$RCJqu
     (case-lambda
       ((g$p?$5957$RCJqu g$lst$5958$RCJqu)
        (if (null? g$lst$5958$RCJqu)
          '#f
          ((case-lambda
             ((g$c$5959$RCJqu)
              (if (g$p?$5957$RCJqu (car g$c$5959$RCJqu))
                g$c$5959$RCJqu
                (g$assp$5916$RCJqu g$p?$5957$RCJqu (cdr g$lst$5958$RCJqu)))))
           (car g$lst$5958$RCJqu))))))
   (g$member$5917$RCJqu
     g$member$6008$RCJqu
     (case-lambda
       ((g$obj$5960$RCJqu g$lst$5961$RCJqu)
        (if (null? g$lst$5961$RCJqu)
          '#f
          (if (equal? g$obj$5960$RCJqu (car g$lst$5961$RCJqu))
            g$lst$5961$RCJqu
            (g$member$5917$RCJqu g$obj$5960$RCJqu (cdr g$lst$5961$RCJqu)))))))
   (g$memp$5918$RCJqu
     g$memp$6009$RCJqu
     (case-lambda
       ((g$p?$5962$RCJqu g$lst$5963$RCJqu)
        (if (null? g$lst$5963$RCJqu)
          '#f
          (if (g$p?$5962$RCJqu (car g$lst$5963$RCJqu))
            g$lst$5963$RCJqu
            (g$memp$5918$RCJqu g$p?$5962$RCJqu (cdr g$lst$5963$RCJqu)))))))
   (g$all-empty?$5919$RCJqu
     g$all-empty?$6010$RCJqu
     (case-lambda
       ((g$ls$5964$RCJqu)
        ((case-lambda
           ((g$t$5965$RCJqu)
            (if g$t$5965$RCJqu
              g$t$5965$RCJqu
              (begin
                '#f
                (if (null? (car g$ls$5964$RCJqu))
                  (begin '#f (g$all-empty?$5919$RCJqu (cdr g$ls$5964$RCJqu)))
                  '#f)))))
         (null? g$ls$5964$RCJqu)))))
   (g$split$5920$RCJqu
     g$split$6011$RCJqu
     (case-lambda
       ((g$ls$5966$RCJqu)
        (if (null? g$ls$5966$RCJqu)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5920$RCJqu (cdr g$ls$5966$RCJqu))))
            (case-lambda
              ((g$cars$5967$RCJqu g$cdrs$5968$RCJqu)
               ((case-lambda
                  ((g$a$5969$RCJqu)
                   (values
                     (cons (car g$a$5969$RCJqu) g$cars$5967$RCJqu)
                     (cons (cdr g$a$5969$RCJqu) g$cdrs$5968$RCJqu))))
                (car g$ls$5966$RCJqu)))))))))
   (g$for-all$5921$RCJqu
     g$for-all$6012$RCJqu
     (case-lambda
       ((g$f$5970$RCJqu . g$args$5971$RCJqu)
        (if (g$all-empty?$5919$RCJqu g$args$5971$RCJqu)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5920$RCJqu g$args$5971$RCJqu)))
            (case-lambda
              ((g$cars$5972$RCJqu g$cdrs$5973$RCJqu)
               (if (apply g$f$5970$RCJqu g$cars$5972$RCJqu)
                 (begin
                   '#f
                   (apply
                     g$for-all$5921$RCJqu
                     g$f$5970$RCJqu
                     g$cdrs$5973$RCJqu))
                 '#f))))))))
   (g$exists$5922$RCJqu
     g$exists$6013$RCJqu
     (case-lambda
       ((g$f$5974$RCJqu . g$args$5975$RCJqu)
        (if (g$all-empty?$5919$RCJqu g$args$5975$RCJqu)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5920$RCJqu g$args$5975$RCJqu)))
            (case-lambda
              ((g$cars$5976$RCJqu g$cdrs$5977$RCJqu)
               ((case-lambda
                  ((g$t$5978$RCJqu)
                   (if g$t$5978$RCJqu
                     g$t$5978$RCJqu
                     (begin
                       '#f
                       (apply
                         g$exists$5922$RCJqu
                         g$f$5974$RCJqu
                         g$cdrs$5977$RCJqu)))))
                (apply g$f$5974$RCJqu g$cars$5976$RCJqu)))))))))
   (g$cons*$5923$RCJqu
     g$cons*$6014$RCJqu
     (case-lambda
       ((g$a$5979$RCJqu . g$rest$5980$RCJqu)
        ((letrec ((g$f$5981$RCJqu
                    (case-lambda
                      ((g$a$5982$RCJqu g$rest$5983$RCJqu)
                       (if (null? g$rest$5983$RCJqu)
                         g$a$5982$RCJqu
                         (cons
                           g$a$5982$RCJqu
                           (g$f$5981$RCJqu
                             (car g$rest$5983$RCJqu)
                             (cdr g$rest$5983$RCJqu))))))))
           g$f$5981$RCJqu)
         g$a$5979$RCJqu
         g$rest$5980$RCJqu))))
   (g$fold-left$5924$RCJqu
     g$fold-left$6015$RCJqu
     (case-lambda
       ((g$combine$5984$RCJqu
          g$nil$5985$RCJqu
          g$list1$5986$RCJqu
          .
          g$lists$5987$RCJqu)
        (if (null? g$list1$5986$RCJqu)
          g$nil$5985$RCJqu
          (apply
            g$fold-left$5924$RCJqu
            (g$cons*$5923$RCJqu
              g$combine$5984$RCJqu
              (apply
                g$combine$5984$RCJqu
                (g$cons*$5923$RCJqu
                  g$nil$5985$RCJqu
                  (car g$list1$5986$RCJqu)
                  (map car g$lists$5987$RCJqu)))
              (cdr g$list1$5986$RCJqu)
              (map cdr g$lists$5987$RCJqu)))))))
   (g$fold-right$5925$RCJqu
     g$fold-right$6016$RCJqu
     (case-lambda
       ((g$combine$5988$RCJqu
          g$nil$5989$RCJqu
          g$list1$5990$RCJqu
          .
          g$lists$5991$RCJqu)
        (if (null? g$list1$5990$RCJqu)
          g$nil$5989$RCJqu
          (apply
            g$combine$5988$RCJqu
            (append
              (list (car g$list1$5990$RCJqu))
              (map car g$lists$5991$RCJqu)
              (list
                (apply
                  g$fold-right$5925$RCJqu
                  (g$cons*$5923$RCJqu
                    g$combine$5988$RCJqu
                    g$nil$5989$RCJqu
                    (cdr g$list1$5990$RCJqu)
                    (map cdr g$lists$5991$RCJqu))))))))))
   (g$remove$5926$RCJqu
     g$remove$6017$RCJqu
     (case-lambda
       ((g$obj$5992$RCJqu g$list$5993$RCJqu)
        (g$remp$5912$RCJqu
          (case-lambda
            ((g$x$5994$RCJqu) (equal? g$obj$5992$RCJqu g$x$5994$RCJqu)))
          g$list$5993$RCJqu))))
   (g$remv$5927$RCJqu
     g$remv$6018$RCJqu
     (case-lambda
       ((g$obj$5995$RCJqu g$list$5996$RCJqu)
        (g$remp$5912$RCJqu
          (case-lambda
            ((g$x$5997$RCJqu) (eqv? g$obj$5995$RCJqu g$x$5997$RCJqu)))
          g$list$5996$RCJqu))))
   (g$remq$5928$RCJqu
     g$remq$6019$RCJqu
     (case-lambda
       ((g$obj$5998$RCJqu g$list$5999$RCJqu)
        (g$remp$5912$RCJqu
          (case-lambda ((g$x$6000$RCJqu) (eq? g$obj$5998$RCJqu g$x$6000$RCJqu)))
          g$list$5999$RCJqu)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6020$RCJqu
     g$native-endianness$6131$RCJqu
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6021$RCJqu
     g$bytevector-u16-ref$6132$RCJqu
     (case-lambda
       ((g$bytevector$6049$RCJqu g$k$6050$RCJqu g$endianness$6051$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6049$RCJqu
          g$k$6050$RCJqu
          g$endianness$6051$RCJqu
          '2))))
   (g$bytevector-s16-ref$6022$RCJqu
     g$bytevector-s16-ref$6133$RCJqu
     (case-lambda
       ((g$bytevector$6052$RCJqu g$k$6053$RCJqu g$endianness$6054$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6052$RCJqu
          g$k$6053$RCJqu
          g$endianness$6054$RCJqu
          '2))))
   (g$bytevector-u16-native-ref$6023$RCJqu
     g$bytevector-u16-native-ref$6134$RCJqu
     (case-lambda
       ((g$bytevector$6055$RCJqu g$k$6056$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6055$RCJqu
          g$k$6056$RCJqu
          (g$native-endianness$6020$RCJqu)
          '2))))
   (g$bytevector-s16-native-ref$6024$RCJqu
     g$bytevector-s16-native-ref$6135$RCJqu
     (case-lambda
       ((g$bytevector$6057$RCJqu g$k$6058$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6057$RCJqu
          g$k$6058$RCJqu
          (g$native-endianness$6020$RCJqu)
          '2))))
   (g$bytevector-u16-set!$6025$RCJqu
     g$bytevector-u16-set!$6136$RCJqu
     (case-lambda
       ((g$bytevector$6059$RCJqu
          g$k$6060$RCJqu
          g$n$6061$RCJqu
          g$endianness$6062$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6059$RCJqu
          g$k$6060$RCJqu
          g$endianness$6062$RCJqu
          '2))))
   (g$bytevector-s16-set!$6026$RCJqu
     g$bytevector-s16-set!$6137$RCJqu
     (case-lambda
       ((g$bytevector$6063$RCJqu
          g$k$6064$RCJqu
          g$n$6065$RCJqu
          g$endianness$6066$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6063$RCJqu
          g$k$6064$RCJqu
          g$endianness$6066$RCJqu
          '2))))
   (g$bytevector-u16-native-set!$6027$RCJqu
     g$bytevector-u16-native-set!$6138$RCJqu
     (case-lambda
       ((g$bytevector$6067$RCJqu g$k$6068$RCJqu g$n$6069$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6067$RCJqu
          g$k$6068$RCJqu
          (g$native-endianness$6020$RCJqu)
          '2))))
   (g$bytevector-s16-native-set!$6028$RCJqu
     g$bytevector-s16-native-set!$6139$RCJqu
     (case-lambda
       ((g$bytevector$6070$RCJqu g$k$6071$RCJqu g$n$6072$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6070$RCJqu
          g$k$6071$RCJqu
          (g$native-endianness$6020$RCJqu)
          '2))))
   (g$bytevector-u32-ref$6029$RCJqu
     g$bytevector-u32-ref$6140$RCJqu
     (case-lambda
       ((g$bytevector$6073$RCJqu g$k$6074$RCJqu g$endianness$6075$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6073$RCJqu
          g$k$6074$RCJqu
          g$endianness$6075$RCJqu
          '4))))
   (g$bytevector-s32-ref$6030$RCJqu
     g$bytevector-s32-ref$6141$RCJqu
     (case-lambda
       ((g$bytevector$6076$RCJqu g$k$6077$RCJqu g$endianness$6078$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6076$RCJqu
          g$k$6077$RCJqu
          g$endianness$6078$RCJqu
          '4))))
   (g$bytevector-u32-native-ref$6031$RCJqu
     g$bytevector-u32-native-ref$6142$RCJqu
     (case-lambda
       ((g$bytevector$6079$RCJqu g$k$6080$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6079$RCJqu
          g$k$6080$RCJqu
          (g$native-endianness$6020$RCJqu)
          '4))))
   (g$bytevector-s32-native-ref$6032$RCJqu
     g$bytevector-s32-native-ref$6143$RCJqu
     (case-lambda
       ((g$bytevector$6081$RCJqu g$k$6082$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6081$RCJqu
          g$k$6082$RCJqu
          (g$native-endianness$6020$RCJqu)
          '4))))
   (g$bytevector-u32-set!$6033$RCJqu
     g$bytevector-u32-set!$6144$RCJqu
     (case-lambda
       ((g$bytevector$6083$RCJqu
          g$k$6084$RCJqu
          g$n$6085$RCJqu
          g$endianness$6086$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6083$RCJqu
          g$k$6084$RCJqu
          g$endianness$6086$RCJqu
          '4))))
   (g$bytevector-s32-set!$6034$RCJqu
     g$bytevector-s32-set!$6145$RCJqu
     (case-lambda
       ((g$bytevector$6087$RCJqu
          g$k$6088$RCJqu
          g$n$6089$RCJqu
          g$endianness$6090$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6087$RCJqu
          g$k$6088$RCJqu
          g$endianness$6090$RCJqu
          '4))))
   (g$bytevector-u32-native-set!$6035$RCJqu
     g$bytevector-u32-native-set!$6146$RCJqu
     (case-lambda
       ((g$bytevector$6091$RCJqu g$k$6092$RCJqu g$n$6093$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6091$RCJqu
          g$k$6092$RCJqu
          (g$native-endianness$6020$RCJqu)
          '4))))
   (g$bytevector-s32-native-set!$6036$RCJqu
     g$bytevector-s32-native-set!$6147$RCJqu
     (case-lambda
       ((g$bytevector$6094$RCJqu g$k$6095$RCJqu g$n$6096$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6094$RCJqu
          g$k$6095$RCJqu
          (g$native-endianness$6020$RCJqu)
          '4))))
   (g$bytevector-u64-ref$6037$RCJqu
     g$bytevector-u64-ref$6148$RCJqu
     (case-lambda
       ((g$bytevector$6097$RCJqu g$k$6098$RCJqu g$endianness$6099$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6097$RCJqu
          g$k$6098$RCJqu
          g$endianness$6099$RCJqu
          '8))))
   (g$bytevector-s64-ref$6038$RCJqu
     g$bytevector-s64-ref$6149$RCJqu
     (case-lambda
       ((g$bytevector$6100$RCJqu g$k$6101$RCJqu g$endianness$6102$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6100$RCJqu
          g$k$6101$RCJqu
          g$endianness$6102$RCJqu
          '8))))
   (g$bytevector-u64-native-ref$6039$RCJqu
     g$bytevector-u64-native-ref$6150$RCJqu
     (case-lambda
       ((g$bytevector$6103$RCJqu g$k$6104$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6103$RCJqu
          g$k$6104$RCJqu
          (g$native-endianness$6020$RCJqu)
          '8))))
   (g$bytevector-s64-native-ref$6040$RCJqu
     g$bytevector-s64-native-ref$6151$RCJqu
     (case-lambda
       ((g$bytevector$6105$RCJqu g$k$6106$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6105$RCJqu
          g$k$6106$RCJqu
          (g$native-endianness$6020$RCJqu)
          '8))))
   (g$bytevector-u64-set!$6041$RCJqu
     g$bytevector-u64-set!$6152$RCJqu
     (case-lambda
       ((g$bytevector$6107$RCJqu
          g$k$6108$RCJqu
          g$n$6109$RCJqu
          g$endianness$6110$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6107$RCJqu
          g$k$6108$RCJqu
          g$endianness$6110$RCJqu
          '8))))
   (g$bytevector-s64-set!$6042$RCJqu
     g$bytevector-s64-set!$6153$RCJqu
     (case-lambda
       ((g$bytevector$6111$RCJqu
          g$k$6112$RCJqu
          g$n$6113$RCJqu
          g$endianness$6114$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6111$RCJqu
          g$k$6112$RCJqu
          g$endianness$6114$RCJqu
          '8))))
   (g$bytevector-u64-native-set!$6043$RCJqu
     g$bytevector-u64-native-set!$6154$RCJqu
     (case-lambda
       ((g$bytevector$6115$RCJqu g$k$6116$RCJqu g$n$6117$RCJqu)
        (bytevector-uint-ref
          g$bytevector$6115$RCJqu
          g$k$6116$RCJqu
          (g$native-endianness$6020$RCJqu)
          '8))))
   (g$bytevector-s64-native-set!$6044$RCJqu
     g$bytevector-s64-native-set!$6155$RCJqu
     (case-lambda
       ((g$bytevector$6118$RCJqu g$k$6119$RCJqu g$n$6120$RCJqu)
        (bytevector-sint-ref
          g$bytevector$6118$RCJqu
          g$k$6119$RCJqu
          (g$native-endianness$6020$RCJqu)
          '8))))
   (g$bytevector-ieee-single-native-ref$6045$RCJqu
     g$bytevector-ieee-single-native-ref$6156$RCJqu
     (case-lambda
       ((g$bytevector$6121$RCJqu g$k$6122$RCJqu)
        (bytevector-ieee-single-ref
          g$bytevector$6121$RCJqu
          g$k$6122$RCJqu
          (g$native-endianness$6020$RCJqu)))))
   (g$bytevector-ieee-double-native-ref$6046$RCJqu
     g$bytevector-ieee-double-native-ref$6157$RCJqu
     (case-lambda
       ((g$bytevector$6123$RCJqu g$k$6124$RCJqu)
        (bytevector-ieee-double-ref
          g$bytevector$6123$RCJqu
          g$k$6124$RCJqu
          (g$native-endianness$6020$RCJqu)))))
   (g$bytevector-ieee-single-native-set!$6047$RCJqu
     g$bytevector-ieee-single-native-set!$6158$RCJqu
     (case-lambda
       ((g$bytevector$6125$RCJqu g$k$6126$RCJqu g$x$6127$RCJqu)
        (bytevector-ieee-single-set!
          g$bytevector$6125$RCJqu
          g$k$6126$RCJqu
          g$x$6127$RCJqu
          (g$native-endianness$6020$RCJqu)))))
   (g$bytevector-ieee-double-native-set!$6048$RCJqu
     g$bytevector-ieee-double-native-set!$6159$RCJqu
     (case-lambda
       ((g$bytevector$6128$RCJqu g$k$6129$RCJqu g$x$6130$RCJqu)
        (bytevector-ieee-double-set!
          g$bytevector$6128$RCJqu
          g$k$6129$RCJqu
          g$x$6130$RCJqu
          (g$native-endianness$6020$RCJqu))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme enums) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6889$6160$RCJqu
     g$6889$6255$RCJqu
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6892$RCJqu
       '#f
       '#f
       '#()))
   (g$6891$6161$RCJqu g$6891$6256$RCJqu '#f)
   (g$6890$6162$RCJqu
     g$6890$6257$RCJqu
     (make-record-constructor-descriptor
       g$6889$6160$RCJqu
       '#f
       g$6891$6161$RCJqu))
   (g$&condition?$6163$RCJqu
     g$&condition?$6258$RCJqu
     (record-predicate g$6889$6160$RCJqu))
   (g$make-&condition$6164$RCJqu
     g$make-&condition$6259$RCJqu
     (record-constructor g$6890$6162$RCJqu))
   (g$&condition-rtd$6165$RCJqu
     g$&condition-rtd$6260$RCJqu
     g$6889$6160$RCJqu)
   (g$&condition-rcd$6166$RCJqu
     g$&condition-rcd$6261$RCJqu
     g$6890$6162$RCJqu)
   (g$6905$6167$RCJqu
     g$6905$6262$RCJqu
     (make-record-type-descriptor
       '&message
       g$6889$6160$RCJqu
       'g$6908$RCJqu
       '#f
       '#f
       '#((immutable message))))
   (g$6907$6168$RCJqu g$6907$6263$RCJqu '#f)
   (g$6906$6169$RCJqu
     g$6906$6264$RCJqu
     (make-record-constructor-descriptor
       g$6905$6167$RCJqu
       g$6890$6162$RCJqu
       g$6907$6168$RCJqu))
   (g$6904$6170$RCJqu
     g$6904$6265$RCJqu
     (record-predicate g$6905$6167$RCJqu))
   (g$make-message-condition$6171$RCJqu
     g$make-message-condition$6266$RCJqu
     (record-constructor g$6906$6169$RCJqu))
   (g$6903$6172$RCJqu
     g$6903$6267$RCJqu
     (record-accessor g$6905$6167$RCJqu '0))
   (g$message-condition?$6173$RCJqu
     g$message-condition?$6268$RCJqu
     (condition-predicate g$6905$6167$RCJqu))
   (g$condition-message$6174$RCJqu
     g$condition-message$6269$RCJqu
     (condition-accessor g$6905$6167$RCJqu g$6903$6172$RCJqu))
   (g$6921$6175$RCJqu
     g$6921$6270$RCJqu
     (make-record-type-descriptor
       '&warning
       g$6889$6160$RCJqu
       'g$6924$RCJqu
       '#f
       '#f
       '#()))
   (g$6923$6176$RCJqu g$6923$6271$RCJqu '#f)
   (g$6922$6177$RCJqu
     g$6922$6272$RCJqu
     (make-record-constructor-descriptor
       g$6921$6175$RCJqu
       g$6890$6162$RCJqu
       g$6923$6176$RCJqu))
   (g$6920$6178$RCJqu
     g$6920$6273$RCJqu
     (record-predicate g$6921$6175$RCJqu))
   (g$make-warning$6179$RCJqu
     g$make-warning$6274$RCJqu
     (record-constructor g$6922$6177$RCJqu))
   (g$warning?$6180$RCJqu
     g$warning?$6275$RCJqu
     (condition-predicate g$6921$6175$RCJqu))
   (g$6935$6181$RCJqu
     g$6935$6276$RCJqu
     (make-record-type-descriptor
       '&serious
       g$6889$6160$RCJqu
       'g$6938$RCJqu
       '#f
       '#f
       '#()))
   (g$6937$6182$RCJqu g$6937$6277$RCJqu '#f)
   (g$6936$6183$RCJqu
     g$6936$6278$RCJqu
     (make-record-constructor-descriptor
       g$6935$6181$RCJqu
       g$6890$6162$RCJqu
       g$6937$6182$RCJqu))
   (g$6934$6184$RCJqu
     g$6934$6279$RCJqu
     (record-predicate g$6935$6181$RCJqu))
   (g$make-serious-condition$6185$RCJqu
     g$make-serious-condition$6280$RCJqu
     (record-constructor g$6936$6183$RCJqu))
   (g$serious-condition?$6186$RCJqu
     g$serious-condition?$6281$RCJqu
     (condition-predicate g$6935$6181$RCJqu))
   (g$6949$6187$RCJqu
     g$6949$6282$RCJqu
     (make-record-type-descriptor
       '&error
       g$6935$6181$RCJqu
       'g$6952$RCJqu
       '#f
       '#f
       '#()))
   (g$6951$6188$RCJqu g$6951$6283$RCJqu '#f)
   (g$6950$6189$RCJqu
     g$6950$6284$RCJqu
     (make-record-constructor-descriptor
       g$6949$6187$RCJqu
       g$6936$6183$RCJqu
       g$6951$6188$RCJqu))
   (g$6948$6190$RCJqu
     g$6948$6285$RCJqu
     (record-predicate g$6949$6187$RCJqu))
   (g$make-error$6191$RCJqu
     g$make-error$6286$RCJqu
     (record-constructor g$6950$6189$RCJqu))
   (g$error?$6192$RCJqu
     g$error?$6287$RCJqu
     (condition-predicate g$6949$6187$RCJqu))
   (g$6963$6193$RCJqu
     g$6963$6288$RCJqu
     (make-record-type-descriptor
       '&violation
       g$6935$6181$RCJqu
       'g$6966$RCJqu
       '#f
       '#f
       '#()))
   (g$6965$6194$RCJqu g$6965$6289$RCJqu '#f)
   (g$6964$6195$RCJqu
     g$6964$6290$RCJqu
     (make-record-constructor-descriptor
       g$6963$6193$RCJqu
       g$6936$6183$RCJqu
       g$6965$6194$RCJqu))
   (g$6962$6196$RCJqu
     g$6962$6291$RCJqu
     (record-predicate g$6963$6193$RCJqu))
   (g$make-violation$6197$RCJqu
     g$make-violation$6292$RCJqu
     (record-constructor g$6964$6195$RCJqu))
   (g$violation?$6198$RCJqu
     g$violation?$6293$RCJqu
     (condition-predicate g$6963$6193$RCJqu))
   (g$6977$6199$RCJqu
     g$6977$6294$RCJqu
     (make-record-type-descriptor
       '&assertion
       g$6963$6193$RCJqu
       'g$6980$RCJqu
       '#f
       '#f
       '#()))
   (g$6979$6200$RCJqu g$6979$6295$RCJqu '#f)
   (g$6978$6201$RCJqu
     g$6978$6296$RCJqu
     (make-record-constructor-descriptor
       g$6977$6199$RCJqu
       g$6964$6195$RCJqu
       g$6979$6200$RCJqu))
   (g$6976$6202$RCJqu
     g$6976$6297$RCJqu
     (record-predicate g$6977$6199$RCJqu))
   (g$make-assertion-violation$6203$RCJqu
     g$make-assertion-violation$6298$RCJqu
     (record-constructor g$6978$6201$RCJqu))
   (g$assertion-violation?$6204$RCJqu
     g$assertion-violation?$6299$RCJqu
     (condition-predicate g$6977$6199$RCJqu))
   (g$6992$6205$RCJqu
     g$6992$6300$RCJqu
     (make-record-type-descriptor
       '&irritants
       g$6889$6160$RCJqu
       'g$6995$RCJqu
       '#f
       '#f
       '#((immutable irritants))))
   (g$6994$6206$RCJqu g$6994$6301$RCJqu '#f)
   (g$6993$6207$RCJqu
     g$6993$6302$RCJqu
     (make-record-constructor-descriptor
       g$6992$6205$RCJqu
       g$6890$6162$RCJqu
       g$6994$6206$RCJqu))
   (g$6991$6208$RCJqu
     g$6991$6303$RCJqu
     (record-predicate g$6992$6205$RCJqu))
   (g$make-irritants-condition$6209$RCJqu
     g$make-irritants-condition$6304$RCJqu
     (record-constructor g$6993$6207$RCJqu))
   (g$6990$6210$RCJqu
     g$6990$6305$RCJqu
     (record-accessor g$6992$6205$RCJqu '0))
   (g$irritants-condition?$6211$RCJqu
     g$irritants-condition?$6306$RCJqu
     (condition-predicate g$6992$6205$RCJqu))
   (g$condition-irritants$6212$RCJqu
     g$condition-irritants$6307$RCJqu
     (condition-accessor g$6992$6205$RCJqu g$6990$6210$RCJqu))
   (g$7009$6213$RCJqu
     g$7009$6308$RCJqu
     (make-record-type-descriptor
       '&who
       g$6889$6160$RCJqu
       'g$7012$RCJqu
       '#f
       '#f
       '#((immutable who))))
   (g$7011$6214$RCJqu g$7011$6309$RCJqu '#f)
   (g$7010$6215$RCJqu
     g$7010$6310$RCJqu
     (make-record-constructor-descriptor
       g$7009$6213$RCJqu
       g$6890$6162$RCJqu
       g$7011$6214$RCJqu))
   (g$7008$6216$RCJqu
     g$7008$6311$RCJqu
     (record-predicate g$7009$6213$RCJqu))
   (g$make-who-condition$6217$RCJqu
     g$make-who-condition$6312$RCJqu
     (record-constructor g$7010$6215$RCJqu))
   (g$7007$6218$RCJqu
     g$7007$6313$RCJqu
     (record-accessor g$7009$6213$RCJqu '0))
   (g$who-condition?$6219$RCJqu
     g$who-condition?$6314$RCJqu
     (condition-predicate g$7009$6213$RCJqu))
   (g$condition-who$6220$RCJqu
     g$condition-who$6315$RCJqu
     (condition-accessor g$7009$6213$RCJqu g$7007$6218$RCJqu))
   (g$7025$6221$RCJqu
     g$7025$6316$RCJqu
     (make-record-type-descriptor
       '&non-continuable
       g$6963$6193$RCJqu
       'g$7028$RCJqu
       '#f
       '#f
       '#()))
   (g$7027$6222$RCJqu g$7027$6317$RCJqu '#f)
   (g$7026$6223$RCJqu
     g$7026$6318$RCJqu
     (make-record-constructor-descriptor
       g$7025$6221$RCJqu
       g$6964$6195$RCJqu
       g$7027$6222$RCJqu))
   (g$7024$6224$RCJqu
     g$7024$6319$RCJqu
     (record-predicate g$7025$6221$RCJqu))
   (g$make-non-continuable-violation$6225$RCJqu
     g$make-non-continuable-violation$6320$RCJqu
     (record-constructor g$7026$6223$RCJqu))
   (g$non-continuable-violation?$6226$RCJqu
     g$non-continuable-violation?$6321$RCJqu
     (condition-predicate g$7025$6221$RCJqu))
   (g$7039$6227$RCJqu
     g$7039$6322$RCJqu
     (make-record-type-descriptor
       '&implementation-restriction
       g$6963$6193$RCJqu
       'g$7042$RCJqu
       '#f
       '#f
       '#()))
   (g$7041$6228$RCJqu g$7041$6323$RCJqu '#f)
   (g$7040$6229$RCJqu
     g$7040$6324$RCJqu
     (make-record-constructor-descriptor
       g$7039$6227$RCJqu
       g$6964$6195$RCJqu
       g$7041$6228$RCJqu))
   (g$7038$6230$RCJqu
     g$7038$6325$RCJqu
     (record-predicate g$7039$6227$RCJqu))
   (g$make-implementation-restriction-violation$6231$RCJqu
     g$make-implementation-restriction-violation$6326$RCJqu
     (record-constructor g$7040$6229$RCJqu))
   (g$implementation-restriction-violation?$6232$RCJqu
     g$implementation-restriction-violation?$6327$RCJqu
     (condition-predicate g$7039$6227$RCJqu))
   (g$7053$6233$RCJqu
     g$7053$6328$RCJqu
     (make-record-type-descriptor
       '&lexical
       g$6963$6193$RCJqu
       'g$7056$RCJqu
       '#f
       '#f
       '#()))
   (g$7055$6234$RCJqu g$7055$6329$RCJqu '#f)
   (g$7054$6235$RCJqu
     g$7054$6330$RCJqu
     (make-record-constructor-descriptor
       g$7053$6233$RCJqu
       g$6964$6195$RCJqu
       g$7055$6234$RCJqu))
   (g$7052$6236$RCJqu
     g$7052$6331$RCJqu
     (record-predicate g$7053$6233$RCJqu))
   (g$make-lexical-violation$6237$RCJqu
     g$make-lexical-violation$6332$RCJqu
     (record-constructor g$7054$6235$RCJqu))
   (g$lexical-violation?$6238$RCJqu
     g$lexical-violation?$6333$RCJqu
     (condition-predicate g$7053$6233$RCJqu))
   (g$7069$6239$RCJqu
     g$7069$6334$RCJqu
     (make-record-type-descriptor
       '&syntax
       g$6963$6193$RCJqu
       'g$7072$RCJqu
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7071$6240$RCJqu g$7071$6335$RCJqu '#f)
   (g$7070$6241$RCJqu
     g$7070$6336$RCJqu
     (make-record-constructor-descriptor
       g$7069$6239$RCJqu
       g$6964$6195$RCJqu
       g$7071$6240$RCJqu))
   (g$7068$6242$RCJqu
     g$7068$6337$RCJqu
     (record-predicate g$7069$6239$RCJqu))
   (g$make-syntax-violation$6243$RCJqu
     g$make-syntax-violation$6338$RCJqu
     (record-constructor g$7070$6241$RCJqu))
   (g$7066$6244$RCJqu
     g$7066$6339$RCJqu
     (record-accessor g$7069$6239$RCJqu '0))
   (g$7067$6245$RCJqu
     g$7067$6340$RCJqu
     (record-accessor g$7069$6239$RCJqu '1))
   (g$syntax-violation?$6246$RCJqu
     g$syntax-violation?$6341$RCJqu
     (condition-predicate g$7069$6239$RCJqu))
   (g$syntax-violation-form$6247$RCJqu
     g$syntax-violation-form$6342$RCJqu
     (condition-accessor g$7069$6239$RCJqu g$7066$6244$RCJqu))
   (g$syntax-violation-subform$6248$RCJqu
     g$syntax-violation-subform$6343$RCJqu
     (condition-accessor g$7069$6239$RCJqu g$7067$6245$RCJqu))
   (g$7087$6249$RCJqu
     g$7087$6344$RCJqu
     (make-record-type-descriptor
       '&undefined
       g$6963$6193$RCJqu
       'g$7090$RCJqu
       '#f
       '#f
       '#()))
   (g$7089$6250$RCJqu g$7089$6345$RCJqu '#f)
   (g$7088$6251$RCJqu
     g$7088$6346$RCJqu
     (make-record-constructor-descriptor
       g$7087$6249$RCJqu
       g$6964$6195$RCJqu
       g$7089$6250$RCJqu))
   (g$7086$6252$RCJqu
     g$7086$6347$RCJqu
     (record-predicate g$7087$6249$RCJqu))
   (g$make-undefined-violation$6253$RCJqu
     g$make-undefined-violation$6348$RCJqu
     (record-constructor g$7088$6251$RCJqu))
   (g$undefined-violation?$6254$RCJqu
     g$undefined-violation?$6349$RCJqu
     (condition-predicate g$7087$6249$RCJqu)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6350$RCJqu
     g$append!$6356$RCJqu
     (case-lambda
       ((g$a$6351$RCJqu . g$b$6352$RCJqu)
        (if (null? g$a$6351$RCJqu)
          g$b$6352$RCJqu
          (if (null? g$b$6352$RCJqu)
            g$a$6351$RCJqu
            (begin
              ((letrec ((g$f$6353$RCJqu
                          (case-lambda
                            ((g$a$6354$RCJqu)
                             ((case-lambda
                                ((g$n$6355$RCJqu)
                                 (if (null? g$n$6355$RCJqu)
                                   (set-cdr! g$a$6354$RCJqu g$b$6352$RCJqu)
                                   (g$f$6353$RCJqu g$n$6355$RCJqu))))
                              (cdr g$a$6354$RCJqu))))))
                 g$f$6353$RCJqu)
               g$a$6351$RCJqu)
              g$a$6351$RCJqu)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6357$RCJqu
     g$sign$6368$RCJqu
     (case-lambda
       ((g$n$6361$RCJqu)
        (if (> g$n$6361$RCJqu '0) '1 (if (< g$n$6361$RCJqu '0) '-1 '0)))))
   (g$quotient$6358$RCJqu
     g$quotient$6369$RCJqu
     (case-lambda
       ((g$n1$6362$RCJqu g$n2$6363$RCJqu)
        (* (g$sign$6357$RCJqu g$n1$6362$RCJqu)
           (g$sign$6357$RCJqu g$n2$6363$RCJqu)
           (div (abs g$n1$6362$RCJqu) (abs g$n2$6363$RCJqu))))))
   (g$remainder$6359$RCJqu
     g$remainder$6370$RCJqu
     (case-lambda
       ((g$n1$6364$RCJqu g$n2$6365$RCJqu)
        (* (g$sign$6357$RCJqu g$n1$6364$RCJqu)
           (mod (abs g$n1$6364$RCJqu) (abs g$n2$6365$RCJqu))))))
   (g$modulo$6360$RCJqu
     g$modulo$6371$RCJqu
     (case-lambda
       ((g$n1$6366$RCJqu g$n2$6367$RCJqu)
        (* (g$sign$6357$RCJqu g$n2$6367$RCJqu)
           (mod (* (g$sign$6357$RCJqu g$n2$6367$RCJqu) g$n1$6366$RCJqu)
                (abs g$n2$6367$RCJqu)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6372$RCJqu
     g$split$6398$RCJqu
     (case-lambda
       ((g$ls$6375$RCJqu)
        ((letrec ((g$loop$6376$RCJqu
                    (case-lambda
                      ((g$rest$6377$RCJqu g$left$6378$RCJqu g$right$6379$RCJqu)
                       (if (null? g$rest$6377$RCJqu)
                         (cons g$left$6378$RCJqu g$right$6379$RCJqu)
                         (if (null? (cdr g$rest$6377$RCJqu))
                           (cons
                             (cons (car g$rest$6377$RCJqu) g$left$6378$RCJqu)
                             g$right$6379$RCJqu)
                           (g$loop$6376$RCJqu
                             (g$cddr$5545$RCJqu g$rest$6377$RCJqu)
                             (cons (car g$rest$6377$RCJqu) g$left$6378$RCJqu)
                             (cons
                               (g$cadr$5543$RCJqu g$rest$6377$RCJqu)
                               g$right$6379$RCJqu))))))))
           g$loop$6376$RCJqu)
         g$ls$6375$RCJqu
         '()
         '()))))
   (g$reverse-it$6373$RCJqu
     g$reverse-it$6399$RCJqu
     (case-lambda
       ((g$head$6380$RCJqu g$tail$6381$RCJqu)
        (if (null? g$head$6380$RCJqu)
          g$tail$6381$RCJqu
          ((case-lambda
             ((g$hd$6382$RCJqu g$tl$6383$RCJqu)
              (g$reverse-it$6373$RCJqu
                g$tl$6383$RCJqu
                (cons g$hd$6382$RCJqu g$tail$6381$RCJqu))))
           (car g$head$6380$RCJqu)
           (cdr g$head$6380$RCJqu))))))
   (g$list-sort$6374$RCJqu
     g$list-sort$6400$RCJqu
     (case-lambda
       ((g$precedes?$6384$RCJqu g$ls$6385$RCJqu)
        ((case-lambda
           ((g$merge$6386$RCJqu)
            ((case-lambda
               (()
                (if (null? g$ls$6385$RCJqu)
                  '()
                  ((letrec ((g$helper$6387$RCJqu
                              (case-lambda
                                ((g$piece$6388$RCJqu)
                                 (if (null? (cdr g$piece$6388$RCJqu))
                                   g$piece$6388$RCJqu
                                   ((case-lambda
                                      ((g$parts$6389$RCJqu)
                                       (g$merge$6386$RCJqu
                                         (g$helper$6387$RCJqu
                                           (car g$parts$6389$RCJqu))
                                         (g$helper$6387$RCJqu
                                           (cdr g$parts$6389$RCJqu)))))
                                    (g$split$6372$RCJqu
                                      g$piece$6388$RCJqu)))))))
                     g$helper$6387$RCJqu)
                   g$ls$6385$RCJqu)))))))
         (case-lambda
           ((g$list-1$6390$RCJqu g$list-2$6391$RCJqu)
            ((letrec ((g$loop$6392$RCJqu
                        (case-lambda
                          ((g$source-1$6393$RCJqu
                             g$source-2$6394$RCJqu
                             g$so-far$6395$RCJqu)
                           (if (null? g$source-1$6393$RCJqu)
                             (g$reverse-it$6373$RCJqu
                               g$so-far$6395$RCJqu
                               g$source-2$6394$RCJqu)
                             (if (null? g$source-2$6394$RCJqu)
                               (g$reverse-it$6373$RCJqu
                                 g$so-far$6395$RCJqu
                                 g$source-1$6393$RCJqu)
                               ((case-lambda
                                  ((g$car-1$6396$RCJqu g$car-2$6397$RCJqu)
                                   (if (g$precedes?$6384$RCJqu
                                         g$car-2$6397$RCJqu
                                         g$car-1$6396$RCJqu)
                                     (g$loop$6392$RCJqu
                                       g$source-1$6393$RCJqu
                                       (cdr g$source-2$6394$RCJqu)
                                       (cons
                                         g$car-2$6397$RCJqu
                                         g$so-far$6395$RCJqu))
                                     (g$loop$6392$RCJqu
                                       g$source-2$6394$RCJqu
                                       (cdr g$source-1$6393$RCJqu)
                                       (cons
                                         g$car-1$6396$RCJqu
                                         g$so-far$6395$RCJqu)))))
                                (car g$source-1$6393$RCJqu)
                                (car g$source-2$6394$RCJqu))))))))
               g$loop$6392$RCJqu)
             g$list-1$6390$RCJqu
             g$list-2$6391$RCJqu
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6438$RCJqu
     g$bitwise-if$6489$RCJqu
     (case-lambda
       ((g$ei1$6446$RCJqu g$ei2$6447$RCJqu g$ei3$6448$RCJqu)
        (bitwise-ior
          (bitwise-and g$ei1$6446$RCJqu g$ei2$6447$RCJqu)
          (bitwise-and (bitwise-not g$ei1$6446$RCJqu) g$ei3$6448$RCJqu)))))
   (g$bitwise-copy-bit$6439$RCJqu
     g$bitwise-copy-bit$6490$RCJqu
     (case-lambda
       ((g$ei1$6449$RCJqu g$ei2$6450$RCJqu g$ei3$6451$RCJqu)
        ((case-lambda
           ((g$mask$6452$RCJqu)
            ((case-lambda
               (()
                (g$bitwise-if$6438$RCJqu
                  g$mask$6452$RCJqu
                  (g$bitwise-arithmetic-shift-left$6442$RCJqu
                    g$ei3$6451$RCJqu
                    g$ei2$6450$RCJqu)
                  g$ei1$6449$RCJqu))))))
         (g$bitwise-arithmetic-shift-left$6442$RCJqu '1 g$ei2$6450$RCJqu)))))
   (g$bitwise-bit-field$6440$RCJqu
     g$bitwise-bit-field$6491$RCJqu
     (case-lambda
       ((g$ei1$6453$RCJqu g$ei2$6454$RCJqu g$ei3$6455$RCJqu)
        ((case-lambda
           ((g$mask$6456$RCJqu)
            (g$bitwise-arithmetic-shift-right$6443$RCJqu
              (bitwise-and g$ei1$6453$RCJqu g$mask$6456$RCJqu)
              g$ei2$6454$RCJqu)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6442$RCJqu
             '-1
             g$ei3$6455$RCJqu))))))
   (g$bitwise-copy-bit-field$6441$RCJqu
     g$bitwise-copy-bit-field$6492$RCJqu
     (case-lambda
       ((g$ei1$6457$RCJqu g$ei2$6458$RCJqu g$ei3$6459$RCJqu g$ei4$6460$RCJqu)
        ((case-lambda
           ((g$to$6461$RCJqu)
            ((case-lambda
               ((g$start$6462$RCJqu)
                ((case-lambda
                   ((g$end$6463$RCJqu)
                    ((case-lambda
                       ((g$from$6464$RCJqu)
                        ((case-lambda
                           ((g$mask1$6465$RCJqu)
                            ((case-lambda
                               ((g$mask2$6466$RCJqu)
                                ((case-lambda
                                   ((g$mask$6467$RCJqu)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6438$RCJqu
                                          g$mask$6467$RCJqu
                                          (g$bitwise-arithmetic-shift-left$6442$RCJqu
                                            g$from$6464$RCJqu
                                            g$start$6462$RCJqu)
                                          g$to$6461$RCJqu))))))
                                 (bitwise-and
                                   g$mask1$6465$RCJqu
                                   g$mask2$6466$RCJqu))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6442$RCJqu
                                 '-1
                                 g$end$6463$RCJqu)))))
                         (g$bitwise-arithmetic-shift-left$6442$RCJqu
                           '-1
                           g$start$6462$RCJqu))))
                     g$ei4$6460$RCJqu)))
                 g$ei3$6459$RCJqu)))
             g$ei2$6458$RCJqu)))
         g$ei1$6457$RCJqu))))
   (g$bitwise-arithmetic-shift-left$6442$RCJqu
     g$bitwise-arithmetic-shift-left$6493$RCJqu
     (case-lambda
       ((g$ei1$6468$RCJqu g$ei2$6469$RCJqu)
        (bitwise-arithmetic-shift g$ei1$6468$RCJqu g$ei2$6469$RCJqu))))
   (g$bitwise-arithmetic-shift-right$6443$RCJqu
     g$bitwise-arithmetic-shift-right$6494$RCJqu
     (case-lambda
       ((g$ei1$6470$RCJqu g$ei2$6471$RCJqu)
        (bitwise-arithmetic-shift g$ei1$6470$RCJqu (- g$ei2$6471$RCJqu)))))
   (g$bitwise-rotate-bit-field$6444$RCJqu
     g$bitwise-rotate-bit-field$6495$RCJqu
     (case-lambda
       ((g$ei1$6472$RCJqu g$ei2$6473$RCJqu g$ei3$6474$RCJqu g$ei4$6475$RCJqu)
        ((case-lambda
           ((g$n$6476$RCJqu)
            ((case-lambda
               ((g$start$6477$RCJqu)
                ((case-lambda
                   ((g$end$6478$RCJqu)
                    ((case-lambda
                       ((g$count$6479$RCJqu)
                        ((case-lambda
                           ((g$width$6480$RCJqu)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6480$RCJqu)
                                  ((case-lambda
                                     ((g$count$6481$RCJqu)
                                      ((case-lambda
                                         ((g$field0$6482$RCJqu)
                                          ((case-lambda
                                             ((g$field1$6483$RCJqu)
                                              ((case-lambda
                                                 ((g$field2$6484$RCJqu)
                                                  ((case-lambda
                                                     ((g$field$6485$RCJqu)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6441$RCJqu
                                                            g$n$6476$RCJqu
                                                            g$start$6477$RCJqu
                                                            g$end$6478$RCJqu
                                                            g$field$6485$RCJqu))))))
                                                   (bitwise-ior
                                                     g$field1$6483$RCJqu
                                                     g$field2$6484$RCJqu))))
                                               (g$bitwise-arithmetic-shift-right$6443$RCJqu
                                                 g$field0$6482$RCJqu
                                                 (- g$width$6480$RCJqu
                                                    g$count$6481$RCJqu)))))
                                           (g$bitwise-arithmetic-shift-left$6442$RCJqu
                                             g$field0$6482$RCJqu
                                             g$count$6481$RCJqu))))
                                       (g$bitwise-bit-field$6440$RCJqu
                                         g$n$6476$RCJqu
                                         g$start$6477$RCJqu
                                         g$end$6478$RCJqu))))
                                   (mod g$count$6479$RCJqu g$width$6480$RCJqu))
                                  g$n$6476$RCJqu))))))
                         (- g$end$6478$RCJqu g$start$6477$RCJqu))))
                     g$ei4$6475$RCJqu)))
                 g$ei3$6474$RCJqu)))
             g$ei2$6473$RCJqu)))
         g$ei1$6472$RCJqu))))
   (g$bitwise-reverse-bit-field$6445$RCJqu
     g$bitwise-reverse-bit-field$6496$RCJqu
     (case-lambda
       ((g$ei1$6486$RCJqu g$ei2$6487$RCJqu g$ei3$6488$RCJqu) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6497$RCJqu
     g$fxif$6544$RCJqu
     (case-lambda
       ((g$fx1$6504$RCJqu g$fx2$6505$RCJqu g$fx3$6506$RCJqu)
        (fxior
          (fxand g$fx1$6504$RCJqu g$fx2$6505$RCJqu)
          (fxand (fxnot g$fx1$6504$RCJqu) g$fx3$6506$RCJqu)))))
   (g$fxcopy-bit$6498$RCJqu
     g$fxcopy-bit$6545$RCJqu
     (case-lambda
       ((g$fx1$6507$RCJqu g$fx2$6508$RCJqu g$fx3$6509$RCJqu)
        ((case-lambda
           ((g$mask$6510$RCJqu)
            ((case-lambda
               (()
                (g$fxif$6497$RCJqu
                  g$mask$6510$RCJqu
                  (g$fxarithmetic-shift-left$6501$RCJqu
                    g$fx3$6509$RCJqu
                    g$fx2$6508$RCJqu)
                  g$fx1$6507$RCJqu))))))
         (g$fxarithmetic-shift-left$6501$RCJqu '1 g$fx2$6508$RCJqu)))))
   (g$fxbit-field$6499$RCJqu
     g$fxbit-field$6546$RCJqu
     (case-lambda
       ((g$fx1$6511$RCJqu g$fx2$6512$RCJqu g$fx3$6513$RCJqu)
        ((case-lambda
           ((g$mask$6514$RCJqu)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6502$RCJqu
                  (fxand g$fx1$6511$RCJqu g$mask$6514$RCJqu)
                  g$fx2$6512$RCJqu))))))
         (fxnot (g$fxarithmetic-shift-left$6501$RCJqu '-1 g$fx3$6513$RCJqu))))))
   (g$fxcopy-bit-field$6500$RCJqu
     g$fxcopy-bit-field$6547$RCJqu
     (case-lambda
       ((g$fx1$6515$RCJqu g$fx2$6516$RCJqu g$fx3$6517$RCJqu g$fx4$6518$RCJqu)
        ((case-lambda
           ((g$to$6519$RCJqu)
            ((case-lambda
               ((g$start$6520$RCJqu)
                ((case-lambda
                   ((g$end$6521$RCJqu)
                    ((case-lambda
                       ((g$from$6522$RCJqu)
                        ((case-lambda
                           ((g$mask1$6523$RCJqu)
                            ((case-lambda
                               ((g$mask2$6524$RCJqu)
                                ((case-lambda
                                   ((g$mask$6525$RCJqu)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6497$RCJqu
                                          g$mask$6525$RCJqu
                                          (g$fxarithmetic-shift-left$6501$RCJqu
                                            g$from$6522$RCJqu
                                            g$start$6520$RCJqu)
                                          g$to$6519$RCJqu))))))
                                 (fxand
                                   g$mask1$6523$RCJqu
                                   g$mask2$6524$RCJqu))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6501$RCJqu
                                 '-1
                                 g$end$6521$RCJqu)))))
                         (g$fxarithmetic-shift-left$6501$RCJqu
                           '-1
                           g$start$6520$RCJqu))))
                     g$fx4$6518$RCJqu)))
                 g$fx3$6517$RCJqu)))
             g$fx2$6516$RCJqu)))
         g$fx1$6515$RCJqu))))
   (g$fxarithmetic-shift-left$6501$RCJqu
     g$fxarithmetic-shift-left$6548$RCJqu
     (case-lambda
       ((g$fx1$6526$RCJqu g$fx2$6527$RCJqu)
        (fxarithmetic-shift g$fx1$6526$RCJqu g$fx2$6527$RCJqu))))
   (g$fxarithmetic-shift-right$6502$RCJqu
     g$fxarithmetic-shift-right$6549$RCJqu
     (case-lambda
       ((g$fx1$6528$RCJqu g$fx2$6529$RCJqu)
        (fxarithmetic-shift g$fx1$6528$RCJqu (- g$fx2$6529$RCJqu)))))
   (g$fxrotate-bit-field$6503$RCJqu
     g$fxrotate-bit-field$6550$RCJqu
     (case-lambda
       ((g$fx1$6530$RCJqu g$fx2$6531$RCJqu g$fx3$6532$RCJqu g$fx4$6533$RCJqu)
        ((case-lambda
           ((g$n$6534$RCJqu)
            ((case-lambda
               ((g$start$6535$RCJqu)
                ((case-lambda
                   ((g$end$6536$RCJqu)
                    ((case-lambda
                       ((g$count$6537$RCJqu)
                        ((case-lambda
                           ((g$width$6538$RCJqu)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6538$RCJqu)
                                  ((case-lambda
                                     ((g$count$6539$RCJqu)
                                      ((case-lambda
                                         ((g$field0$6540$RCJqu)
                                          ((case-lambda
                                             ((g$field1$6541$RCJqu)
                                              ((case-lambda
                                                 ((g$field2$6542$RCJqu)
                                                  ((case-lambda
                                                     ((g$field$6543$RCJqu)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6500$RCJqu
                                                            g$n$6534$RCJqu
                                                            g$start$6535$RCJqu
                                                            g$end$6536$RCJqu
                                                            g$field$6543$RCJqu))))))
                                                   (fxior
                                                     g$field1$6541$RCJqu
                                                     g$field2$6542$RCJqu))))
                                               (g$fxarithmetic-shift-right$6502$RCJqu
                                                 g$field0$6540$RCJqu
                                                 (- g$width$6538$RCJqu
                                                    g$count$6539$RCJqu)))))
                                           (g$fxarithmetic-shift-left$6501$RCJqu
                                             g$field0$6540$RCJqu
                                             g$count$6539$RCJqu))))
                                       (g$fxbit-field$6499$RCJqu
                                         g$n$6534$RCJqu
                                         g$start$6535$RCJqu
                                         g$end$6536$RCJqu))))
                                   (mod g$count$6537$RCJqu g$width$6538$RCJqu))
                                  g$n$6534$RCJqu))))))
                         (- g$end$6536$RCJqu g$start$6535$RCJqu))))
                     g$fx4$6533$RCJqu)))
                 g$fx3$6532$RCJqu)))
             g$fx2$6531$RCJqu)))
         g$fx1$6530$RCJqu)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7304$6551$RCJqu
     g$7304$6563$RCJqu
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7307$RCJqu
       '#f
       '#f
       '#()))
   (g$7306$6552$RCJqu g$7306$6564$RCJqu '#f)
   (g$7305$6553$RCJqu
     g$7305$6565$RCJqu
     (make-record-constructor-descriptor
       g$7304$6551$RCJqu
       &implementation-restriction-rcd
       g$7306$6552$RCJqu))
   (g$7303$6554$RCJqu
     g$7303$6566$RCJqu
     (record-predicate g$7304$6551$RCJqu))
   (g$make-no-infinities-violation$6555$RCJqu
     g$make-no-infinities-violation$6567$RCJqu
     (record-constructor g$7305$6553$RCJqu))
   (g$no-infinities-violation?$6556$RCJqu
     g$no-infinities-violation?$6568$RCJqu
     (condition-predicate g$7304$6551$RCJqu))
   (g$7318$6557$RCJqu
     g$7318$6569$RCJqu
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7321$RCJqu
       '#f
       '#f
       '#()))
   (g$7320$6558$RCJqu g$7320$6570$RCJqu '#f)
   (g$7319$6559$RCJqu
     g$7319$6571$RCJqu
     (make-record-constructor-descriptor
       g$7318$6557$RCJqu
       &implementation-restriction-rcd
       g$7320$6558$RCJqu))
   (g$7317$6560$RCJqu
     g$7317$6572$RCJqu
     (record-predicate g$7318$6557$RCJqu))
   (g$make-no-nans-violation$6561$RCJqu
     g$make-no-nans-violation$6573$RCJqu
     (record-constructor g$7319$6559$RCJqu))
   (g$no-nans-violation?$6562$RCJqu
     g$no-nans-violation?$6574$RCJqu
     (condition-predicate g$7318$6557$RCJqu)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7333$6575$RCJqu
     g$7333$6655$RCJqu
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7336$RCJqu
       '#f
       '#f
       '#()))
   (g$7335$6576$RCJqu g$7335$6656$RCJqu '#f)
   (g$7334$6577$RCJqu
     g$7334$6657$RCJqu
     (make-record-constructor-descriptor
       g$7333$6575$RCJqu
       &error-rcd
       g$7335$6576$RCJqu))
   (g$7332$6578$RCJqu
     g$7332$6658$RCJqu
     (record-predicate g$7333$6575$RCJqu))
   (g$make-i/o-error$6579$RCJqu
     g$make-i/o-error$6659$RCJqu
     (record-constructor g$7334$6577$RCJqu))
   (g$i/o-error?$6580$RCJqu
     g$i/o-error?$6660$RCJqu
     (condition-predicate g$7333$6575$RCJqu))
   (g$7347$6581$RCJqu
     g$7347$6661$RCJqu
     (make-record-type-descriptor
       '&i/o-read
       g$7333$6575$RCJqu
       'g$7350$RCJqu
       '#f
       '#f
       '#()))
   (g$7349$6582$RCJqu g$7349$6662$RCJqu '#f)
   (g$7348$6583$RCJqu
     g$7348$6663$RCJqu
     (make-record-constructor-descriptor
       g$7347$6581$RCJqu
       g$7334$6577$RCJqu
       g$7349$6582$RCJqu))
   (g$7346$6584$RCJqu
     g$7346$6664$RCJqu
     (record-predicate g$7347$6581$RCJqu))
   (g$make-i/o-read-error$6585$RCJqu
     g$make-i/o-read-error$6665$RCJqu
     (record-constructor g$7348$6583$RCJqu))
   (g$i/o-read-error?$6586$RCJqu
     g$i/o-read-error?$6666$RCJqu
     (condition-predicate g$7347$6581$RCJqu))
   (g$7361$6587$RCJqu
     g$7361$6667$RCJqu
     (make-record-type-descriptor
       '&i/o-write
       g$7333$6575$RCJqu
       'g$7364$RCJqu
       '#f
       '#f
       '#()))
   (g$7363$6588$RCJqu g$7363$6668$RCJqu '#f)
   (g$7362$6589$RCJqu
     g$7362$6669$RCJqu
     (make-record-constructor-descriptor
       g$7361$6587$RCJqu
       g$7334$6577$RCJqu
       g$7363$6588$RCJqu))
   (g$7360$6590$RCJqu
     g$7360$6670$RCJqu
     (record-predicate g$7361$6587$RCJqu))
   (g$make-i/o-write-error$6591$RCJqu
     g$make-i/o-write-error$6671$RCJqu
     (record-constructor g$7362$6589$RCJqu))
   (g$i/o-write-error?$6592$RCJqu
     g$i/o-write-error?$6672$RCJqu
     (condition-predicate g$7361$6587$RCJqu))
   (g$7376$6593$RCJqu
     g$7376$6673$RCJqu
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7333$6575$RCJqu
       'g$7379$RCJqu
       '#f
       '#f
       '#((immutable position))))
   (g$7378$6594$RCJqu g$7378$6674$RCJqu '#f)
   (g$7377$6595$RCJqu
     g$7377$6675$RCJqu
     (make-record-constructor-descriptor
       g$7376$6593$RCJqu
       g$7334$6577$RCJqu
       g$7378$6594$RCJqu))
   (g$7375$6596$RCJqu
     g$7375$6676$RCJqu
     (record-predicate g$7376$6593$RCJqu))
   (g$make-i/o-invalid-position-error$6597$RCJqu
     g$make-i/o-invalid-position-error$6677$RCJqu
     (record-constructor g$7377$6595$RCJqu))
   (g$7374$6598$RCJqu
     g$7374$6678$RCJqu
     (record-accessor g$7376$6593$RCJqu '0))
   (g$i/o-invalid-position-error?$6599$RCJqu
     g$i/o-invalid-position-error?$6679$RCJqu
     (condition-predicate g$7376$6593$RCJqu))
   (g$i/o-error-position$6600$RCJqu
     g$i/o-error-position$6680$RCJqu
     (condition-accessor g$7376$6593$RCJqu g$7374$6598$RCJqu))
   (g$7393$6601$RCJqu
     g$7393$6681$RCJqu
     (make-record-type-descriptor
       '&i/o-filename
       g$7333$6575$RCJqu
       'g$7396$RCJqu
       '#f
       '#f
       '#((immutable filename))))
   (g$7395$6602$RCJqu g$7395$6682$RCJqu '#f)
   (g$7394$6603$RCJqu
     g$7394$6683$RCJqu
     (make-record-constructor-descriptor
       g$7393$6601$RCJqu
       g$7334$6577$RCJqu
       g$7395$6602$RCJqu))
   (g$7392$6604$RCJqu
     g$7392$6684$RCJqu
     (record-predicate g$7393$6601$RCJqu))
   (g$make-i/o-filename-error$6605$RCJqu
     g$make-i/o-filename-error$6685$RCJqu
     (record-constructor g$7394$6603$RCJqu))
   (g$7391$6606$RCJqu
     g$7391$6686$RCJqu
     (record-accessor g$7393$6601$RCJqu '0))
   (g$i/o-filename-error?$6607$RCJqu
     g$i/o-filename-error?$6687$RCJqu
     (condition-predicate g$7393$6601$RCJqu))
   (g$i/o-error-filename$6608$RCJqu
     g$i/o-error-filename$6688$RCJqu
     (condition-accessor g$7393$6601$RCJqu g$7391$6606$RCJqu))
   (g$7409$6609$RCJqu
     g$7409$6689$RCJqu
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7333$6575$RCJqu
       'g$7412$RCJqu
       '#f
       '#f
       '#()))
   (g$7411$6610$RCJqu g$7411$6690$RCJqu '#f)
   (g$7410$6611$RCJqu
     g$7410$6691$RCJqu
     (make-record-constructor-descriptor
       g$7409$6609$RCJqu
       g$7334$6577$RCJqu
       g$7411$6610$RCJqu))
   (g$7408$6612$RCJqu
     g$7408$6692$RCJqu
     (record-predicate g$7409$6609$RCJqu))
   (g$make-i/o-file-protection-error$6613$RCJqu
     g$make-i/o-file-protection-error$6693$RCJqu
     (record-constructor g$7410$6611$RCJqu))
   (g$i/o-file-protection-error?$6614$RCJqu
     g$i/o-file-protection-error?$6694$RCJqu
     (condition-predicate g$7409$6609$RCJqu))
   (g$7423$6615$RCJqu
     g$7423$6695$RCJqu
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7409$6609$RCJqu
       'g$7426$RCJqu
       '#f
       '#f
       '#()))
   (g$7425$6616$RCJqu g$7425$6696$RCJqu '#f)
   (g$7424$6617$RCJqu
     g$7424$6697$RCJqu
     (make-record-constructor-descriptor
       g$7423$6615$RCJqu
       g$7410$6611$RCJqu
       g$7425$6616$RCJqu))
   (g$7422$6618$RCJqu
     g$7422$6698$RCJqu
     (record-predicate g$7423$6615$RCJqu))
   (g$make-i/o-file-is-read-only-error$6619$RCJqu
     g$make-i/o-file-is-read-only-error$6699$RCJqu
     (record-constructor g$7424$6617$RCJqu))
   (g$i/o-file-is-read-only-error?$6620$RCJqu
     g$i/o-file-is-read-only-error?$6700$RCJqu
     (condition-predicate g$7423$6615$RCJqu))
   (g$7437$6621$RCJqu
     g$7437$6701$RCJqu
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7393$6601$RCJqu
       'g$7440$RCJqu
       '#f
       '#f
       '#()))
   (g$7439$6622$RCJqu g$7439$6702$RCJqu '#f)
   (g$7438$6623$RCJqu
     g$7438$6703$RCJqu
     (make-record-constructor-descriptor
       g$7437$6621$RCJqu
       g$7394$6603$RCJqu
       g$7439$6622$RCJqu))
   (g$7436$6624$RCJqu
     g$7436$6704$RCJqu
     (record-predicate g$7437$6621$RCJqu))
   (g$make-i/o-file-already-exists-error$6625$RCJqu
     g$make-i/o-file-already-exists-error$6705$RCJqu
     (record-constructor g$7438$6623$RCJqu))
   (g$i/o-file-already-exists-error?$6626$RCJqu
     g$i/o-file-already-exists-error?$6706$RCJqu
     (condition-predicate g$7437$6621$RCJqu))
   (g$7451$6627$RCJqu
     g$7451$6707$RCJqu
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7393$6601$RCJqu
       'g$7454$RCJqu
       '#f
       '#f
       '#()))
   (g$7453$6628$RCJqu g$7453$6708$RCJqu '#f)
   (g$7452$6629$RCJqu
     g$7452$6709$RCJqu
     (make-record-constructor-descriptor
       g$7451$6627$RCJqu
       g$7394$6603$RCJqu
       g$7453$6628$RCJqu))
   (g$7450$6630$RCJqu
     g$7450$6710$RCJqu
     (record-predicate g$7451$6627$RCJqu))
   (g$make-i/o-file-does-not-exist-error$6631$RCJqu
     g$make-i/o-file-does-not-exist-error$6711$RCJqu
     (record-constructor g$7452$6629$RCJqu))
   (g$i/o-file-does-not-exist-error?$6632$RCJqu
     g$i/o-file-does-not-exist-error?$6712$RCJqu
     (condition-predicate g$7451$6627$RCJqu))
   (g$7466$6633$RCJqu
     g$7466$6713$RCJqu
     (make-record-type-descriptor
       '&i/o-port
       g$7333$6575$RCJqu
       'g$7469$RCJqu
       '#f
       '#f
       '#((immutable port))))
   (g$7468$6634$RCJqu g$7468$6714$RCJqu '#f)
   (g$7467$6635$RCJqu
     g$7467$6715$RCJqu
     (make-record-constructor-descriptor
       g$7466$6633$RCJqu
       g$7334$6577$RCJqu
       g$7468$6634$RCJqu))
   (g$7465$6636$RCJqu
     g$7465$6716$RCJqu
     (record-predicate g$7466$6633$RCJqu))
   (g$make-i/o-port-error$6637$RCJqu
     g$make-i/o-port-error$6717$RCJqu
     (record-constructor g$7467$6635$RCJqu))
   (g$7464$6638$RCJqu
     g$7464$6718$RCJqu
     (record-accessor g$7466$6633$RCJqu '0))
   (g$i/o-port-error?$6639$RCJqu
     g$i/o-port-error?$6719$RCJqu
     (condition-predicate g$7466$6633$RCJqu))
   (g$i/o-error-port$6640$RCJqu
     g$i/o-error-port$6720$RCJqu
     (condition-accessor g$7466$6633$RCJqu g$7464$6638$RCJqu))
   (g$7482$6641$RCJqu
     g$7482$6721$RCJqu
     (make-record-type-descriptor
       '&i/o-decoding
       g$7466$6633$RCJqu
       'g$7485$RCJqu
       '#f
       '#f
       '#()))
   (g$7484$6642$RCJqu g$7484$6722$RCJqu '#f)
   (g$7483$6643$RCJqu
     g$7483$6723$RCJqu
     (make-record-constructor-descriptor
       g$7482$6641$RCJqu
       g$7467$6635$RCJqu
       g$7484$6642$RCJqu))
   (g$7481$6644$RCJqu
     g$7481$6724$RCJqu
     (record-predicate g$7482$6641$RCJqu))
   (g$make-i/o-decoding-error$6645$RCJqu
     g$make-i/o-decoding-error$6725$RCJqu
     (record-constructor g$7483$6643$RCJqu))
   (g$i/o-decoding-error?$6646$RCJqu
     g$i/o-decoding-error?$6726$RCJqu
     (condition-predicate g$7482$6641$RCJqu))
   (g$7497$6647$RCJqu
     g$7497$6727$RCJqu
     (make-record-type-descriptor
       '&i/o-encoding
       g$7466$6633$RCJqu
       'g$7500$RCJqu
       '#f
       '#f
       '#((immutable char))))
   (g$7499$6648$RCJqu g$7499$6728$RCJqu '#f)
   (g$7498$6649$RCJqu
     g$7498$6729$RCJqu
     (make-record-constructor-descriptor
       g$7497$6647$RCJqu
       g$7467$6635$RCJqu
       g$7499$6648$RCJqu))
   (g$7496$6650$RCJqu
     g$7496$6730$RCJqu
     (record-predicate g$7497$6647$RCJqu))
   (g$make-i/o-encoding-error$6651$RCJqu
     g$make-i/o-encoding-error$6731$RCJqu
     (record-constructor g$7498$6649$RCJqu))
   (g$7495$6652$RCJqu
     g$7495$6732$RCJqu
     (record-accessor g$7497$6647$RCJqu '0))
   (g$i/o-encoding-error?$6653$RCJqu
     g$i/o-encoding-error?$6733$RCJqu
     (condition-predicate g$7497$6647$RCJqu))
   (g$i/o-encoding-error-char$6654$RCJqu
     g$i/o-encoding-error-char$6734$RCJqu
     (condition-accessor g$7497$6647$RCJqu g$7495$6652$RCJqu)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6735$RCJqu
     g$get-output-string$6740$RCJqu
     (case-lambda
       ((g$port$6738$RCJqu)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6738$RCJqu))))
   (g$open-output-string$6736$RCJqu
     g$open-output-string$6741$RCJqu
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6737$RCJqu
     g$open-string-output-port$6742$RCJqu
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6739$RCJqu)
            (values
              g$p$6739$RCJqu
              (case-lambda
                (() (g$get-output-string$6735$RCJqu g$p$6739$RCJqu))))))
         (g$open-output-string$6736$RCJqu))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6743$RCJqu
     g$dofmt$6765$RCJqu
     (case-lambda
       ((g$p$6747$RCJqu g$cntl$6748$RCJqu g$args$6749$RCJqu)
        ((case-lambda
           ((g$nmax$6750$RCJqu)
            ((letrec ((g$loop$6751$RCJqu
                        (case-lambda
                          ((g$n$6752$RCJqu g$a$6753$RCJqu)
                           (if (fx<=? g$n$6752$RCJqu g$nmax$6750$RCJqu)
                             ((case-lambda
                                ((g$c$6754$RCJqu)
                                 (if (if (char=? g$c$6754$RCJqu '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6752$RCJqu
                                           g$nmax$6750$RCJqu))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6755$RCJqu)
                                       (if (eqv? g$t$6755$RCJqu '#\a)
                                         (begin
                                           (display
                                             (car g$a$6753$RCJqu)
                                             g$p$6747$RCJqu)
                                           (g$loop$6751$RCJqu
                                             (fx+ g$n$6752$RCJqu '2)
                                             (cdr g$a$6753$RCJqu)))
                                         (if (eqv? g$t$6755$RCJqu '#\s)
                                           (begin
                                             (write
                                               (car g$a$6753$RCJqu)
                                               g$p$6747$RCJqu)
                                             (g$loop$6751$RCJqu
                                               (fx+ g$n$6752$RCJqu '2)
                                               (cdr g$a$6753$RCJqu)))
                                           (if (eqv? g$t$6755$RCJqu '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6753$RCJqu)
                                                   '2)
                                                 g$p$6747$RCJqu)
                                               (g$loop$6751$RCJqu
                                                 (fx+ g$n$6752$RCJqu '2)
                                                 (cdr g$a$6753$RCJqu)))
                                             (if (eqv? g$t$6755$RCJqu '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6753$RCJqu)
                                                     '8)
                                                   g$p$6747$RCJqu)
                                                 (g$loop$6751$RCJqu
                                                   (fx+ g$n$6752$RCJqu '2)
                                                   (cdr g$a$6753$RCJqu)))
                                               (if (eqv? g$t$6755$RCJqu '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6753$RCJqu)
                                                       '16)
                                                     g$p$6747$RCJqu)
                                                   (g$loop$6751$RCJqu
                                                     (fx+ g$n$6752$RCJqu '2)
                                                     (cdr g$a$6753$RCJqu)))
                                                 (if (eqv? g$t$6755$RCJqu '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6753$RCJqu)
                                                         '10)
                                                       g$p$6747$RCJqu)
                                                     (g$loop$6751$RCJqu
                                                       (fx+ g$n$6752$RCJqu '2)
                                                       (cdr g$a$6753$RCJqu)))
                                                   (if (eqv?
                                                         g$t$6755$RCJqu
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6747$RCJqu)
                                                       (g$loop$6751$RCJqu
                                                         (fx+ g$n$6752$RCJqu '2)
                                                         g$a$6753$RCJqu))
                                                     (begin
                                                       (write-char
                                                         g$c$6754$RCJqu
                                                         g$p$6747$RCJqu)
                                                       (g$loop$6751$RCJqu
                                                         (fx+ g$n$6752$RCJqu '1)
                                                         g$a$6753$RCJqu)))))))))))
                                    (string-ref
                                      g$cntl$6748$RCJqu
                                      (fx+ g$n$6752$RCJqu '1)))
                                   (begin
                                     (write-char g$c$6754$RCJqu g$p$6747$RCJqu)
                                     (g$loop$6751$RCJqu
                                       (fx+ g$n$6752$RCJqu '1)
                                       g$a$6753$RCJqu)))))
                              (string-ref g$cntl$6748$RCJqu g$n$6752$RCJqu))
                             (void))))))
               g$loop$6751$RCJqu)
             '0
             g$args$6749$RCJqu)))
         (fx- (string-length g$cntl$6748$RCJqu) '1)))))
   (g$printf$6744$RCJqu
     g$printf$6766$RCJqu
     (case-lambda
       ((g$control$6756$RCJqu . g$args$6757$RCJqu)
        (g$dofmt$6743$RCJqu
          (current-output-port)
          g$control$6756$RCJqu
          g$args$6757$RCJqu))))
   (g$fprintf$6745$RCJqu
     g$fprintf$6767$RCJqu
     (case-lambda
       ((g$p$6758$RCJqu g$control$6759$RCJqu . g$args$6760$RCJqu)
        (g$dofmt$6743$RCJqu
          g$p$6758$RCJqu
          g$control$6759$RCJqu
          g$args$6760$RCJqu))))
   (g$format$6746$RCJqu
     g$format$6768$RCJqu
     (case-lambda
       ((g$control$6761$RCJqu . g$args$6762$RCJqu)
        (call-with-values
          g$open-string-output-port$6742$RCJqu
          (case-lambda
            ((g$p$6763$RCJqu g$c$6764$RCJqu)
             (begin
               (g$dofmt$6743$RCJqu
                 g$p$6763$RCJqu
                 g$control$6761$RCJqu
                 g$args$6762$RCJqu)
               (g$c$6764$RCJqu)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6769$RCJqu
     g$make-traced-macro$6772$RCJqu
     (case-lambda
       ((g$name$6770$RCJqu g$x$6771$RCJqu)
        (if (procedure? g$x$6771$RCJqu)
          (make-traced-procedure
            g$name$6770$RCJqu
            g$x$6771$RCJqu
            g$syntax->datum$11421$RCJqu)
          (if (g$variable-transformer?$11249$RCJqu g$x$6771$RCJqu)
            (g$make-variable-transformer$11248$RCJqu
              (make-traced-procedure
                g$name$6770$RCJqu
                (g$variable-transformer-procedure$11250$RCJqu g$x$6771$RCJqu)
                g$syntax->datum$11421$RCJqu))
            g$x$6771$RCJqu))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6773$RCJqu
     g$read-library-source-file$6851$RCJqu
     (case-lambda
       ((g$file-name$6843$RCJqu)
        (with-input-from-file g$file-name$6843$RCJqu read-annotated))))
   (g$make-parameter$6774$RCJqu
     g$make-parameter$6852$RCJqu
     (case-lambda
       ((g$x$6844$RCJqu)
        (g$make-parameter$6774$RCJqu
          g$x$6844$RCJqu
          (case-lambda ((g$x$6845$RCJqu) g$x$6845$RCJqu))))
       ((g$x$6846$RCJqu g$fender$6847$RCJqu)
        (begin
          (if (procedure? g$fender$6847$RCJqu)
            (void)
            (assertion-violation
              'assert
              '"assertion failed"
              '(procedure? fender)))
          ((case-lambda
             ((g$x$6848$RCJqu)
              (case-lambda
                (() g$x$6848$RCJqu)
                ((g$v$6849$RCJqu)
                 (set! g$x$6848$RCJqu (g$fender$6847$RCJqu g$v$6849$RCJqu))))))
           (g$fender$6847$RCJqu g$x$6846$RCJqu))))))
   (g$file-options-spec$6842$RCJqu
     g$file-options-spec$6853$RCJqu
     (case-lambda ((g$x$6850$RCJqu) g$x$6850$RCJqu))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7050$RCJqu
     g$current-primitive-locations$7095$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda ((g$x$7056$RCJqu) '#f))
       (case-lambda
         ((g$p$7057$RCJqu)
          (begin
            (if (procedure? g$p$7057$RCJqu)
              (void)
              (assertion-violation 'assert '"assertion failed" '(procedure? p)))
            g$p$7057$RCJqu)))))
   (g$mutable?$7051$RCJqu
     g$mutable?$7096$RCJqu
     (case-lambda
       ((g$x$7058$RCJqu)
        (letrec* ((g$simple?$7059$RCJqu
                    (case-lambda
                      ((g$x$7060$RCJqu)
                       ((case-lambda
                          ((g$t$7061$RCJqu)
                           (if g$t$7061$RCJqu
                             g$t$7061$RCJqu
                             ((case-lambda
                                ((g$t$7062$RCJqu)
                                 (if g$t$7062$RCJqu
                                   g$t$7062$RCJqu
                                   ((case-lambda
                                      ((g$t$7063$RCJqu)
                                       (if g$t$7063$RCJqu
                                         g$t$7063$RCJqu
                                         ((case-lambda
                                            ((g$t$7064$RCJqu)
                                             (if g$t$7064$RCJqu
                                               g$t$7064$RCJqu
                                               ((case-lambda
                                                  ((g$t$7065$RCJqu)
                                                   (if g$t$7065$RCJqu
                                                     g$t$7065$RCJqu
                                                     ((case-lambda
                                                        ((g$t$7066$RCJqu)
                                                         (if g$t$7066$RCJqu
                                                           g$t$7066$RCJqu
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7060$RCJqu)))))
                                                      (bytevector?
                                                        g$x$7060$RCJqu)))))
                                                (string? g$x$7060$RCJqu)))))
                                          (boolean? g$x$7060$RCJqu)))))
                                    (symbol? g$x$7060$RCJqu)))))
                              (char? g$x$7060$RCJqu)))))
                        (null? g$x$7060$RCJqu))))))
          (not (g$simple?$7059$RCJqu g$x$7058$RCJqu))))))
   (g$rewriter$7052$RCJqu
     g$rewriter$7097$RCJqu
     (case-lambda
       ((g$quote-hack?$7067$RCJqu)
        (letrec* ((g$f$7068$RCJqu
                    (case-lambda
                      ((g$x$7069$RCJqu)
                       (if (pair? g$x$7069$RCJqu)
                         ((case-lambda
                            ((g$t$7070$RCJqu)
                             (if (eqv? g$t$7070$RCJqu 'quote)
                               (if (if g$quote-hack?$7067$RCJqu
                                     (begin
                                       '#f
                                       (g$mutable?$7051$RCJqu
                                         (g$cadr$5543$RCJqu g$x$7069$RCJqu)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7090$RCJqu)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7090$RCJqu
                                         (g$cadr$5543$RCJqu g$x$7069$RCJqu))
                                       g$g$7090$RCJqu)))
                                  (gensym))
                                 g$x$7069$RCJqu)
                               (if (eqv? g$t$7070$RCJqu 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$7089$RCJqu)
                                           (cons
                                             (car g$x$7089$RCJqu)
                                             (map g$f$7068$RCJqu
                                                  (cdr g$x$7089$RCJqu)))))
                                        (cdr g$x$7069$RCJqu)))
                                 (if (eqv? g$t$7070$RCJqu 'lambda)
                                   (g$cons*$6014$RCJqu
                                     'lambda
                                     (g$cadr$5543$RCJqu g$x$7069$RCJqu)
                                     (map g$f$7068$RCJqu
                                          (g$cddr$5545$RCJqu g$x$7069$RCJqu)))
                                   (if (eqv? g$t$7070$RCJqu 'letrec)
                                     ((case-lambda
                                        ((g$bindings$7085$RCJqu
                                           g$body*$7086$RCJqu)
                                         ((case-lambda
                                            ((g$lhs*$7087$RCJqu
                                               g$rhs*$7088$RCJqu)
                                             (g$cons*$6014$RCJqu
                                               'letrec
                                               (map list
                                                    g$lhs*$7087$RCJqu
                                                    (map g$f$7068$RCJqu
                                                         g$rhs*$7088$RCJqu))
                                               (map g$f$7068$RCJqu
                                                    g$body*$7086$RCJqu))))
                                          (map car g$bindings$7085$RCJqu)
                                          (map g$cadr$5543$RCJqu
                                               g$bindings$7085$RCJqu))))
                                      (g$cadr$5543$RCJqu g$x$7069$RCJqu)
                                      (g$cddr$5545$RCJqu g$x$7069$RCJqu))
                                     (if (eqv? g$t$7070$RCJqu 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$7081$RCJqu
                                             g$body*$7082$RCJqu)
                                           ((case-lambda
                                              ((g$lhs*$7083$RCJqu
                                                 g$rhs*$7084$RCJqu)
                                               (g$cons*$6014$RCJqu
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$7083$RCJqu
                                                      (map g$f$7068$RCJqu
                                                           g$rhs*$7084$RCJqu))
                                                 (map g$f$7068$RCJqu
                                                      g$body*$7082$RCJqu))))
                                            (map car g$bindings$7081$RCJqu)
                                            (map g$cadr$5543$RCJqu
                                                 g$bindings$7081$RCJqu))))
                                        (g$cadr$5543$RCJqu g$x$7069$RCJqu)
                                        (g$cddr$5545$RCJqu g$x$7069$RCJqu))
                                       (if (eqv?
                                             g$t$7070$RCJqu
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$7074$RCJqu g$x$7075$RCJqu)
                                             ((case-lambda
                                                ((g$bindings$7076$RCJqu
                                                   g$body*$7077$RCJqu)
                                                 ((case-lambda
                                                    ((g$lhs*$7078$RCJqu
                                                       g$lhs**$7079$RCJqu
                                                       g$rhs*$7080$RCJqu)
                                                     (g$cons*$6014$RCJqu
                                                       'library-letrec*
                                                       g$name$7074$RCJqu
                                                       (map list
                                                            g$lhs*$7078$RCJqu
                                                            g$lhs**$7079$RCJqu
                                                            (map g$f$7068$RCJqu
                                                                 g$rhs*$7080$RCJqu))
                                                       (map g$f$7068$RCJqu
                                                            g$body*$7077$RCJqu))))
                                                  (map car
                                                       g$bindings$7076$RCJqu)
                                                  (map g$cadr$5543$RCJqu
                                                       g$bindings$7076$RCJqu)
                                                  (map g$caddr$5549$RCJqu
                                                       g$bindings$7076$RCJqu))))
                                              (g$cadr$5543$RCJqu g$x$7075$RCJqu)
                                              (g$cddr$5545$RCJqu
                                                g$x$7075$RCJqu))))
                                          (g$cadr$5543$RCJqu g$x$7069$RCJqu)
                                          (cdr g$x$7069$RCJqu))
                                         (if (eqv? g$t$7070$RCJqu 'begin)
                                           (cons
                                             'begin
                                             (map g$f$7068$RCJqu
                                                  (cdr g$x$7069$RCJqu)))
                                           (if (eqv? g$t$7070$RCJqu 'set!)
                                             (list
                                               'set!
                                               (g$cadr$5543$RCJqu
                                                 g$x$7069$RCJqu)
                                               (g$f$7068$RCJqu
                                                 (g$caddr$5549$RCJqu
                                                   g$x$7069$RCJqu)))
                                             (if (eqv?
                                                   g$t$7070$RCJqu
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$7071$RCJqu)
                                                   ((case-lambda
                                                      ((g$t$7072$RCJqu)
                                                       (if g$t$7072$RCJqu
                                                         ((case-lambda
                                                            ((g$loc$7073$RCJqu)
                                                             g$loc$7073$RCJqu))
                                                          g$t$7072$RCJqu)
                                                         g$op$7071$RCJqu)))
                                                    ((g$current-primitive-locations$7050$RCJqu)
                                                     g$op$7071$RCJqu))))
                                                (g$cadr$5543$RCJqu
                                                  g$x$7069$RCJqu))
                                               (if (eqv? g$t$7070$RCJqu 'define)
                                                 g$x$7069$RCJqu
                                                 (if (list? g$x$7069$RCJqu)
                                                   (map g$f$7068$RCJqu
                                                        g$x$7069$RCJqu)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7069$RCJqu
                                                     (list?
                                                       g$x$7069$RCJqu)))))))))))))))
                          (car g$x$7069$RCJqu))
                         g$x$7069$RCJqu)))))
          g$f$7068$RCJqu))))
   (g$expanded->core$7053$RCJqu
     g$expanded->core$7098$RCJqu
     (case-lambda
       ((g$x$7091$RCJqu) ((g$rewriter$7052$RCJqu '#t) g$x$7091$RCJqu))))
   (g$compile-core-expr$7054$RCJqu
     g$compile-core-expr$7099$RCJqu
     (case-lambda
       ((g$x$7092$RCJqu) ((g$rewriter$7052$RCJqu '#f) g$x$7092$RCJqu))))
   (g$compile-core-expr-to-port$7055$RCJqu
     g$compile-core-expr-to-port$7100$RCJqu
     (case-lambda
       ((g$x$7093$RCJqu g$p$7094$RCJqu)
        (g$pretty-print$7049$RCJqu
          ((g$rewriter$7052$RCJqu '#f) g$x$7093$RCJqu)
          g$p$7094$RCJqu)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7139$RCJqu
     g$make-collection$7343$RCJqu
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7200$RCJqu)
            (letrec* ((g$set-cons$7201$RCJqu
                        (case-lambda
                          ((g$x$7203$RCJqu g$ls$7204$RCJqu)
                           (if (memq g$x$7203$RCJqu g$ls$7204$RCJqu)
                             g$ls$7204$RCJqu
                             (cons g$x$7203$RCJqu g$ls$7204$RCJqu))))))
              (case-lambda
                (() g$set$7200$RCJqu)
                ((g$x$7202$RCJqu)
                 (set! g$set$7200$RCJqu
                   (g$set-cons$7201$RCJqu g$x$7202$RCJqu g$set$7200$RCJqu)))))))
         '()))))
   (g$current-library-collection$7140$RCJqu
     g$current-library-collection$7344$RCJqu
     (g$make-parameter$6852$RCJqu
       (g$make-collection$7139$RCJqu)
       (case-lambda
         ((g$x$7205$RCJqu)
          (begin
            (if (procedure? g$x$7205$RCJqu)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7205$RCJqu))
            g$x$7205$RCJqu)))))
   (g$7932$7141$RCJqu
     g$7932$7345$RCJqu
     (make-record-type-descriptor
       'library
       '#f
       'g$7935$RCJqu
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7934$7142$RCJqu g$7934$7346$RCJqu '#f)
   (g$7933$7143$RCJqu
     g$7933$7347$RCJqu
     (make-record-constructor-descriptor
       g$7932$7141$RCJqu
       '#f
       g$7934$7142$RCJqu))
   (g$library?$7144$RCJqu
     g$library?$7348$RCJqu
     (record-predicate g$7932$7141$RCJqu))
   (g$make-library$7145$RCJqu
     g$make-library$7349$RCJqu
     (record-constructor g$7933$7143$RCJqu))
   (g$library-id$7146$RCJqu
     g$library-id$7350$RCJqu
     (record-accessor g$7932$7141$RCJqu '0))
   (g$library-name$7147$RCJqu
     g$library-name$7351$RCJqu
     (record-accessor g$7932$7141$RCJqu '1))
   (g$library-version$7148$RCJqu
     g$library-version$7352$RCJqu
     (record-accessor g$7932$7141$RCJqu '2))
   (g$library-imp*$7149$RCJqu
     g$library-imp*$7353$RCJqu
     (record-accessor g$7932$7141$RCJqu '3))
   (g$library-vis*$7150$RCJqu
     g$library-vis*$7354$RCJqu
     (record-accessor g$7932$7141$RCJqu '4))
   (g$library-inv*$7151$RCJqu
     g$library-inv*$7355$RCJqu
     (record-accessor g$7932$7141$RCJqu '5))
   (g$library-subst$7152$RCJqu
     g$library-subst$7356$RCJqu
     (record-accessor g$7932$7141$RCJqu '6))
   (g$library-env$7153$RCJqu
     g$library-env$7357$RCJqu
     (record-accessor g$7932$7141$RCJqu '7))
   (g$library-visit-state$7154$RCJqu
     g$library-visit-state$7358$RCJqu
     (record-accessor g$7932$7141$RCJqu '8))
   (g$library-invoke-state$7155$RCJqu
     g$library-invoke-state$7359$RCJqu
     (record-accessor g$7932$7141$RCJqu '9))
   (g$library-visit-code$7156$RCJqu
     g$library-visit-code$7360$RCJqu
     (record-accessor g$7932$7141$RCJqu '10))
   (g$library-invoke-code$7157$RCJqu
     g$library-invoke-code$7361$RCJqu
     (record-accessor g$7932$7141$RCJqu '11))
   (g$library-visible?$7158$RCJqu
     g$library-visible?$7362$RCJqu
     (record-accessor g$7932$7141$RCJqu '12))
   (g$library-source-file-name$7159$RCJqu
     g$library-source-file-name$7363$RCJqu
     (record-accessor g$7932$7141$RCJqu '13))
   (g$set-library-id!$7160$RCJqu
     g$set-library-id!$7364$RCJqu
     (record-mutator g$7932$7141$RCJqu '0))
   (g$set-library-name!$7161$RCJqu
     g$set-library-name!$7365$RCJqu
     (record-mutator g$7932$7141$RCJqu '1))
   (g$set-library-version!$7162$RCJqu
     g$set-library-version!$7366$RCJqu
     (record-mutator g$7932$7141$RCJqu '2))
   (g$set-library-imp*!$7163$RCJqu
     g$set-library-imp*!$7367$RCJqu
     (record-mutator g$7932$7141$RCJqu '3))
   (g$set-library-vis*!$7164$RCJqu
     g$set-library-vis*!$7368$RCJqu
     (record-mutator g$7932$7141$RCJqu '4))
   (g$set-library-inv*!$7165$RCJqu
     g$set-library-inv*!$7369$RCJqu
     (record-mutator g$7932$7141$RCJqu '5))
   (g$set-library-subst!$7166$RCJqu
     g$set-library-subst!$7370$RCJqu
     (record-mutator g$7932$7141$RCJqu '6))
   (g$set-library-env!$7167$RCJqu
     g$set-library-env!$7371$RCJqu
     (record-mutator g$7932$7141$RCJqu '7))
   (g$set-library-visit-state!$7168$RCJqu
     g$set-library-visit-state!$7372$RCJqu
     (record-mutator g$7932$7141$RCJqu '8))
   (g$set-library-invoke-state!$7169$RCJqu
     g$set-library-invoke-state!$7373$RCJqu
     (record-mutator g$7932$7141$RCJqu '9))
   (g$set-library-visit-code!$7170$RCJqu
     g$set-library-visit-code!$7374$RCJqu
     (record-mutator g$7932$7141$RCJqu '10))
   (g$set-library-invoke-code!$7171$RCJqu
     g$set-library-invoke-code!$7375$RCJqu
     (record-mutator g$7932$7141$RCJqu '11))
   (g$set-library-visible?!$7172$RCJqu
     g$set-library-visible?!$7376$RCJqu
     (record-mutator g$7932$7141$RCJqu '12))
   (g$set-library-source-file-name!$7173$RCJqu
     g$set-library-source-file-name!$7377$RCJqu
     (record-mutator g$7932$7141$RCJqu '13))
   (g$rp$7174$RCJqu
     g$rp$7378$RCJqu
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7206$RCJqu g$p$7207$RCJqu)
          (begin
            (if (g$library?$7144$RCJqu g$x$7206$RCJqu)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6768$RCJqu
                '"#<library ~s>"
                (if (null? (g$library-version$7148$RCJqu g$x$7206$RCJqu))
                  (g$library-name$7147$RCJqu g$x$7206$RCJqu)
                  (append
                    (g$library-name$7147$RCJqu g$x$7206$RCJqu)
                    (list (g$library-version$7148$RCJqu g$x$7206$RCJqu)))))
              g$p$7207$RCJqu))))))
   (g$find-dependencies$7175$RCJqu
     g$find-dependencies$7379$RCJqu
     (case-lambda
       ((g$ls$7208$RCJqu)
        (if (null? g$ls$7208$RCJqu)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7176$RCJqu
     g$find-library-by$7380$RCJqu
     (case-lambda
       ((g$pred$7209$RCJqu)
        ((letrec ((g$f$7210$RCJqu
                    (case-lambda
                      ((g$ls$7211$RCJqu)
                       (if (null? g$ls$7211$RCJqu)
                         '#f
                         (if (g$pred$7209$RCJqu (car g$ls$7211$RCJqu))
                           (car g$ls$7211$RCJqu)
                           (g$f$7210$RCJqu (cdr g$ls$7211$RCJqu))))))))
           g$f$7210$RCJqu)
         ((g$current-library-collection$7140$RCJqu))))))
   (g$library-path$7177$RCJqu
     g$library-path$7381$RCJqu
     (g$make-parameter$6852$RCJqu
       '(".")
       (case-lambda
         ((g$x$7212$RCJqu)
          (if (if (list? g$x$7212$RCJqu)
                (begin '#f (g$for-all$6012$RCJqu string? g$x$7212$RCJqu))
                '#f)
            (map (case-lambda ((g$x$7213$RCJqu) g$x$7213$RCJqu)) g$x$7212$RCJqu)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7212$RCJqu))))))
   (g$library-extensions$7178$RCJqu
     g$library-extensions$7382$RCJqu
     (g$make-parameter$6852$RCJqu
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7214$RCJqu)
          (if (if (list? g$x$7214$RCJqu)
                (begin '#f (g$for-all$6012$RCJqu string? g$x$7214$RCJqu))
                '#f)
            (map (case-lambda ((g$x$7215$RCJqu) g$x$7215$RCJqu)) g$x$7214$RCJqu)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7214$RCJqu))))))
   (g$library-name->file-name$7179$RCJqu
     g$library-name->file-name$7383$RCJqu
     (case-lambda
       ((g$x$7216$RCJqu)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6742$RCJqu)))
          (case-lambda
            ((g$p$7219$RCJqu g$extract$7220$RCJqu)
             ((case-lambda
                ((g$extract$7221$RCJqu g$p$7222$RCJqu)
                 (letrec* ((g$display-hex$7223$RCJqu
                             (case-lambda
                               ((g$n$7231$RCJqu)
                                (if (<= '0 g$n$7231$RCJqu '9)
                                  (display g$n$7231$RCJqu g$p$7222$RCJqu)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7231$RCJqu '10)))
                                    g$p$7222$RCJqu))))))
                   (begin
                     ((letrec ((g$f$7224$RCJqu
                                 (case-lambda
                                   ((g$ls$7225$RCJqu)
                                    (if (null? g$ls$7225$RCJqu)
                                      (void)
                                      (begin
                                        (display '"/" g$p$7222$RCJqu)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7226$RCJqu)
                                             (if ((case-lambda
                                                    ((g$t$7227$RCJqu)
                                                     (if g$t$7227$RCJqu
                                                       g$t$7227$RCJqu
                                                       ((case-lambda
                                                          ((g$t$7228$RCJqu)
                                                           (if g$t$7228$RCJqu
                                                             g$t$7228$RCJqu
                                                             ((case-lambda
                                                                ((g$t$7229$RCJqu)
                                                                 (if g$t$7229$RCJqu
                                                                   g$t$7229$RCJqu
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7226$RCJqu
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$7226$RCJqu
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$7226$RCJqu
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$7226$RCJqu
                                                    '#\z))
                                               (display
                                                 g$c$7226$RCJqu
                                                 g$p$7222$RCJqu)
                                               (begin
                                                 (display '"%" g$p$7222$RCJqu)
                                                 ((case-lambda
                                                    ((g$n$7230$RCJqu)
                                                     (begin
                                                       (g$display-hex$7223$RCJqu
                                                         (g$quotient$6369$RCJqu
                                                           g$n$7230$RCJqu
                                                           '16))
                                                       (g$display-hex$7223$RCJqu
                                                         (g$remainder$6370$RCJqu
                                                           g$n$7230$RCJqu
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7226$RCJqu))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7225$RCJqu))))
                                        (g$f$7224$RCJqu
                                          (cdr g$ls$7225$RCJqu))))))))
                        g$f$7224$RCJqu)
                      g$x$7216$RCJqu)
                     (g$extract$7221$RCJqu)))))
              g$extract$7220$RCJqu
              g$p$7219$RCJqu)))))))
   (g$file-locator$7180$RCJqu
     g$file-locator$7384$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda
         ((g$x$7232$RCJqu)
          ((case-lambda
             ((g$str$7233$RCJqu)
              ((letrec ((g$f$7234$RCJqu
                          (case-lambda
                            ((g$ls$7235$RCJqu
                               g$exts$7236$RCJqu
                               g$failed-list$7237$RCJqu)
                             (if (null? g$ls$7235$RCJqu)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8037$7238$RCJqu
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8040$RCJqu
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8039$7239$RCJqu '#f)
                                             (g$8038$7240$RCJqu
                                               (make-record-constructor-descriptor
                                                 g$8037$7238$RCJqu
                                                 &condition-rcd
                                                 g$8039$7239$RCJqu))
                                             (g$8036$7241$RCJqu
                                               (record-predicate
                                                 g$8037$7238$RCJqu))
                                             (g$make-library-resolution-condition$7242$RCJqu
                                               (record-constructor
                                                 g$8038$7240$RCJqu))
                                             (g$8034$7243$RCJqu
                                               (record-accessor
                                                 g$8037$7238$RCJqu
                                                 '0))
                                             (g$8035$7244$RCJqu
                                               (record-accessor
                                                 g$8037$7238$RCJqu
                                                 '1))
                                             (g$library-resolution-condition?$7245$RCJqu
                                               (condition-predicate
                                                 g$8037$7238$RCJqu))
                                             (g$condition-library$7246$RCJqu
                                               (condition-accessor
                                                 g$8037$7238$RCJqu
                                                 g$8034$7243$RCJqu))
                                             (g$condition-files$7247$RCJqu
                                               (condition-accessor
                                                 g$8037$7238$RCJqu
                                                 g$8035$7244$RCJqu)))
                                     (raise
                                       (condition
                                         (g$make-error$6286$RCJqu)
                                         (g$make-who-condition$6312$RCJqu
                                           'expander)
                                         (g$make-message-condition$6266$RCJqu
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7242$RCJqu
                                           g$x$7232$RCJqu
                                           (reverse
                                             g$failed-list$7237$RCJqu))))))))
                               (if (null? g$exts$7236$RCJqu)
                                 (g$f$7234$RCJqu
                                   (cdr g$ls$7235$RCJqu)
                                   (g$library-extensions$7178$RCJqu)
                                   g$failed-list$7237$RCJqu)
                                 ((case-lambda
                                    ((g$name$7248$RCJqu)
                                     (if (g$file-exists?$5883$RCJqu
                                           g$name$7248$RCJqu)
                                       g$name$7248$RCJqu
                                       (g$f$7234$RCJqu
                                         g$ls$7235$RCJqu
                                         (cdr g$exts$7236$RCJqu)
                                         (cons
                                           g$name$7248$RCJqu
                                           g$failed-list$7237$RCJqu)))))
                                  (string-append
                                    (car g$ls$7235$RCJqu)
                                    g$str$7233$RCJqu
                                    (car g$exts$7236$RCJqu)))))))))
                 g$f$7234$RCJqu)
               (g$library-path$7177$RCJqu)
               (g$library-extensions$7178$RCJqu)
               '())))
           (g$library-name->file-name$7179$RCJqu g$x$7232$RCJqu))))
       (case-lambda
         ((g$f$7249$RCJqu)
          (if (procedure? g$f$7249$RCJqu)
            g$f$7249$RCJqu
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7249$RCJqu))))))
   (g$serialize-all$7181$RCJqu
     g$serialize-all$7385$RCJqu
     (case-lambda
       ((g$serialize$7250$RCJqu g$compile$7251$RCJqu)
        (letrec* ((g$library-desc$7252$RCJqu
                    (case-lambda
                      ((g$x$7254$RCJqu)
                       (list
                         (g$library-id$7146$RCJqu g$x$7254$RCJqu)
                         (g$library-name$7147$RCJqu g$x$7254$RCJqu))))))
          (for-each
            (case-lambda
              ((g$x$7253$RCJqu)
               (if (g$library-source-file-name$7159$RCJqu g$x$7253$RCJqu)
                 (g$serialize$7250$RCJqu
                   (g$library-source-file-name$7159$RCJqu g$x$7253$RCJqu)
                   (list
                     (g$library-id$7146$RCJqu g$x$7253$RCJqu)
                     (g$library-name$7147$RCJqu g$x$7253$RCJqu)
                     (g$library-version$7148$RCJqu g$x$7253$RCJqu)
                     (map g$library-desc$7252$RCJqu
                          (g$library-imp*$7149$RCJqu g$x$7253$RCJqu))
                     (map g$library-desc$7252$RCJqu
                          (g$library-vis*$7150$RCJqu g$x$7253$RCJqu))
                     (map g$library-desc$7252$RCJqu
                          (g$library-inv*$7151$RCJqu g$x$7253$RCJqu))
                     (g$library-subst$7152$RCJqu g$x$7253$RCJqu)
                     (g$library-env$7153$RCJqu g$x$7253$RCJqu)
                     (g$compile$7251$RCJqu
                       (g$library-visit-code$7156$RCJqu g$x$7253$RCJqu))
                     (g$compile$7251$RCJqu
                       (g$library-invoke-code$7157$RCJqu g$x$7253$RCJqu))
                     (g$library-visible?$7158$RCJqu g$x$7253$RCJqu)))
                 (void))))
            ((g$current-library-collection$7140$RCJqu)))))))
   (g$current-precompiled-library-loader$7182$RCJqu
     g$current-precompiled-library-loader$7386$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda ((g$filename$7255$RCJqu g$sk$7256$RCJqu) '#f))))
   (g$try-load-from-file$7183$RCJqu
     g$try-load-from-file$7387$RCJqu
     (case-lambda
       ((g$filename$7257$RCJqu)
        ((g$current-precompiled-library-loader$7182$RCJqu)
         g$filename$7257$RCJqu
         (case-lambda
           ((g$id$7258$RCJqu
              g$name$7259$RCJqu
              g$ver$7260$RCJqu
              g$imp*$7261$RCJqu
              g$vis*$7262$RCJqu
              g$inv*$7263$RCJqu
              g$exp-subst$7264$RCJqu
              g$exp-env$7265$RCJqu
              g$visit-proc$7266$RCJqu
              g$invoke-proc$7267$RCJqu
              g$visible?$7268$RCJqu)
            ((letrec ((g$f$7269$RCJqu
                        (case-lambda
                          ((g$deps$7270$RCJqu)
                           (if (null? g$deps$7270$RCJqu)
                             (begin
                               (g$install-library$7193$RCJqu
                                 g$id$7258$RCJqu
                                 g$name$7259$RCJqu
                                 g$ver$7260$RCJqu
                                 g$imp*$7261$RCJqu
                                 g$vis*$7262$RCJqu
                                 g$inv*$7263$RCJqu
                                 g$exp-subst$7264$RCJqu
                                 g$exp-env$7265$RCJqu
                                 g$visit-proc$7266$RCJqu
                                 g$invoke-proc$7267$RCJqu
                                 '#f
                                 '#f
                                 g$visible?$7268$RCJqu
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7271$RCJqu)
                                 ((case-lambda
                                    ((g$label$7272$RCJqu g$dname$7273$RCJqu)
                                     ((case-lambda
                                        ((g$l$7274$RCJqu)
                                         (if (if (g$library?$7144$RCJqu
                                                   g$l$7274$RCJqu)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7272$RCJqu
                                                      (g$library-id$7146$RCJqu
                                                        g$l$7274$RCJqu)))
                                               '#f)
                                           (g$f$7269$RCJqu
                                             (cdr g$deps$7270$RCJqu))
                                           (begin
                                             (g$fprintf$6767$RCJqu
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$7259$RCJqu
                                               g$dname$7273$RCJqu
                                               g$filename$7257$RCJqu)
                                             '#f))))
                                      (g$find-library-by-name$7188$RCJqu
                                        g$dname$7273$RCJqu))))
                                  (car g$d$7271$RCJqu)
                                  (g$cadr$5543$RCJqu g$d$7271$RCJqu))))
                              (car g$deps$7270$RCJqu)))))))
               g$f$7269$RCJqu)
             (append g$imp*$7261$RCJqu g$vis*$7262$RCJqu g$inv*$7263$RCJqu)))
           (g$others$7275$RCJqu '#f))))))
   (g$library-loader$7184$RCJqu
     g$library-loader$7388$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda
         ((g$x$7276$RCJqu)
          ((case-lambda
             ((g$file-name$7277$RCJqu)
              (if (not g$file-name$7277$RCJqu)
                (assertion-violation '#f '"cannot file library" g$x$7276$RCJqu)
                ((case-lambda
                   ((g$t$7278$RCJqu)
                    (if g$t$7278$RCJqu
                      g$t$7278$RCJqu
                      (begin
                        '#f
                        ((g$current-library-expander$7185$RCJqu)
                         (g$read-library-source-file$6851$RCJqu
                           g$file-name$7277$RCJqu)
                         g$file-name$7277$RCJqu
                         (case-lambda
                           ((g$name$7279$RCJqu)
                            (if (equal? g$name$7279$RCJqu g$x$7276$RCJqu)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6742$RCJqu)))
                                  (case-lambda
                                    ((g$p$7282$RCJqu g$e$7283$RCJqu)
                                     ((case-lambda
                                        ((g$e$7284$RCJqu g$p$7285$RCJqu)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7285$RCJqu)
                                           (write g$x$7276$RCJqu g$p$7285$RCJqu)
                                           (display '" in file " g$p$7285$RCJqu)
                                           (display
                                             g$file-name$7277$RCJqu
                                             g$p$7285$RCJqu)
                                           (display '", found " g$p$7285$RCJqu)
                                           (write
                                             g$name$7279$RCJqu
                                             g$p$7285$RCJqu)
                                           (display '" instead" g$p$7285$RCJqu)
                                           (g$e$7284$RCJqu))))
                                      g$e$7283$RCJqu
                                      g$p$7282$RCJqu)))))))))))))
                 (g$try-load-from-file$7183$RCJqu g$file-name$7277$RCJqu)))))
           ((g$file-locator$7180$RCJqu) g$x$7276$RCJqu))))
       (case-lambda
         ((g$f$7286$RCJqu)
          (if (procedure? g$f$7286$RCJqu)
            g$f$7286$RCJqu
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7286$RCJqu))))))
   (g$current-library-expander$7185$RCJqu
     g$current-library-expander$7389$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda
         ((g$x$7287$RCJqu)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7288$RCJqu)
          (if (procedure? g$f$7288$RCJqu)
            g$f$7288$RCJqu
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7288$RCJqu))))))
   (g$external-pending-libraries$7186$RCJqu
     g$external-pending-libraries$7390$RCJqu
     (g$make-parameter$6852$RCJqu '()))
   (g$find-external-library$7187$RCJqu
     g$find-external-library$7391$RCJqu
     (case-lambda
       ((g$name$7289$RCJqu)
        (begin
          (if (g$member$6008$RCJqu
                g$name$7289$RCJqu
                (g$external-pending-libraries$7186$RCJqu))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7289$RCJqu)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7292$RCJqu
                g$external-pending-libraries$7293$RCJqu)
              ((case-lambda
                 ((g$swap$7294$RCJqu)
                  (dynamic-wind
                    g$swap$7294$RCJqu
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7184$RCJqu) g$name$7289$RCJqu)
                         ((case-lambda
                            ((g$t$7295$RCJqu)
                             (if g$t$7295$RCJqu
                               g$t$7295$RCJqu
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7289$RCJqu)))))
                          (g$find-library-by$7176$RCJqu
                            (case-lambda
                              ((g$x$7296$RCJqu)
                               (equal?
                                 (g$library-name$7147$RCJqu g$x$7296$RCJqu)
                                 g$name$7289$RCJqu))))))))
                    g$swap$7294$RCJqu)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7297$RCJqu)
                      (begin
                        (g$external-pending-libraries$7292$RCJqu
                          g$external-pending-libraries$7293$RCJqu)
                        (set! g$external-pending-libraries$7293$RCJqu
                          g$t$7297$RCJqu))))
                   (g$external-pending-libraries$7292$RCJqu)))))))
           g$external-pending-libraries$7186$RCJqu
           (cons
             g$name$7289$RCJqu
             (g$external-pending-libraries$7186$RCJqu)))))))
   (g$find-library-by-name$7188$RCJqu
     g$find-library-by-name$7392$RCJqu
     (case-lambda
       ((g$name$7298$RCJqu)
        ((case-lambda
           ((g$t$7299$RCJqu)
            (if g$t$7299$RCJqu
              g$t$7299$RCJqu
              (begin
                '#f
                (g$find-external-library$7187$RCJqu g$name$7298$RCJqu)))))
         (g$find-library-by$7176$RCJqu
           (case-lambda
             ((g$x$7300$RCJqu)
              (equal?
                (g$library-name$7147$RCJqu g$x$7300$RCJqu)
                g$name$7298$RCJqu))))))))
   (g$library-exists?$7189$RCJqu
     g$library-exists?$7393$RCJqu
     (case-lambda
       ((g$name$7301$RCJqu)
        (if (g$find-library-by$7176$RCJqu
              (case-lambda
                ((g$x$7302$RCJqu)
                 (equal?
                   (g$library-name$7147$RCJqu g$x$7302$RCJqu)
                   g$name$7301$RCJqu))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7190$RCJqu
     g$find-library-by-spec/die$7394$RCJqu
     (case-lambda
       ((g$spec$7303$RCJqu)
        ((case-lambda
           ((g$id$7304$RCJqu)
            ((case-lambda
               ((g$t$7305$RCJqu)
                (if g$t$7305$RCJqu
                  g$t$7305$RCJqu
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7303$RCJqu)))))
             (g$find-library-by$7176$RCJqu
               (case-lambda
                 ((g$x$7306$RCJqu)
                  (eq? g$id$7304$RCJqu
                       (g$library-id$7146$RCJqu g$x$7306$RCJqu))))))))
         (car g$spec$7303$RCJqu)))))
   (g$label->binding-table$7191$RCJqu
     g$label->binding-table$7395$RCJqu
     (g$make-eq-hashtable$5805$RCJqu))
   (g$install-library-record$7192$RCJqu
     g$install-library-record$7396$RCJqu
     (case-lambda
       ((g$lib$7307$RCJqu)
        (begin
          ((case-lambda
             ((g$exp-env$7308$RCJqu)
              (for-each
                (case-lambda
                  ((g$x$7309$RCJqu)
                   ((case-lambda
                      ((g$label$7310$RCJqu g$binding$7311$RCJqu)
                       ((case-lambda
                          ((g$binding$7312$RCJqu)
                           (g$hashtable-set!$5809$RCJqu
                             g$label->binding-table$7191$RCJqu
                             g$label$7310$RCJqu
                             g$binding$7312$RCJqu)))
                        ((case-lambda
                           ((g$t$7313$RCJqu)
                            (if (eqv? g$t$7313$RCJqu 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$7307$RCJqu
                                  (cdr g$binding$7311$RCJqu)))
                              (if (eqv? g$t$7313$RCJqu 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7307$RCJqu
                                    (cdr g$binding$7311$RCJqu)))
                                (if (eqv? g$t$7313$RCJqu 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7307$RCJqu
                                      (cdr g$binding$7311$RCJqu)))
                                  g$binding$7311$RCJqu)))))
                         (car g$binding$7311$RCJqu)))))
                    (car g$x$7309$RCJqu)
                    (cdr g$x$7309$RCJqu))))
                g$exp-env$7308$RCJqu)))
           (g$library-env$7153$RCJqu g$lib$7307$RCJqu))
          ((g$current-library-collection$7140$RCJqu) g$lib$7307$RCJqu)))))
   (g$install-library$7193$RCJqu
     g$install-library$7397$RCJqu
     (case-lambda
       ((g$id$7314$RCJqu
          g$name$7315$RCJqu
          g$ver$7316$RCJqu
          g$imp*$7317$RCJqu
          g$vis*$7318$RCJqu
          g$inv*$7319$RCJqu
          g$exp-subst$7320$RCJqu
          g$exp-env$7321$RCJqu
          g$visit-proc$7322$RCJqu
          g$invoke-proc$7323$RCJqu
          g$visit-code$7324$RCJqu
          g$invoke-code$7325$RCJqu
          g$visible?$7326$RCJqu
          g$source-file-name$7327$RCJqu)
        ((case-lambda
           ((g$imp-lib*$7328$RCJqu g$vis-lib*$7329$RCJqu g$inv-lib*$7330$RCJqu)
            (begin
              (if (if (symbol? g$id$7314$RCJqu)
                    (if (list? g$name$7315$RCJqu)
                      (begin '#f (list? g$ver$7316$RCJqu))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7314$RCJqu
                  g$name$7315$RCJqu
                  g$ver$7316$RCJqu))
              (if (g$library-exists?$7189$RCJqu g$name$7315$RCJqu)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7315$RCJqu)
                (void))
              ((case-lambda
                 ((g$lib$7331$RCJqu)
                  (g$install-library-record$7192$RCJqu g$lib$7331$RCJqu)))
               (g$make-library$7145$RCJqu
                 g$id$7314$RCJqu
                 g$name$7315$RCJqu
                 g$ver$7316$RCJqu
                 g$imp-lib*$7328$RCJqu
                 g$vis-lib*$7329$RCJqu
                 g$inv-lib*$7330$RCJqu
                 g$exp-subst$7320$RCJqu
                 g$exp-env$7321$RCJqu
                 g$visit-proc$7322$RCJqu
                 g$invoke-proc$7323$RCJqu
                 g$visit-code$7324$RCJqu
                 g$invoke-code$7325$RCJqu
                 g$visible?$7326$RCJqu
                 g$source-file-name$7327$RCJqu)))))
         (map g$find-library-by-spec/die$7190$RCJqu g$imp*$7317$RCJqu)
         (map g$find-library-by-spec/die$7190$RCJqu g$vis*$7318$RCJqu)
         (map g$find-library-by-spec/die$7190$RCJqu g$inv*$7319$RCJqu)))))
   (g$imported-label->binding$7194$RCJqu
     g$imported-label->binding$7398$RCJqu
     (case-lambda
       ((g$lab$7332$RCJqu)
        (g$hashtable-ref$5808$RCJqu
          g$label->binding-table$7191$RCJqu
          g$lab$7332$RCJqu
          '#f))))
   (g$invoke-library$7195$RCJqu
     g$invoke-library$7399$RCJqu
     (case-lambda
       ((g$lib$7333$RCJqu)
        ((case-lambda
           ((g$invoke$7334$RCJqu)
            (if (procedure? g$invoke$7334$RCJqu)
              (begin
                (g$set-library-invoke-state!$7169$RCJqu
                  g$lib$7333$RCJqu
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7333$RCJqu))))
                (for-each
                  g$invoke-library$7195$RCJqu
                  (g$library-inv*$7151$RCJqu g$lib$7333$RCJqu))
                (g$set-library-invoke-state!$7169$RCJqu
                  g$lib$7333$RCJqu
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7333$RCJqu))))
                (g$invoke$7334$RCJqu)
                (g$set-library-invoke-state!$7169$RCJqu g$lib$7333$RCJqu '#t))
              (void))))
         (g$library-invoke-state$7155$RCJqu g$lib$7333$RCJqu)))))
   (g$visit-library$7196$RCJqu
     g$visit-library$7400$RCJqu
     (case-lambda
       ((g$lib$7335$RCJqu)
        ((case-lambda
           ((g$visit$7336$RCJqu)
            (if (procedure? g$visit$7336$RCJqu)
              (begin
                (g$set-library-visit-state!$7168$RCJqu
                  g$lib$7335$RCJqu
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7335$RCJqu))))
                (for-each
                  g$invoke-library$7195$RCJqu
                  (g$library-vis*$7150$RCJqu g$lib$7335$RCJqu))
                (g$set-library-visit-state!$7168$RCJqu
                  g$lib$7335$RCJqu
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7335$RCJqu))))
                (g$visit$7336$RCJqu)
                (g$set-library-visit-state!$7168$RCJqu g$lib$7335$RCJqu '#t))
              (void))))
         (g$library-visit-state$7154$RCJqu g$lib$7335$RCJqu)))))
   (g$invoke-library-by-spec$7197$RCJqu
     g$invoke-library-by-spec$7401$RCJqu
     (case-lambda
       ((g$spec$7337$RCJqu)
        (g$invoke-library$7195$RCJqu
          (g$find-library-by-spec/die$7190$RCJqu g$spec$7337$RCJqu)))))
   (g$installed-libraries$7198$RCJqu
     g$installed-libraries$7402$RCJqu
     (case-lambda
       ((g$all?$7338$RCJqu)
        ((letrec ((g$f$7339$RCJqu
                    (case-lambda
                      ((g$ls$7340$RCJqu)
                       (if (null? g$ls$7340$RCJqu)
                         '()
                         (if ((case-lambda
                                ((g$t$7341$RCJqu)
                                 (if g$t$7341$RCJqu
                                   g$t$7341$RCJqu
                                   (begin
                                     '#f
                                     (g$library-visible?$7158$RCJqu
                                       (car g$ls$7340$RCJqu))))))
                              g$all?$7338$RCJqu)
                           (cons
                             (car g$ls$7340$RCJqu)
                             (g$f$7339$RCJqu (cdr g$ls$7340$RCJqu)))
                           (g$f$7339$RCJqu (cdr g$ls$7340$RCJqu))))))))
           g$f$7339$RCJqu)
         ((g$current-library-collection$7140$RCJqu))))
       (() (g$installed-libraries$7198$RCJqu '#f))))
   (g$library-spec$7199$RCJqu
     g$library-spec$7403$RCJqu
     (case-lambda
       ((g$x$7342$RCJqu)
        (begin
          (if (g$library?$7144$RCJqu g$x$7342$RCJqu)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$7342$RCJqu))
          (list
            (g$library-id$7146$RCJqu g$x$7342$RCJqu)
            (g$library-name$7147$RCJqu g$x$7342$RCJqu)
            (g$library-version$7148$RCJqu g$x$7342$RCJqu)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7404$RCJqu
     g$build-global-define$7514$RCJqu
     (case-lambda ((g$x$7485$RCJqu) (g$build-void$7481$RCJqu))))
   (g$build-lambda$7453$RCJqu
     g$build-lambda$7515$RCJqu
     (case-lambda
       ((g$ae$7486$RCJqu g$vars$7487$RCJqu g$exp$7488$RCJqu)
        (list 'case-lambda (list g$vars$7487$RCJqu g$exp$7488$RCJqu)))))
   (g$build-case-lambda$7454$RCJqu
     g$build-case-lambda$7516$RCJqu
     (case-lambda
       ((g$ae$7489$RCJqu g$vars*$7490$RCJqu g$exp*$7491$RCJqu)
        (cons 'case-lambda (map list g$vars*$7490$RCJqu g$exp*$7491$RCJqu)))))
   (g$build-let$7455$RCJqu
     g$build-let$7517$RCJqu
     (case-lambda
       ((g$ae$7492$RCJqu g$lhs*$7493$RCJqu g$rhs*$7494$RCJqu g$body$7495$RCJqu)
        (cons
          (g$build-lambda$7453$RCJqu
            g$ae$7492$RCJqu
            g$lhs*$7493$RCJqu
            g$body$7495$RCJqu)
          g$rhs*$7494$RCJqu))))
   (g$build-sequence$7480$RCJqu
     g$build-sequence$7518$RCJqu
     (case-lambda
       ((g$ae$7496$RCJqu g$exps$7497$RCJqu)
        ((letrec ((g$loop$7498$RCJqu
                    (case-lambda
                      ((g$exps$7499$RCJqu)
                       (if (null? (cdr g$exps$7499$RCJqu))
                         (car g$exps$7499$RCJqu)
                         (if (equal?
                               (car g$exps$7499$RCJqu)
                               (g$build-void$7481$RCJqu))
                           (g$loop$7498$RCJqu (cdr g$exps$7499$RCJqu))
                           (cons 'begin g$exps$7499$RCJqu)))))))
           g$loop$7498$RCJqu)
         g$exps$7497$RCJqu))))
   (g$build-void$7481$RCJqu
     g$build-void$7519$RCJqu
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7482$RCJqu
     g$build-letrec$7520$RCJqu
     (case-lambda
       ((g$ae$7500$RCJqu
          g$vars$7501$RCJqu
          g$val-exps$7502$RCJqu
          g$body-exp$7503$RCJqu)
        (if (null? g$vars$7501$RCJqu)
          g$body-exp$7503$RCJqu
          (list
            'letrec
            (map list g$vars$7501$RCJqu g$val-exps$7502$RCJqu)
            g$body-exp$7503$RCJqu)))))
   (g$build-letrec*$7483$RCJqu
     g$build-letrec*$7521$RCJqu
     (case-lambda
       ((g$ae$7504$RCJqu
          g$vars$7505$RCJqu
          g$val-exps$7506$RCJqu
          g$body-exp$7507$RCJqu)
        (if (null? g$vars$7505$RCJqu)
          g$body-exp$7507$RCJqu
          (list
            'letrec*
            (map list g$vars$7505$RCJqu g$val-exps$7506$RCJqu)
            g$body-exp$7507$RCJqu)))))
   (g$build-library-letrec*$7484$RCJqu
     g$build-library-letrec*$7522$RCJqu
     (case-lambda
       ((g$ae$7508$RCJqu
          g$name$7509$RCJqu
          g$vars$7510$RCJqu
          g$locs$7511$RCJqu
          g$val-exps$7512$RCJqu
          g$body-exp$7513$RCJqu)
        (list
          'library-letrec*
          g$name$7509$RCJqu
          (map list g$vars$7510$RCJqu g$locs$7511$RCJqu g$val-exps$7512$RCJqu)
          g$body-exp$7513$RCJqu)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7523$RCJqu
     g$set-cons$11166$RCJqu
     (case-lambda
       ((g$x$7976$RCJqu g$ls$7977$RCJqu)
        (if (memq g$x$7976$RCJqu g$ls$7977$RCJqu)
          g$ls$7977$RCJqu
          (cons g$x$7976$RCJqu g$ls$7977$RCJqu)))))
   (g$set-union$7524$RCJqu
     g$set-union$11167$RCJqu
     (case-lambda
       ((g$ls1$7978$RCJqu g$ls2$7979$RCJqu)
        (if (null? g$ls1$7978$RCJqu)
          g$ls2$7979$RCJqu
          (if (memq (car g$ls1$7978$RCJqu) g$ls2$7979$RCJqu)
            (g$set-union$7524$RCJqu (cdr g$ls1$7978$RCJqu) g$ls2$7979$RCJqu)
            (cons
              (car g$ls1$7978$RCJqu)
              (g$set-union$7524$RCJqu
                (cdr g$ls1$7978$RCJqu)
                g$ls2$7979$RCJqu)))))))
   (g$top-mark*$7526$RCJqu g$top-mark*$11168$RCJqu '(top))
   (g$top-marked?$7527$RCJqu
     g$top-marked?$11169$RCJqu
     (case-lambda ((g$m*$7980$RCJqu) (memq 'top g$m*$7980$RCJqu))))
   (g$gen-lexical$7528$RCJqu
     g$gen-lexical$11170$RCJqu
     (case-lambda
       ((g$sym$7981$RCJqu)
        (if (symbol? g$sym$7981$RCJqu)
          (gensym g$sym$7981$RCJqu)
          (if (g$stx?$7556$RCJqu g$sym$7981$RCJqu)
            (g$gen-lexical$7528$RCJqu (g$id->sym$7585$RCJqu g$sym$7981$RCJqu))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7981$RCJqu))))))
   (g$gen-global$7529$RCJqu
     g$gen-global$11171$RCJqu
     (case-lambda
       ((g$x$7982$RCJqu) (g$gen-lexical$7528$RCJqu g$x$7982$RCJqu))))
   (g$gen-label$7530$RCJqu
     g$gen-label$11172$RCJqu
     (case-lambda ((g$_$7983$RCJqu) (gensym))))
   (g$gen-top-level-label$7531$RCJqu
     g$gen-top-level-label$11173$RCJqu
     (case-lambda
       ((g$id$7984$RCJqu g$rib$7985$RCJqu)
        (letrec* ((g$find$7986$RCJqu
                    (case-lambda
                      ((g$sym$7992$RCJqu
                         g$mark*$7993$RCJqu
                         g$sym*$7994$RCJqu
                         g$mark**$7995$RCJqu
                         g$label*$7996$RCJqu)
                       (if (pair? g$sym*$7994$RCJqu)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7992$RCJqu
                                        (car g$sym*$7994$RCJqu))
                                 (begin
                                   '#f
                                   (g$same-marks?$7586$RCJqu
                                     g$mark*$7993$RCJqu
                                     (car g$mark**$7995$RCJqu)))
                                 '#f)
                             (car g$label*$7996$RCJqu)
                             (g$find$7986$RCJqu
                               g$sym$7992$RCJqu
                               g$mark*$7993$RCJqu
                               (cdr g$sym*$7994$RCJqu)
                               (cdr g$mark**$7995$RCJqu)
                               (cdr g$label*$7996$RCJqu))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7987$RCJqu g$mark*$7988$RCJqu)
              ((case-lambda
                 ((g$sym*$7989$RCJqu)
                  ((case-lambda
                     ((g$t$7990$RCJqu)
                      (if g$t$7990$RCJqu
                        ((case-lambda
                           ((g$label$7991$RCJqu)
                            (if (g$imported-label->binding$7398$RCJqu
                                  g$label$7991$RCJqu)
                              (gensym)
                              g$label$7991$RCJqu)))
                         g$t$7990$RCJqu)
                        (gensym))))
                   (if (memq
                         g$sym$7987$RCJqu
                         (g$rib-sym*$7539$RCJqu g$rib$7985$RCJqu))
                     (begin
                       '#f
                       (g$find$7986$RCJqu
                         g$sym$7987$RCJqu
                         g$mark*$7988$RCJqu
                         g$sym*$7989$RCJqu
                         (g$rib-mark**$7540$RCJqu g$rib$7985$RCJqu)
                         (g$rib-label*$7541$RCJqu g$rib$7985$RCJqu)))
                     '#f))))
               (g$rib-sym*$7539$RCJqu g$rib$7985$RCJqu))))
           (g$id->sym$7585$RCJqu g$id$7984$RCJqu)
           (g$stx-mark*$7559$RCJqu g$id$7984$RCJqu))))))
   (g$gen-define-label+loc$7532$RCJqu
     g$gen-define-label+loc$11174$RCJqu
     (case-lambda
       ((g$id$7997$RCJqu g$rib$7998$RCJqu)
        ((case-lambda
           ((g$t$7999$RCJqu)
            (if g$t$7999$RCJqu
              ((case-lambda
                 ((g$env$8000$RCJqu)
                  ((case-lambda
                     ((g$label$8001$RCJqu g$locs$8002$RCJqu)
                      (values
                        g$label$8001$RCJqu
                        ((case-lambda
                           ((g$t$8003$RCJqu)
                            (if g$t$8003$RCJqu
                              (cdr g$t$8003$RCJqu)
                              ((case-lambda
                                 ((g$loc$8004$RCJqu)
                                  (begin
                                    (g$set-interaction-env-locs!$7945$RCJqu
                                      g$env$8000$RCJqu
                                      (cons
                                        (cons
                                          g$label$8001$RCJqu
                                          g$loc$8004$RCJqu)
                                        g$locs$8002$RCJqu))
                                    g$loc$8004$RCJqu)))
                               (g$gen-lexical$7528$RCJqu g$id$7997$RCJqu)))))
                         (assq g$label$8001$RCJqu g$locs$8002$RCJqu)))))
                   (g$gen-top-level-label$7531$RCJqu
                     g$id$7997$RCJqu
                     g$rib$7998$RCJqu)
                   (g$interaction-env-locs$7942$RCJqu g$env$8000$RCJqu))))
               g$t$7999$RCJqu)
              (values (gensym) (g$gen-lexical$7528$RCJqu g$id$7997$RCJqu)))))
         (g$top-level-context$7975$RCJqu)))))
   (g$gen-define-label$7533$RCJqu
     g$gen-define-label$11175$RCJqu
     (case-lambda
       ((g$id$8005$RCJqu g$rib$8006$RCJqu)
        (if (g$top-level-context$7975$RCJqu)
          (g$gen-top-level-label$7531$RCJqu g$id$8005$RCJqu g$rib$8006$RCJqu)
          (gensym)))))
   (g$8334$7534$RCJqu
     g$8334$11176$RCJqu
     (make-record-type-descriptor
       'rib
       '#f
       'g$8337$RCJqu
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8336$7535$RCJqu g$8336$11177$RCJqu '#f)
   (g$8335$7536$RCJqu
     g$8335$11178$RCJqu
     (make-record-constructor-descriptor
       g$8334$7534$RCJqu
       '#f
       g$8336$7535$RCJqu))
   (g$rib?$7537$RCJqu
     g$rib?$11179$RCJqu
     (record-predicate g$8334$7534$RCJqu))
   (g$make-rib$7538$RCJqu
     g$make-rib$11180$RCJqu
     (record-constructor g$8335$7536$RCJqu))
   (g$rib-sym*$7539$RCJqu
     g$rib-sym*$11181$RCJqu
     (record-accessor g$8334$7534$RCJqu '0))
   (g$rib-mark**$7540$RCJqu
     g$rib-mark**$11182$RCJqu
     (record-accessor g$8334$7534$RCJqu '1))
   (g$rib-label*$7541$RCJqu
     g$rib-label*$11183$RCJqu
     (record-accessor g$8334$7534$RCJqu '2))
   (g$rib-sealed/freq$7542$RCJqu
     g$rib-sealed/freq$11184$RCJqu
     (record-accessor g$8334$7534$RCJqu '3))
   (g$set-rib-sym*!$7543$RCJqu
     g$set-rib-sym*!$11185$RCJqu
     (record-mutator g$8334$7534$RCJqu '0))
   (g$set-rib-mark**!$7544$RCJqu
     g$set-rib-mark**!$11186$RCJqu
     (record-mutator g$8334$7534$RCJqu '1))
   (g$set-rib-label*!$7545$RCJqu
     g$set-rib-label*!$11187$RCJqu
     (record-mutator g$8334$7534$RCJqu '2))
   (g$set-rib-sealed/freq!$7546$RCJqu
     g$set-rib-sealed/freq!$11188$RCJqu
     (record-mutator g$8334$7534$RCJqu '3))
   (g$make-empty-rib$7547$RCJqu
     g$make-empty-rib$11189$RCJqu
     (case-lambda (() (g$make-rib$7538$RCJqu '() '() '() '#f))))
   (g$extend-rib!$7548$RCJqu
     g$extend-rib!$11190$RCJqu
     (case-lambda
       ((g$rib$8007$RCJqu g$id$8008$RCJqu g$label$8009$RCJqu)
        (letrec* ((g$find$8010$RCJqu
                    (case-lambda
                      ((g$sym$8016$RCJqu
                         g$mark*$8017$RCJqu
                         g$sym*$8018$RCJqu
                         g$mark**$8019$RCJqu
                         g$label*$8020$RCJqu)
                       (if (pair? g$sym*$8018$RCJqu)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8016$RCJqu
                                        (car g$sym*$8018$RCJqu))
                                 (begin
                                   '#f
                                   (g$same-marks?$7586$RCJqu
                                     g$mark*$8017$RCJqu
                                     (car g$mark**$8019$RCJqu)))
                                 '#f)
                             g$label*$8020$RCJqu
                             (g$find$8010$RCJqu
                               g$sym$8016$RCJqu
                               g$mark*$8017$RCJqu
                               (cdr g$sym*$8018$RCJqu)
                               (cdr g$mark**$8019$RCJqu)
                               (cdr g$label*$8020$RCJqu))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7542$RCJqu g$rib$8007$RCJqu)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8007$RCJqu)
              (void))
            ((case-lambda
               ((g$sym$8011$RCJqu g$mark*$8012$RCJqu)
                ((case-lambda
                   ((g$sym*$8013$RCJqu)
                    ((case-lambda
                       ((g$t$8014$RCJqu)
                        (if g$t$8014$RCJqu
                          ((case-lambda
                             ((g$p$8015$RCJqu)
                              (if (eq? g$label$8009$RCJqu (car g$p$8015$RCJqu))
                                (void)
                                (if (g$top-level-context$7975$RCJqu)
                                  (set-car! g$p$8015$RCJqu g$label$8009$RCJqu)
                                  (g$syntax-violation$7968$RCJqu
                                    '#f
                                    '"cannot redefine"
                                    g$id$8008$RCJqu)))))
                           g$t$8014$RCJqu)
                          (begin
                            (g$set-rib-sym*!$7543$RCJqu
                              g$rib$8007$RCJqu
                              (cons g$sym$8011$RCJqu g$sym*$8013$RCJqu))
                            (g$set-rib-mark**!$7544$RCJqu
                              g$rib$8007$RCJqu
                              (cons
                                g$mark*$8012$RCJqu
                                (g$rib-mark**$7540$RCJqu g$rib$8007$RCJqu)))
                            (g$set-rib-label*!$7545$RCJqu
                              g$rib$8007$RCJqu
                              (cons
                                g$label$8009$RCJqu
                                (g$rib-label*$7541$RCJqu g$rib$8007$RCJqu)))))))
                     (if (memq
                           g$sym$8011$RCJqu
                           (g$rib-sym*$7539$RCJqu g$rib$8007$RCJqu))
                       (begin
                         '#f
                         (g$find$8010$RCJqu
                           g$sym$8011$RCJqu
                           g$mark*$8012$RCJqu
                           g$sym*$8013$RCJqu
                           (g$rib-mark**$7540$RCJqu g$rib$8007$RCJqu)
                           (g$rib-label*$7541$RCJqu g$rib$8007$RCJqu)))
                       '#f))))
                 (g$rib-sym*$7539$RCJqu g$rib$8007$RCJqu))))
             (g$id->sym$7585$RCJqu g$id$8008$RCJqu)
             (g$stx-mark*$7559$RCJqu g$id$8008$RCJqu)))))))
   (g$make-rib-map$7549$RCJqu
     g$make-rib-map$11191$RCJqu
     (case-lambda
       ((g$sym*$8021$RCJqu)
        ((case-lambda
           ((g$ht$8022$RCJqu)
            ((letrec ((g$f$8023$RCJqu
                        (case-lambda
                          ((g$i$8024$RCJqu g$sym*$8025$RCJqu)
                           (if (null? g$sym*$8025$RCJqu)
                             g$ht$8022$RCJqu
                             (begin
                               (g$hashtable-update!$5812$RCJqu
                                 g$ht$8022$RCJqu
                                 (car g$sym*$8025$RCJqu)
                                 (case-lambda
                                   ((g$x$8026$RCJqu)
                                    (cons g$i$8024$RCJqu g$x$8026$RCJqu)))
                                 '())
                               (g$f$8023$RCJqu
                                 (+ g$i$8024$RCJqu '1)
                                 (cdr g$sym*$8025$RCJqu))))))))
               g$f$8023$RCJqu)
             '0
             g$sym*$8021$RCJqu)))
         (g$make-eq-hashtable$5805$RCJqu)))))
   (g$seal-rib!$7550$RCJqu
     g$seal-rib!$11192$RCJqu
     (case-lambda
       ((g$rib$8027$RCJqu)
        ((case-lambda
           ((g$sym*$8028$RCJqu)
            (if (null? g$sym*$8028$RCJqu)
              (void)
              (begin
                (g$set-rib-sym*!$7543$RCJqu
                  g$rib$8027$RCJqu
                  (list->vector g$sym*$8028$RCJqu))
                (g$set-rib-mark**!$7544$RCJqu
                  g$rib$8027$RCJqu
                  (list->vector (g$rib-mark**$7540$RCJqu g$rib$8027$RCJqu)))
                (g$set-rib-label*!$7545$RCJqu
                  g$rib$8027$RCJqu
                  (list->vector (g$rib-label*$7541$RCJqu g$rib$8027$RCJqu)))
                (g$set-rib-sealed/freq!$7546$RCJqu
                  g$rib$8027$RCJqu
                  (g$make-rib-map$7549$RCJqu g$sym*$8028$RCJqu))))))
         (g$rib-sym*$7539$RCJqu g$rib$8027$RCJqu)))))
   (g$unseal-rib!$7551$RCJqu
     g$unseal-rib!$11193$RCJqu
     (case-lambda
       ((g$rib$8029$RCJqu)
        (if (g$rib-sealed/freq$7542$RCJqu g$rib$8029$RCJqu)
          (begin
            (g$set-rib-sealed/freq!$7546$RCJqu g$rib$8029$RCJqu '#f)
            (g$set-rib-sym*!$7543$RCJqu
              g$rib$8029$RCJqu
              (vector->list (g$rib-sym*$7539$RCJqu g$rib$8029$RCJqu)))
            (g$set-rib-mark**!$7544$RCJqu
              g$rib$8029$RCJqu
              (vector->list (g$rib-mark**$7540$RCJqu g$rib$8029$RCJqu)))
            (g$set-rib-label*!$7545$RCJqu
              g$rib$8029$RCJqu
              (vector->list (g$rib-label*$7541$RCJqu g$rib$8029$RCJqu))))
          (void)))))
   (g$make-full-rib$7552$RCJqu
     g$make-full-rib$11194$RCJqu
     (case-lambda
       ((g$id*$8030$RCJqu g$label*$8031$RCJqu)
        ((case-lambda
           ((g$r$8032$RCJqu)
            (begin (g$seal-rib!$7550$RCJqu g$r$8032$RCJqu) g$r$8032$RCJqu)))
         (g$make-rib$7538$RCJqu
           (map g$id->sym$7585$RCJqu g$id*$8030$RCJqu)
           (map g$stx-mark*$7559$RCJqu g$id*$8030$RCJqu)
           g$label*$8031$RCJqu
           '#f)))))
   (g$8360$7553$RCJqu
     g$8360$11195$RCJqu
     (make-record-type-descriptor
       'stx
       '#f
       'g$8363$RCJqu
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8362$7554$RCJqu g$8362$11196$RCJqu '#f)
   (g$8361$7555$RCJqu
     g$8361$11197$RCJqu
     (make-record-constructor-descriptor
       g$8360$7553$RCJqu
       '#f
       g$8362$7554$RCJqu))
   (g$stx?$7556$RCJqu
     g$stx?$11198$RCJqu
     (record-predicate g$8360$7553$RCJqu))
   (g$make-stx$7557$RCJqu
     g$make-stx$11199$RCJqu
     (record-constructor g$8361$7555$RCJqu))
   (g$stx-expr$7558$RCJqu
     g$stx-expr$11200$RCJqu
     (record-accessor g$8360$7553$RCJqu '0))
   (g$stx-mark*$7559$RCJqu
     g$stx-mark*$11201$RCJqu
     (record-accessor g$8360$7553$RCJqu '1))
   (g$stx-subst*$7560$RCJqu
     g$stx-subst*$11202$RCJqu
     (record-accessor g$8360$7553$RCJqu '2))
   (g$stx-ae*$7561$RCJqu
     g$stx-ae*$11203$RCJqu
     (record-accessor g$8360$7553$RCJqu '3))
   (g$set-stx-expr!$7562$RCJqu
     g$set-stx-expr!$11204$RCJqu
     (record-mutator g$8360$7553$RCJqu '0))
   (g$set-stx-mark*!$7563$RCJqu
     g$set-stx-mark*!$11205$RCJqu
     (record-mutator g$8360$7553$RCJqu '1))
   (g$set-stx-subst*!$7564$RCJqu
     g$set-stx-subst*!$11206$RCJqu
     (record-mutator g$8360$7553$RCJqu '2))
   (g$set-stx-ae*!$7565$RCJqu
     g$set-stx-ae*!$11207$RCJqu
     (record-mutator g$8360$7553$RCJqu '3))
   (g$rp$7566$RCJqu
     g$rp$11208$RCJqu
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8033$RCJqu g$p$8034$RCJqu)
          (begin
            (display '"#<syntax " g$p$8034$RCJqu)
            (write (g$stx->datum$7595$RCJqu g$x$8033$RCJqu) g$p$8034$RCJqu)
            ((case-lambda
               ((g$expr$8035$RCJqu)
                (if (annotation? g$expr$8035$RCJqu)
                  ((case-lambda
                     ((g$src$8036$RCJqu)
                      (if (pair? g$src$8036$RCJqu)
                        (begin
                          (display '" [" g$p$8034$RCJqu)
                          (display (cdr g$src$8036$RCJqu) g$p$8034$RCJqu)
                          (display '" of " g$p$8034$RCJqu)
                          (display (car g$src$8036$RCJqu) g$p$8034$RCJqu)
                          (display '"]" g$p$8034$RCJqu))
                        (void))))
                   (annotation-source g$expr$8035$RCJqu))
                  (void))))
             (g$stx-expr$7558$RCJqu g$x$8033$RCJqu))
            (display '">" g$p$8034$RCJqu))))))
   (g$datum->stx$7567$RCJqu
     g$datum->stx$11209$RCJqu
     (case-lambda
       ((g$id$8037$RCJqu g$datum$8038$RCJqu)
        (g$make-stx$7557$RCJqu
          g$datum$8038$RCJqu
          (g$stx-mark*$7559$RCJqu g$id$8037$RCJqu)
          (g$stx-subst*$7560$RCJqu g$id$8037$RCJqu)
          (g$stx-ae*$7561$RCJqu g$id$8037$RCJqu)))))
   (g$gen-mark$7568$RCJqu
     g$gen-mark$11210$RCJqu
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7569$RCJqu g$anti-mark$11211$RCJqu '#f)
   (g$anti-mark?$7570$RCJqu g$anti-mark?$11212$RCJqu not)
   (g$join-wraps$7571$RCJqu
     g$join-wraps$11213$RCJqu
     (case-lambda
       ((g$m1*$8039$RCJqu g$s1*$8040$RCJqu g$ae1*$8041$RCJqu g$e$8042$RCJqu)
        (letrec* ((g$cancel$8043$RCJqu
                    (case-lambda
                      ((g$ls1$8047$RCJqu g$ls2$8048$RCJqu)
                       ((letrec ((g$f$8049$RCJqu
                                   (case-lambda
                                     ((g$x$8050$RCJqu g$ls1$8051$RCJqu)
                                      (if (null? g$ls1$8051$RCJqu)
                                        (cdr g$ls2$8048$RCJqu)
                                        (cons
                                          g$x$8050$RCJqu
                                          (g$f$8049$RCJqu
                                            (car g$ls1$8051$RCJqu)
                                            (cdr g$ls1$8051$RCJqu))))))))
                          g$f$8049$RCJqu)
                        (car g$ls1$8047$RCJqu)
                        (cdr g$ls1$8047$RCJqu))))))
          ((case-lambda
             ((g$m2*$8044$RCJqu g$s2*$8045$RCJqu g$ae2*$8046$RCJqu)
              (if (if (not (null? g$m1*$8039$RCJqu))
                    (if (not (null? g$m2*$8044$RCJqu))
                      (begin
                        '#f
                        (g$anti-mark?$7570$RCJqu (car g$m2*$8044$RCJqu)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8043$RCJqu g$m1*$8039$RCJqu g$m2*$8044$RCJqu)
                  (g$cancel$8043$RCJqu g$s1*$8040$RCJqu g$s2*$8045$RCJqu)
                  (g$cancel$8043$RCJqu g$ae1*$8041$RCJqu g$ae2*$8046$RCJqu))
                (values
                  (append g$m1*$8039$RCJqu g$m2*$8044$RCJqu)
                  (append g$s1*$8040$RCJqu g$s2*$8045$RCJqu)
                  (append g$ae1*$8041$RCJqu g$ae2*$8046$RCJqu)))))
           (g$stx-mark*$7559$RCJqu g$e$8042$RCJqu)
           (g$stx-subst*$7560$RCJqu g$e$8042$RCJqu)
           (g$stx-ae*$7561$RCJqu g$e$8042$RCJqu))))))
   (g$mkstx$7572$RCJqu
     g$mkstx$11214$RCJqu
     (case-lambda
       ((g$e$8052$RCJqu g$m*$8053$RCJqu g$s*$8054$RCJqu g$ae*$8055$RCJqu)
        (if (g$stx?$7556$RCJqu g$e$8052$RCJqu)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7571$RCJqu
                 g$m*$8053$RCJqu
                 g$s*$8054$RCJqu
                 g$ae*$8055$RCJqu
                 g$e$8052$RCJqu)))
            (case-lambda
              ((g$m*$8059$RCJqu g$s*$8060$RCJqu g$ae*$8061$RCJqu)
               ((case-lambda
                  ((g$ae*$8062$RCJqu g$s*$8063$RCJqu g$m*$8064$RCJqu)
                   (g$make-stx$7557$RCJqu
                     (g$stx-expr$7558$RCJqu g$e$8052$RCJqu)
                     g$m*$8064$RCJqu
                     g$s*$8063$RCJqu
                     g$ae*$8062$RCJqu)))
                g$ae*$8061$RCJqu
                g$s*$8060$RCJqu
                g$m*$8059$RCJqu))))
          (g$make-stx$7557$RCJqu
            g$e$8052$RCJqu
            g$m*$8053$RCJqu
            g$s*$8054$RCJqu
            g$ae*$8055$RCJqu)))))
   (g$add-mark$7573$RCJqu
     g$add-mark$11215$RCJqu
     (case-lambda
       ((g$m$8065$RCJqu g$e$8066$RCJqu g$ae$8067$RCJqu)
        (g$mkstx$7572$RCJqu
          g$e$8066$RCJqu
          (list g$m$8065$RCJqu)
          '(shift)
          (list g$ae$8067$RCJqu)))))
   (g$add-subst$7574$RCJqu
     g$add-subst$11216$RCJqu
     (case-lambda
       ((g$subst$8068$RCJqu g$e$8069$RCJqu)
        (g$mkstx$7572$RCJqu g$e$8069$RCJqu '() (list g$subst$8068$RCJqu) '()))))
   (g$syntax-kind?$7575$RCJqu
     g$syntax-kind?$11217$RCJqu
     (case-lambda
       ((g$x$8070$RCJqu g$p?$8071$RCJqu)
        (if (g$stx?$7556$RCJqu g$x$8070$RCJqu)
          (g$syntax-kind?$7575$RCJqu
            (g$stx-expr$7558$RCJqu g$x$8070$RCJqu)
            g$p?$8071$RCJqu)
          (if (annotation? g$x$8070$RCJqu)
            (g$syntax-kind?$7575$RCJqu
              (annotation-expression g$x$8070$RCJqu)
              g$p?$8071$RCJqu)
            (g$p?$8071$RCJqu g$x$8070$RCJqu))))))
   (g$syntax-vector->list$7576$RCJqu
     g$syntax-vector->list$11218$RCJqu
     (case-lambda
       ((g$x$8072$RCJqu)
        (if (g$stx?$7556$RCJqu g$x$8072$RCJqu)
          ((case-lambda
             ((g$ls$8073$RCJqu g$m*$8074$RCJqu g$s*$8075$RCJqu g$ae*$8076$RCJqu)
              (map (case-lambda
                     ((g$x$8077$RCJqu)
                      (g$mkstx$7572$RCJqu
                        g$x$8077$RCJqu
                        g$m*$8074$RCJqu
                        g$s*$8075$RCJqu
                        g$ae*$8076$RCJqu)))
                   g$ls$8073$RCJqu)))
           (g$syntax-vector->list$7576$RCJqu
             (g$stx-expr$7558$RCJqu g$x$8072$RCJqu))
           (g$stx-mark*$7559$RCJqu g$x$8072$RCJqu)
           (g$stx-subst*$7560$RCJqu g$x$8072$RCJqu)
           (g$stx-ae*$7561$RCJqu g$x$8072$RCJqu))
          (if (annotation? g$x$8072$RCJqu)
            (g$syntax-vector->list$7576$RCJqu
              (annotation-expression g$x$8072$RCJqu))
            (if (vector? g$x$8072$RCJqu)
              (vector->list g$x$8072$RCJqu)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8072$RCJqu)))))))
   (g$syntax-pair?$7577$RCJqu
     g$syntax-pair?$11219$RCJqu
     (case-lambda
       ((g$x$8078$RCJqu) (g$syntax-kind?$7575$RCJqu g$x$8078$RCJqu pair?))))
   (g$syntax-vector?$7578$RCJqu
     g$syntax-vector?$11220$RCJqu
     (case-lambda
       ((g$x$8079$RCJqu) (g$syntax-kind?$7575$RCJqu g$x$8079$RCJqu vector?))))
   (g$syntax-null?$7579$RCJqu
     g$syntax-null?$11221$RCJqu
     (case-lambda
       ((g$x$8080$RCJqu) (g$syntax-kind?$7575$RCJqu g$x$8080$RCJqu null?))))
   (g$syntax-list?$7580$RCJqu
     g$syntax-list?$11222$RCJqu
     (case-lambda
       ((g$x$8081$RCJqu)
        ((case-lambda
           ((g$t$8082$RCJqu)
            (if g$t$8082$RCJqu
              g$t$8082$RCJqu
              (begin
                '#f
                (if (g$syntax-pair?$7577$RCJqu g$x$8081$RCJqu)
                  (begin
                    '#f
                    (g$syntax-list?$7580$RCJqu
                      (g$syntax-cdr$7582$RCJqu g$x$8081$RCJqu)))
                  '#f)))))
         (g$syntax-null?$7579$RCJqu g$x$8081$RCJqu)))))
   (g$syntax-car$7581$RCJqu
     g$syntax-car$11223$RCJqu
     (case-lambda
       ((g$x$8083$RCJqu)
        (if (g$stx?$7556$RCJqu g$x$8083$RCJqu)
          (g$mkstx$7572$RCJqu
            (g$syntax-car$7581$RCJqu (g$stx-expr$7558$RCJqu g$x$8083$RCJqu))
            (g$stx-mark*$7559$RCJqu g$x$8083$RCJqu)
            (g$stx-subst*$7560$RCJqu g$x$8083$RCJqu)
            (g$stx-ae*$7561$RCJqu g$x$8083$RCJqu))
          (if (annotation? g$x$8083$RCJqu)
            (g$syntax-car$7581$RCJqu (annotation-expression g$x$8083$RCJqu))
            (if (pair? g$x$8083$RCJqu)
              (car g$x$8083$RCJqu)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8083$RCJqu)))))))
   (g$syntax-cdr$7582$RCJqu
     g$syntax-cdr$11224$RCJqu
     (case-lambda
       ((g$x$8084$RCJqu)
        (if (g$stx?$7556$RCJqu g$x$8084$RCJqu)
          (g$mkstx$7572$RCJqu
            (g$syntax-cdr$7582$RCJqu (g$stx-expr$7558$RCJqu g$x$8084$RCJqu))
            (g$stx-mark*$7559$RCJqu g$x$8084$RCJqu)
            (g$stx-subst*$7560$RCJqu g$x$8084$RCJqu)
            (g$stx-ae*$7561$RCJqu g$x$8084$RCJqu))
          (if (annotation? g$x$8084$RCJqu)
            (g$syntax-cdr$7582$RCJqu (annotation-expression g$x$8084$RCJqu))
            (if (pair? g$x$8084$RCJqu)
              (cdr g$x$8084$RCJqu)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8084$RCJqu)))))))
   (g$syntax->list$7583$RCJqu
     g$syntax->list$11225$RCJqu
     (case-lambda
       ((g$x$8085$RCJqu)
        (if (g$syntax-pair?$7577$RCJqu g$x$8085$RCJqu)
          (cons
            (g$syntax-car$7581$RCJqu g$x$8085$RCJqu)
            (g$syntax->list$7583$RCJqu
              (g$syntax-cdr$7582$RCJqu g$x$8085$RCJqu)))
          (if (g$syntax-null?$7579$RCJqu g$x$8085$RCJqu)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8085$RCJqu))))))
   (g$id?$7584$RCJqu
     g$id?$11226$RCJqu
     (case-lambda
       ((g$x$8086$RCJqu)
        (if (g$stx?$7556$RCJqu g$x$8086$RCJqu)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8087$RCJqu)
                (symbol?
                  (if (annotation? g$expr$8087$RCJqu)
                    (annotation-stripped g$expr$8087$RCJqu)
                    g$expr$8087$RCJqu))))
             (g$stx-expr$7558$RCJqu g$x$8086$RCJqu)))
          '#f))))
   (g$id->sym$7585$RCJqu
     g$id->sym$11227$RCJqu
     (case-lambda
       ((g$x$8088$RCJqu)
        (begin
          (if (g$stx?$7556$RCJqu g$x$8088$RCJqu)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8088$RCJqu))
          ((case-lambda
             ((g$expr$8089$RCJqu)
              ((case-lambda
                 ((g$sym$8090$RCJqu)
                  (if (symbol? g$sym$8090$RCJqu)
                    g$sym$8090$RCJqu
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8088$RCJqu))))
               (if (annotation? g$expr$8089$RCJqu)
                 (annotation-stripped g$expr$8089$RCJqu)
                 g$expr$8089$RCJqu))))
           (g$stx-expr$7558$RCJqu g$x$8088$RCJqu))))))
   (g$same-marks?$7586$RCJqu
     g$same-marks?$11228$RCJqu
     (case-lambda
       ((g$x$8091$RCJqu g$y$8092$RCJqu)
        ((case-lambda
           ((g$t$8093$RCJqu)
            (if g$t$8093$RCJqu
              g$t$8093$RCJqu
              (begin
                '#f
                (if (pair? g$x$8091$RCJqu)
                  (if (pair? g$y$8092$RCJqu)
                    (if (eq? (car g$x$8091$RCJqu) (car g$y$8092$RCJqu))
                      (begin
                        '#f
                        (g$same-marks?$7586$RCJqu
                          (cdr g$x$8091$RCJqu)
                          (cdr g$y$8092$RCJqu)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8091$RCJqu) (begin '#f (null? g$y$8092$RCJqu)) '#f)))))
   (g$bound-id=?$7587$RCJqu
     g$bound-id=?$11229$RCJqu
     (case-lambda
       ((g$x$8094$RCJqu g$y$8095$RCJqu)
        (if (eq? (g$id->sym$7585$RCJqu g$x$8094$RCJqu)
                 (g$id->sym$7585$RCJqu g$y$8095$RCJqu))
          (begin
            '#f
            (g$same-marks?$7586$RCJqu
              (g$stx-mark*$7559$RCJqu g$x$8094$RCJqu)
              (g$stx-mark*$7559$RCJqu g$y$8095$RCJqu)))
          '#f))))
   (g$free-id=?$7588$RCJqu
     g$free-id=?$11230$RCJqu
     (case-lambda
       ((g$i$8096$RCJqu g$j$8097$RCJqu)
        ((case-lambda
           ((g$t0$8098$RCJqu g$t1$8099$RCJqu)
            (if ((case-lambda
                   ((g$t$8100$RCJqu)
                    (if g$t$8100$RCJqu
                      g$t$8100$RCJqu
                      (begin '#f g$t1$8099$RCJqu))))
                 g$t0$8098$RCJqu)
              (eq? g$t0$8098$RCJqu g$t1$8099$RCJqu)
              (eq? (g$id->sym$7585$RCJqu g$i$8096$RCJqu)
                   (g$id->sym$7585$RCJqu g$j$8097$RCJqu)))))
         (g$id->real-label$7598$RCJqu g$i$8096$RCJqu)
         (g$id->real-label$7598$RCJqu g$j$8097$RCJqu)))))
   (g$valid-bound-ids?$7589$RCJqu
     g$valid-bound-ids?$11231$RCJqu
     (case-lambda
       ((g$id*$8101$RCJqu)
        (if (g$for-all$6012$RCJqu g$id?$7584$RCJqu g$id*$8101$RCJqu)
          (begin '#f (g$distinct-bound-ids?$7590$RCJqu g$id*$8101$RCJqu))
          '#f))))
   (g$distinct-bound-ids?$7590$RCJqu
     g$distinct-bound-ids?$11232$RCJqu
     (case-lambda
       ((g$id*$8102$RCJqu)
        ((case-lambda
           ((g$t$8103$RCJqu)
            (if g$t$8103$RCJqu
              g$t$8103$RCJqu
              (begin
                '#f
                (if (not (g$bound-id-member?$7591$RCJqu
                           (car g$id*$8102$RCJqu)
                           (cdr g$id*$8102$RCJqu)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7590$RCJqu (cdr g$id*$8102$RCJqu)))
                  '#f)))))
         (null? g$id*$8102$RCJqu)))))
   (g$bound-id-member?$7591$RCJqu
     g$bound-id-member?$11233$RCJqu
     (case-lambda
       ((g$id$8104$RCJqu g$id*$8105$RCJqu)
        (if (pair? g$id*$8105$RCJqu)
          (begin
            '#f
            ((case-lambda
               ((g$t$8106$RCJqu)
                (if g$t$8106$RCJqu
                  g$t$8106$RCJqu
                  (begin
                    '#f
                    (g$bound-id-member?$7591$RCJqu
                      g$id$8104$RCJqu
                      (cdr g$id*$8105$RCJqu))))))
             (g$bound-id=?$7587$RCJqu g$id$8104$RCJqu (car g$id*$8105$RCJqu))))
          '#f))))
   (g$self-evaluating?$7592$RCJqu
     g$self-evaluating?$11234$RCJqu
     (case-lambda
       ((g$x$8107$RCJqu)
        ((case-lambda
           ((g$t$8108$RCJqu)
            (if g$t$8108$RCJqu
              g$t$8108$RCJqu
              ((case-lambda
                 ((g$t$8109$RCJqu)
                  (if g$t$8109$RCJqu
                    g$t$8109$RCJqu
                    ((case-lambda
                       ((g$t$8110$RCJqu)
                        (if g$t$8110$RCJqu
                          g$t$8110$RCJqu
                          ((case-lambda
                             ((g$t$8111$RCJqu)
                              (if g$t$8111$RCJqu
                                g$t$8111$RCJqu
                                (begin '#f (bytevector? g$x$8107$RCJqu)))))
                           (boolean? g$x$8107$RCJqu)))))
                     (char? g$x$8107$RCJqu)))))
               (string? g$x$8107$RCJqu)))))
         (number? g$x$8107$RCJqu)))))
   (g$strip-annotations$7593$RCJqu
     g$strip-annotations$11235$RCJqu
     (case-lambda
       ((g$x$8112$RCJqu)
        (if (pair? g$x$8112$RCJqu)
          (cons
            (g$strip-annotations$7593$RCJqu (car g$x$8112$RCJqu))
            (g$strip-annotations$7593$RCJqu (cdr g$x$8112$RCJqu)))
          (if (vector? g$x$8112$RCJqu)
            (vector-map g$strip-annotations$7593$RCJqu g$x$8112$RCJqu)
            (if (annotation? g$x$8112$RCJqu)
              (annotation-stripped g$x$8112$RCJqu)
              g$x$8112$RCJqu))))))
   (g$strip$7594$RCJqu
     g$strip$11236$RCJqu
     (case-lambda
       ((g$x$8113$RCJqu g$m*$8114$RCJqu)
        (if (g$top-marked?$7527$RCJqu g$m*$8114$RCJqu)
          (if ((case-lambda
                 ((g$t$8115$RCJqu)
                  (if g$t$8115$RCJqu
                    g$t$8115$RCJqu
                    ((case-lambda
                       ((g$t$8116$RCJqu)
                        (if g$t$8116$RCJqu
                          g$t$8116$RCJqu
                          (begin
                            '#f
                            (if (vector? g$x$8113$RCJqu)
                              (if (> (vector-length g$x$8113$RCJqu) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8113$RCJqu '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8113$RCJqu)
                       (begin '#f (annotation? (car g$x$8113$RCJqu)))
                       '#f)))))
               (annotation? g$x$8113$RCJqu))
            (g$strip-annotations$7593$RCJqu g$x$8113$RCJqu)
            g$x$8113$RCJqu)
          ((letrec ((g$f$8117$RCJqu
                      (case-lambda
                        ((g$x$8118$RCJqu)
                         (if (g$stx?$7556$RCJqu g$x$8118$RCJqu)
                           (g$strip$7594$RCJqu
                             (g$stx-expr$7558$RCJqu g$x$8118$RCJqu)
                             (g$stx-mark*$7559$RCJqu g$x$8118$RCJqu))
                           (if (annotation? g$x$8118$RCJqu)
                             (annotation-stripped g$x$8118$RCJqu)
                             (if (pair? g$x$8118$RCJqu)
                               ((case-lambda
                                  ((g$a$8119$RCJqu g$d$8120$RCJqu)
                                   (if (if (eq? g$a$8119$RCJqu
                                                (car g$x$8118$RCJqu))
                                         (begin
                                           '#f
                                           (eq? g$d$8120$RCJqu
                                                (cdr g$x$8118$RCJqu)))
                                         '#f)
                                     g$x$8118$RCJqu
                                     (cons g$a$8119$RCJqu g$d$8120$RCJqu))))
                                (g$f$8117$RCJqu (car g$x$8118$RCJqu))
                                (g$f$8117$RCJqu (cdr g$x$8118$RCJqu)))
                               (if (vector? g$x$8118$RCJqu)
                                 ((case-lambda
                                    ((g$old$8121$RCJqu)
                                     ((case-lambda
                                        ((g$new$8122$RCJqu)
                                         (if (g$for-all$6012$RCJqu
                                               eq?
                                               g$old$8121$RCJqu
                                               g$new$8122$RCJqu)
                                           g$x$8118$RCJqu
                                           (list->vector g$new$8122$RCJqu))))
                                      (map g$f$8117$RCJqu g$old$8121$RCJqu))))
                                  (vector->list g$x$8118$RCJqu))
                                 g$x$8118$RCJqu))))))))
             g$f$8117$RCJqu)
           g$x$8113$RCJqu)))))
   (g$stx->datum$7595$RCJqu
     g$stx->datum$11237$RCJqu
     (case-lambda
       ((g$x$8123$RCJqu) (g$strip$7594$RCJqu g$x$8123$RCJqu '()))))
   (g$same-marks*?$7596$RCJqu
     g$same-marks*?$11238$RCJqu
     (case-lambda
       ((g$mark*$8124$RCJqu g$mark**$8125$RCJqu g$si$8126$RCJqu)
        (if (null? g$si$8126$RCJqu)
          '#f
          (if (g$same-marks?$7586$RCJqu
                g$mark*$8124$RCJqu
                (vector-ref g$mark**$8125$RCJqu (car g$si$8126$RCJqu)))
            (car g$si$8126$RCJqu)
            (g$same-marks*?$7596$RCJqu
              g$mark*$8124$RCJqu
              g$mark**$8125$RCJqu
              (cdr g$si$8126$RCJqu)))))))
   (g$id->label$7597$RCJqu
     g$id->label$11239$RCJqu
     (case-lambda
       ((g$id$8127$RCJqu)
        ((case-lambda
           ((g$t$8128$RCJqu)
            (if g$t$8128$RCJqu
              g$t$8128$RCJqu
              (begin
                '#f
                ((case-lambda
                   ((g$t$8129$RCJqu)
                    (if g$t$8129$RCJqu
                      ((case-lambda
                         ((g$env$8130$RCJqu)
                          ((case-lambda
                             ((g$rib$8131$RCJqu)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7532$RCJqu
                                     g$id$8127$RCJqu
                                     g$rib$8131$RCJqu)))
                                (case-lambda
                                  ((g$lab$8134$RCJqu g$loc_$8135$RCJqu)
                                   ((case-lambda
                                      ((g$loc_$8136$RCJqu g$lab$8137$RCJqu)
                                       (begin
                                         (g$extend-rib!$7548$RCJqu
                                           g$rib$8131$RCJqu
                                           g$id$8127$RCJqu
                                           g$lab$8137$RCJqu)
                                         g$lab$8137$RCJqu)))
                                    g$loc_$8135$RCJqu
                                    g$lab$8134$RCJqu))))))
                           (g$interaction-env-rib$7940$RCJqu
                             g$env$8130$RCJqu))))
                       g$t$8129$RCJqu)
                      '#f)))
                 (g$top-level-context$7975$RCJqu))))))
         (g$id->real-label$7598$RCJqu g$id$8127$RCJqu)))))
   (g$id->real-label$7598$RCJqu
     g$id->real-label$11240$RCJqu
     (case-lambda
       ((g$id$8138$RCJqu)
        ((case-lambda
           ((g$sym$8139$RCJqu)
            ((letrec ((g$search$8140$RCJqu
                        (case-lambda
                          ((g$subst*$8141$RCJqu g$mark*$8142$RCJqu)
                           (if (null? g$subst*$8141$RCJqu)
                             '#f
                             (if (eq? (car g$subst*$8141$RCJqu) 'shift)
                               (g$search$8140$RCJqu
                                 (cdr g$subst*$8141$RCJqu)
                                 (cdr g$mark*$8142$RCJqu))
                               ((case-lambda
                                  ((g$rib$8143$RCJqu)
                                   ((case-lambda
                                      ((g$t$8144$RCJqu)
                                       (if g$t$8144$RCJqu
                                         ((case-lambda
                                            ((g$ht$8145$RCJqu)
                                             ((case-lambda
                                                ((g$si$8146$RCJqu)
                                                 ((case-lambda
                                                    ((g$i$8147$RCJqu)
                                                     (if g$i$8147$RCJqu
                                                       (vector-ref
                                                         (g$rib-label*$7541$RCJqu
                                                           g$rib$8143$RCJqu)
                                                         g$i$8147$RCJqu)
                                                       (g$search$8140$RCJqu
                                                         (cdr g$subst*$8141$RCJqu)
                                                         g$mark*$8142$RCJqu))))
                                                  (if g$si$8146$RCJqu
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7596$RCJqu
                                                        g$mark*$8142$RCJqu
                                                        (g$rib-mark**$7540$RCJqu
                                                          g$rib$8143$RCJqu)
                                                        (reverse
                                                          g$si$8146$RCJqu)))
                                                    '#f))))
                                              (g$hashtable-ref$5808$RCJqu
                                                g$ht$8145$RCJqu
                                                g$sym$8139$RCJqu
                                                '#f))))
                                          g$t$8144$RCJqu)
                                         ((letrec ((g$f$8148$RCJqu
                                                     (case-lambda
                                                       ((g$sym*$8149$RCJqu
                                                          g$mark**$8150$RCJqu
                                                          g$label*$8151$RCJqu)
                                                        (if (null?
                                                              g$sym*$8149$RCJqu)
                                                          (g$search$8140$RCJqu
                                                            (cdr g$subst*$8141$RCJqu)
                                                            g$mark*$8142$RCJqu)
                                                          (if (if (eq? (car g$sym*$8149$RCJqu)
                                                                       g$sym$8139$RCJqu)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7586$RCJqu
                                                                    (car g$mark**$8150$RCJqu)
                                                                    g$mark*$8142$RCJqu))
                                                                '#f)
                                                            (car g$label*$8151$RCJqu)
                                                            (g$f$8148$RCJqu
                                                              (cdr g$sym*$8149$RCJqu)
                                                              (cdr g$mark**$8150$RCJqu)
                                                              (cdr g$label*$8151$RCJqu))))))))
                                            g$f$8148$RCJqu)
                                          (g$rib-sym*$7539$RCJqu
                                            g$rib$8143$RCJqu)
                                          (g$rib-mark**$7540$RCJqu
                                            g$rib$8143$RCJqu)
                                          (g$rib-label*$7541$RCJqu
                                            g$rib$8143$RCJqu)))))
                                    (g$rib-sealed/freq$7542$RCJqu
                                      g$rib$8143$RCJqu))))
                                (car g$subst*$8141$RCJqu))))))))
               g$search$8140$RCJqu)
             (g$stx-subst*$7560$RCJqu g$id$8138$RCJqu)
             (g$stx-mark*$7559$RCJqu g$id$8138$RCJqu))))
         (g$id->sym$7585$RCJqu g$id$8138$RCJqu)))))
   (g$label->binding$7599$RCJqu
     g$label->binding$11241$RCJqu
     (case-lambda
       ((g$x$8152$RCJqu g$r$8153$RCJqu)
        ((case-lambda
           ((g$t$8154$RCJqu)
            (if g$t$8154$RCJqu
              ((case-lambda
                 ((g$b$8155$RCJqu)
                  (if (if (pair? g$b$8155$RCJqu)
                        (begin '#f (eq? (car g$b$8155$RCJqu) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7825$RCJqu (cdr g$b$8155$RCJqu)))
                    (if (if (pair? g$b$8155$RCJqu)
                          (begin '#f (eq? (car g$b$8155$RCJqu) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8156$RCJqu g$loc$8157$RCJqu)
                          (cons '$rtd (symbol-value g$loc$8157$RCJqu))))
                       (g$cadr$5543$RCJqu g$b$8155$RCJqu)
                       (g$cddr$5545$RCJqu g$b$8155$RCJqu))
                      g$b$8155$RCJqu))))
               g$t$8154$RCJqu)
              ((case-lambda
                 ((g$t$8158$RCJqu)
                  (if g$t$8158$RCJqu
                    (cdr g$t$8158$RCJqu)
                    ((case-lambda
                       ((g$t$8159$RCJqu)
                        (if g$t$8159$RCJqu
                          ((case-lambda
                             ((g$env$8160$RCJqu)
                              ((case-lambda
                                 ((g$t$8161$RCJqu)
                                  (if g$t$8161$RCJqu
                                    ((case-lambda
                                       ((g$p$8162$RCJqu)
                                        (g$cons*$6014$RCJqu
                                          'lexical
                                          (cdr g$p$8162$RCJqu)
                                          '#f)))
                                     g$t$8161$RCJqu)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$8152$RCJqu
                                 (g$interaction-env-locs$7942$RCJqu
                                   g$env$8160$RCJqu)))))
                           g$t$8159$RCJqu)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7975$RCJqu)))))
               (assq g$x$8152$RCJqu g$r$8153$RCJqu)))))
         (g$imported-label->binding$7398$RCJqu g$x$8152$RCJqu)))))
   (g$make-binding$7600$RCJqu g$make-binding$11242$RCJqu cons)
   (g$binding-type$7601$RCJqu g$binding-type$11243$RCJqu car)
   (g$binding-value$7602$RCJqu g$binding-value$11244$RCJqu cdr)
   (g$raise-unbound-error$7603$RCJqu
     g$raise-unbound-error$11245$RCJqu
     (case-lambda
       ((g$id$8163$RCJqu)
        (g$syntax-violation*$7967$RCJqu
          '#f
          '"unbound identifier"
          g$id$8163$RCJqu
          (g$make-undefined-violation$6348$RCJqu)))))
   (g$syntax-type$7604$RCJqu
     g$syntax-type$11246$RCJqu
     (case-lambda
       ((g$e$8164$RCJqu g$r$8165$RCJqu)
        (if (g$id?$7584$RCJqu g$e$8164$RCJqu)
          ((case-lambda
             ((g$id$8166$RCJqu)
              ((case-lambda
                 ((g$label$8167$RCJqu)
                  ((case-lambda
                     ((g$b$8168$RCJqu)
                      ((case-lambda
                         ((g$type$8169$RCJqu)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$8167$RCJqu
                                  (void)
                                  (g$raise-unbound-error$7603$RCJqu
                                    g$id$8166$RCJqu))
                                ((case-lambda
                                   ((g$t$8170$RCJqu)
                                    (if (memv
                                          g$t$8170$RCJqu
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8169$RCJqu
                                        (g$binding-value$7602$RCJqu
                                          g$b$8168$RCJqu)
                                        g$id$8166$RCJqu)
                                      (values 'other '#f '#f))))
                                 g$type$8169$RCJqu)))))))
                       (g$binding-type$7601$RCJqu g$b$8168$RCJqu))))
                   (g$label->binding$7599$RCJqu
                     g$label$8167$RCJqu
                     g$r$8165$RCJqu))))
               (g$id->label$7597$RCJqu g$id$8166$RCJqu))))
           g$e$8164$RCJqu)
          (if (g$syntax-pair?$7577$RCJqu g$e$8164$RCJqu)
            ((case-lambda
               ((g$id$8171$RCJqu)
                (if (g$id?$7584$RCJqu g$id$8171$RCJqu)
                  ((case-lambda
                     ((g$label$8172$RCJqu)
                      ((case-lambda
                         ((g$b$8173$RCJqu)
                          ((case-lambda
                             ((g$type$8174$RCJqu)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$8172$RCJqu
                                      (void)
                                      (g$raise-unbound-error$7603$RCJqu
                                        g$id$8171$RCJqu))
                                    ((case-lambda
                                       ((g$t$8175$RCJqu)
                                        (if (memv
                                              g$t$8175$RCJqu
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$8174$RCJqu
                                            (g$binding-value$7602$RCJqu
                                              g$b$8173$RCJqu)
                                            g$id$8171$RCJqu)
                                          (values 'call '#f '#f))))
                                     g$type$8174$RCJqu)))))))
                           (g$binding-type$7601$RCJqu g$b$8173$RCJqu))))
                       (g$label->binding$7599$RCJqu
                         g$label$8172$RCJqu
                         g$r$8165$RCJqu))))
                   (g$id->label$7597$RCJqu g$id$8171$RCJqu))
                  (values 'call '#f '#f))))
             (g$syntax-car$7581$RCJqu g$e$8164$RCJqu))
            ((case-lambda
               ((g$d$8176$RCJqu)
                (if (g$self-evaluating?$7592$RCJqu g$d$8176$RCJqu)
                  (values 'constant g$d$8176$RCJqu '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7595$RCJqu g$e$8164$RCJqu)))))))
   (g$sanitize-binding$7612$RCJqu
     g$sanitize-binding$11247$RCJqu
     (case-lambda
       ((g$x$8177$RCJqu g$src$8178$RCJqu)
        (if (procedure? g$x$8177$RCJqu)
          (g$cons*$6014$RCJqu 'local-macro g$x$8177$RCJqu g$src$8178$RCJqu)
          (if (if (pair? g$x$8177$RCJqu)
                (if (eq? (car g$x$8177$RCJqu) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8177$RCJqu)))
                  '#f)
                '#f)
            (g$cons*$6014$RCJqu
              'local-macro!
              (cdr g$x$8177$RCJqu)
              g$src$8178$RCJqu)
            (if (if (pair? g$x$8177$RCJqu)
                  (begin '#f (eq? (car g$x$8177$RCJqu) '$rtd))
                  '#f)
              g$x$8177$RCJqu
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8177$RCJqu)))))))
   (g$make-variable-transformer$7613$RCJqu
     g$make-variable-transformer$11248$RCJqu
     (case-lambda
       ((g$x$8179$RCJqu)
        (if (procedure? g$x$8179$RCJqu)
          (cons 'macro! g$x$8179$RCJqu)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8179$RCJqu)))))
   (g$variable-transformer?$7614$RCJqu
     g$variable-transformer?$11249$RCJqu
     (case-lambda
       ((g$x$8180$RCJqu)
        (if (pair? g$x$8180$RCJqu)
          (if (eq? (car g$x$8180$RCJqu) 'macro!)
            (begin '#f (procedure? (cdr g$x$8180$RCJqu)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7615$RCJqu
     g$variable-transformer-procedure$11250$RCJqu
     (case-lambda
       ((g$x$8181$RCJqu)
        (if (g$variable-transformer?$7614$RCJqu g$x$8181$RCJqu)
          (cdr g$x$8181$RCJqu)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8181$RCJqu)))))
   (g$make-eval-transformer$7616$RCJqu
     g$make-eval-transformer$11251$RCJqu
     (case-lambda
       ((g$x$8182$RCJqu)
        (g$sanitize-binding$7612$RCJqu
          (eval-core (g$expanded->core$7098$RCJqu g$x$8182$RCJqu))
          g$x$8182$RCJqu))))
   (g$parse-define$7802$RCJqu
     g$parse-define$11252$RCJqu
     (case-lambda
       ((g$x$8183$RCJqu)
        ((case-lambda
           ((g$t$8184$RCJqu)
            ((case-lambda
               ((g$ls/false$8185$RCJqu)
                (if (if g$ls/false$8185$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8186$RCJqu
                               g$fmls$8187$RCJqu
                               g$b$8188$RCJqu
                               g$b*$8189$RCJqu)
                             (g$id?$7584$RCJqu g$id$8186$RCJqu)))
                          g$ls/false$8185$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8190$RCJqu
                         g$fmls$8191$RCJqu
                         g$b$8192$RCJqu
                         g$b*$8193$RCJqu)
                       (begin
                         (g$verify-formals$7882$RCJqu
                           g$fmls$8191$RCJqu
                           g$x$8183$RCJqu)
                         (values
                           g$id$8190$RCJqu
                           (cons
                             'defun
                             (cons
                               g$fmls$8191$RCJqu
                               (cons g$b$8192$RCJqu g$b*$8193$RCJqu)))))))
                    g$ls/false$8185$RCJqu)
                  ((case-lambda
                     ((g$t$8194$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8195$RCJqu)
                          (if (if g$ls/false$8195$RCJqu
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8196$RCJqu g$val$8197$RCJqu)
                                       (g$id?$7584$RCJqu g$id$8196$RCJqu)))
                                    g$ls/false$8195$RCJqu))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8198$RCJqu g$val$8199$RCJqu)
                                 (values
                                   g$id$8198$RCJqu
                                   (cons 'expr g$val$8199$RCJqu))))
                              g$ls/false$8195$RCJqu)
                            ((case-lambda
                               ((g$t$8200$RCJqu)
                                ((case-lambda
                                   ((g$ls/false$8201$RCJqu)
                                    (if (if g$ls/false$8201$RCJqu
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8202$RCJqu)
                                                 (g$id?$7584$RCJqu
                                                   g$id$8202$RCJqu)))
                                              g$ls/false$8201$RCJqu))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8203$RCJqu)
                                           (values
                                             g$id$8203$RCJqu
                                             (cons
                                               'expr
                                               (g$bless$7825$RCJqu '(void))))))
                                        g$ls/false$8201$RCJqu)
                                      (g$syntax-violation$7968$RCJqu
                                        '#f
                                        '"invalid syntax"
                                        g$t$8200$RCJqu))))
                                 (g$syntax-dispatch$7862$RCJqu
                                   g$t$8200$RCJqu
                                   '(_ any)))))
                             g$t$8194$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8194$RCJqu
                         '(_ any any)))))
                   g$t$8184$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8184$RCJqu
               '(_ (any . any) any . each-any)))))
         g$x$8183$RCJqu))))
   (g$parse-define-syntax$7803$RCJqu
     g$parse-define-syntax$11253$RCJqu
     (case-lambda
       ((g$x$8204$RCJqu)
        ((case-lambda
           ((g$t$8205$RCJqu)
            ((case-lambda
               ((g$ls/false$8206$RCJqu)
                (if (if g$ls/false$8206$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8207$RCJqu g$val$8208$RCJqu)
                             (g$id?$7584$RCJqu g$id$8207$RCJqu)))
                          g$ls/false$8206$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8209$RCJqu g$val$8210$RCJqu)
                       (values g$id$8209$RCJqu g$val$8210$RCJqu)))
                    g$ls/false$8206$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8205$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8205$RCJqu '(_ any any)))))
         g$x$8204$RCJqu))))
   (g$scheme-stx-hashtable$7804$RCJqu
     g$scheme-stx-hashtable$11254$RCJqu
     (g$make-eq-hashtable$5805$RCJqu))
   (g$scheme-stx$7805$RCJqu
     g$scheme-stx$11255$RCJqu
     (case-lambda
       ((g$sym$8211$RCJqu)
        ((case-lambda
           ((g$t$8212$RCJqu)
            (if g$t$8212$RCJqu
              g$t$8212$RCJqu
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8213$RCJqu)
                    ((case-lambda
                       ((g$stx$8214$RCJqu)
                        ((case-lambda
                           ((g$stx$8215$RCJqu)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5809$RCJqu
                                    g$scheme-stx-hashtable$7804$RCJqu
                                    g$sym$8211$RCJqu
                                    g$stx$8215$RCJqu)
                                  g$stx$8215$RCJqu))))))
                         ((case-lambda
                            ((g$t$8216$RCJqu)
                             (if g$t$8216$RCJqu
                               ((case-lambda
                                  ((g$x$8217$RCJqu)
                                   ((case-lambda
                                      ((g$name$8218$RCJqu g$label$8219$RCJqu)
                                       (g$add-subst$7574$RCJqu
                                         (g$make-rib$7538$RCJqu
                                           (list g$name$8218$RCJqu)
                                           (list g$top-mark*$7526$RCJqu)
                                           (list g$label$8219$RCJqu)
                                           '#f)
                                         g$stx$8214$RCJqu)))
                                    (car g$x$8217$RCJqu)
                                    (cdr g$x$8217$RCJqu))))
                                g$t$8216$RCJqu)
                               g$stx$8214$RCJqu)))
                          (assq g$sym$8211$RCJqu g$subst$8213$RCJqu)))))
                     (g$make-stx$7557$RCJqu
                       g$sym$8211$RCJqu
                       g$top-mark*$7526$RCJqu
                       '()
                       '()))))
                 (g$library-subst$7356$RCJqu
                   (g$find-library-by-name$7392$RCJqu
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5808$RCJqu
           g$scheme-stx-hashtable$7804$RCJqu
           g$sym$8211$RCJqu
           '#f)))))
   (g$lexical-var$7806$RCJqu g$lexical-var$11256$RCJqu car)
   (g$lexical-mutable?$7807$RCJqu g$lexical-mutable?$11257$RCJqu cdr)
   (g$set-lexical-mutable!$7808$RCJqu
     g$set-lexical-mutable!$11258$RCJqu
     set-cdr!)
   (g$add-lexical$7809$RCJqu
     g$add-lexical$11259$RCJqu
     (case-lambda
       ((g$lab$8220$RCJqu g$lex$8221$RCJqu g$r$8222$RCJqu)
        (cons
          (g$cons*$6014$RCJqu g$lab$8220$RCJqu 'lexical g$lex$8221$RCJqu '#f)
          g$r$8222$RCJqu))))
   (g$add-lexicals$7810$RCJqu
     g$add-lexicals$11260$RCJqu
     (case-lambda
       ((g$lab*$8223$RCJqu g$lex*$8224$RCJqu g$r$8225$RCJqu)
        (if (null? g$lab*$8223$RCJqu)
          g$r$8225$RCJqu
          (g$add-lexicals$7810$RCJqu
            (cdr g$lab*$8223$RCJqu)
            (cdr g$lex*$8224$RCJqu)
            (g$add-lexical$7809$RCJqu
              (car g$lab*$8223$RCJqu)
              (car g$lex*$8224$RCJqu)
              g$r$8225$RCJqu))))))
   (g$letrec-helper$7811$RCJqu
     g$letrec-helper$11261$RCJqu
     (case-lambda
       ((g$e$8226$RCJqu g$r$8227$RCJqu g$mr$8228$RCJqu g$build$8229$RCJqu)
        ((case-lambda
           ((g$t$8230$RCJqu)
            ((case-lambda
               ((g$ls/false$8231$RCJqu)
                (if g$ls/false$8231$RCJqu
                  (apply
                    (case-lambda
                      ((g$lhs*$8232$RCJqu
                         g$rhs*$8233$RCJqu
                         g$b$8234$RCJqu
                         g$b*$8235$RCJqu)
                       (if (not (g$valid-bound-ids?$7589$RCJqu
                                  g$lhs*$8232$RCJqu))
                         (g$invalid-fmls-error$7827$RCJqu
                           g$e$8226$RCJqu
                           g$lhs*$8232$RCJqu)
                         ((case-lambda
                            ((g$lex*$8236$RCJqu g$lab*$8237$RCJqu)
                             ((case-lambda
                                ((g$rib$8238$RCJqu g$r$8239$RCJqu)
                                 ((case-lambda
                                    ((g$body$8240$RCJqu g$rhs*$8241$RCJqu)
                                     (g$build$8229$RCJqu
                                       '#f
                                       g$lex*$8236$RCJqu
                                       g$rhs*$8241$RCJqu
                                       g$body$8240$RCJqu)))
                                  (g$chi-internal$7891$RCJqu
                                    (g$add-subst$7574$RCJqu
                                      g$rib$8238$RCJqu
                                      (cons g$b$8234$RCJqu g$b*$8235$RCJqu))
                                    g$r$8239$RCJqu
                                    g$mr$8228$RCJqu)
                                  (g$chi-expr*$7878$RCJqu
                                    (map (case-lambda
                                           ((g$x$8242$RCJqu)
                                            (g$add-subst$7574$RCJqu
                                              g$rib$8238$RCJqu
                                              g$x$8242$RCJqu)))
                                         g$rhs*$8233$RCJqu)
                                    g$r$8239$RCJqu
                                    g$mr$8228$RCJqu))))
                              (g$make-full-rib$7552$RCJqu
                                g$lhs*$8232$RCJqu
                                g$lab*$8237$RCJqu)
                              (g$add-lexicals$7810$RCJqu
                                g$lab*$8237$RCJqu
                                g$lex*$8236$RCJqu
                                g$r$8227$RCJqu))))
                          (map g$gen-lexical$7528$RCJqu g$lhs*$8232$RCJqu)
                          (map g$gen-label$7530$RCJqu g$lhs*$8232$RCJqu)))))
                    g$ls/false$8231$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8230$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8230$RCJqu
               '(_ #(each (any any)) any . each-any)))))
         g$e$8226$RCJqu))))
   (g$letrec-transformer$7812$RCJqu
     g$letrec-transformer$11262$RCJqu
     (case-lambda
       ((g$e$8243$RCJqu g$r$8244$RCJqu g$mr$8245$RCJqu)
        (g$letrec-helper$7811$RCJqu
          g$e$8243$RCJqu
          g$r$8244$RCJqu
          g$mr$8245$RCJqu
          g$build-letrec$7520$RCJqu))))
   (g$letrec*-transformer$7813$RCJqu
     g$letrec*-transformer$11263$RCJqu
     (case-lambda
       ((g$e$8246$RCJqu g$r$8247$RCJqu g$mr$8248$RCJqu)
        (g$letrec-helper$7811$RCJqu
          g$e$8246$RCJqu
          g$r$8247$RCJqu
          g$mr$8248$RCJqu
          g$build-letrec*$7521$RCJqu))))
   (g$fluid-let-syntax-transformer$7814$RCJqu
     g$fluid-let-syntax-transformer$11264$RCJqu
     (case-lambda
       ((g$e$8249$RCJqu g$r$8250$RCJqu g$mr$8251$RCJqu)
        (letrec* ((g$lookup$8252$RCJqu
                    (case-lambda
                      ((g$x$8262$RCJqu)
                       ((case-lambda
                          ((g$t$8263$RCJqu)
                           (if g$t$8263$RCJqu
                             g$t$8263$RCJqu
                             (begin
                               '#f
                               (g$syntax-violation$7968$RCJqu
                                 '#f
                                 '"unbound identifier"
                                 g$e$8249$RCJqu
                                 g$x$8262$RCJqu)))))
                        (g$id->label$7597$RCJqu g$x$8262$RCJqu))))))
          ((case-lambda
             ((g$t$8253$RCJqu)
              ((case-lambda
                 ((g$ls/false$8254$RCJqu)
                  (if g$ls/false$8254$RCJqu
                    (apply
                      (case-lambda
                        ((g$lhs*$8255$RCJqu
                           g$rhs*$8256$RCJqu
                           g$b$8257$RCJqu
                           g$b*$8258$RCJqu)
                         (if (not (g$valid-bound-ids?$7589$RCJqu
                                    g$lhs*$8255$RCJqu))
                           (g$invalid-fmls-error$7827$RCJqu
                             g$e$8249$RCJqu
                             g$lhs*$8255$RCJqu)
                           ((case-lambda
                              ((g$lab*$8259$RCJqu g$rhs*$8260$RCJqu)
                               (g$chi-internal$7891$RCJqu
                                 (cons g$b$8257$RCJqu g$b*$8258$RCJqu)
                                 (append
                                   (map cons
                                        g$lab*$8259$RCJqu
                                        g$rhs*$8260$RCJqu)
                                   g$r$8250$RCJqu)
                                 (append
                                   (map cons
                                        g$lab*$8259$RCJqu
                                        g$rhs*$8260$RCJqu)
                                   g$mr$8251$RCJqu))))
                            (map g$lookup$8252$RCJqu g$lhs*$8255$RCJqu)
                            (map (case-lambda
                                   ((g$x$8261$RCJqu)
                                    (g$make-eval-transformer$7616$RCJqu
                                      (g$expand-transformer$7907$RCJqu
                                        g$x$8261$RCJqu
                                        g$mr$8251$RCJqu))))
                                 g$rhs*$8256$RCJqu)))))
                      g$ls/false$8254$RCJqu)
                    (g$syntax-violation$7968$RCJqu
                      '#f
                      '"invalid syntax"
                      g$t$8253$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$8253$RCJqu
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8249$RCJqu)))))
   (g$type-descriptor-transformer$7815$RCJqu
     g$type-descriptor-transformer$11265$RCJqu
     (case-lambda
       ((g$e$8264$RCJqu g$r$8265$RCJqu g$mr$8266$RCJqu)
        ((case-lambda
           ((g$t$8267$RCJqu)
            ((case-lambda
               ((g$ls/false$8268$RCJqu)
                (if (if g$ls/false$8268$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8269$RCJqu)
                             (g$id?$7584$RCJqu g$id$8269$RCJqu)))
                          g$ls/false$8268$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8270$RCJqu)
                       ((case-lambda
                          ((g$lab$8271$RCJqu)
                           ((case-lambda
                              ((g$b$8272$RCJqu)
                               ((case-lambda
                                  ((g$type$8273$RCJqu)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8271$RCJqu
                                           (void)
                                           (g$raise-unbound-error$7603$RCJqu
                                             g$id$8270$RCJqu))
                                         (if (if (eq? g$type$8273$RCJqu '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$7602$RCJqu
                                                          g$b$8272$RCJqu))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"not a record type"
                                             g$e$8264$RCJqu))
                                         (list
                                           'quote
                                           (g$binding-value$7602$RCJqu
                                             g$b$8272$RCJqu))))))))
                                (g$binding-type$7601$RCJqu g$b$8272$RCJqu))))
                            (g$label->binding$7599$RCJqu
                              g$lab$8271$RCJqu
                              g$r$8265$RCJqu))))
                        (g$id->label$7597$RCJqu g$id$8270$RCJqu))))
                    g$ls/false$8268$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8267$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8267$RCJqu '(_ any)))))
         g$e$8264$RCJqu))))
   (g$record-type-descriptor-transformer$7816$RCJqu
     g$record-type-descriptor-transformer$11266$RCJqu
     (case-lambda
       ((g$e$8274$RCJqu g$r$8275$RCJqu g$mr$8276$RCJqu)
        ((case-lambda
           ((g$t$8277$RCJqu)
            ((case-lambda
               ((g$ls/false$8278$RCJqu)
                (if (if g$ls/false$8278$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8279$RCJqu)
                             (g$id?$7584$RCJqu g$id$8279$RCJqu)))
                          g$ls/false$8278$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8280$RCJqu)
                       ((case-lambda
                          ((g$lab$8281$RCJqu)
                           ((case-lambda
                              ((g$b$8282$RCJqu)
                               ((case-lambda
                                  ((g$type$8283$RCJqu)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8281$RCJqu
                                           (void)
                                           (g$raise-unbound-error$7603$RCJqu
                                             g$id$8280$RCJqu))
                                         (if (if (eq? g$type$8283$RCJqu '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7602$RCJqu
                                                     g$b$8282$RCJqu)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"not a record type"
                                             g$e$8274$RCJqu))
                                         (g$chi-expr$7880$RCJqu
                                           (car (g$binding-value$7602$RCJqu
                                                  g$b$8282$RCJqu))
                                           g$r$8275$RCJqu
                                           g$mr$8276$RCJqu)))))))
                                (g$binding-type$7601$RCJqu g$b$8282$RCJqu))))
                            (g$label->binding$7599$RCJqu
                              g$lab$8281$RCJqu
                              g$r$8275$RCJqu))))
                        (g$id->label$7597$RCJqu g$id$8280$RCJqu))))
                    g$ls/false$8278$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8277$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8277$RCJqu '(_ any)))))
         g$e$8274$RCJqu))))
   (g$record-constructor-descriptor-transformer$7817$RCJqu
     g$record-constructor-descriptor-transformer$11267$RCJqu
     (case-lambda
       ((g$e$8284$RCJqu g$r$8285$RCJqu g$mr$8286$RCJqu)
        ((case-lambda
           ((g$t$8287$RCJqu)
            ((case-lambda
               ((g$ls/false$8288$RCJqu)
                (if (if g$ls/false$8288$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8289$RCJqu)
                             (g$id?$7584$RCJqu g$id$8289$RCJqu)))
                          g$ls/false$8288$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8290$RCJqu)
                       ((case-lambda
                          ((g$lab$8291$RCJqu)
                           ((case-lambda
                              ((g$b$8292$RCJqu)
                               ((case-lambda
                                  ((g$type$8293$RCJqu)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8291$RCJqu
                                           (void)
                                           (g$raise-unbound-error$7603$RCJqu
                                             g$id$8290$RCJqu))
                                         (if (if (eq? g$type$8293$RCJqu '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7602$RCJqu
                                                     g$b$8292$RCJqu)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid type"
                                             g$e$8284$RCJqu))
                                         (g$chi-expr$7880$RCJqu
                                           (g$cadr$5543$RCJqu
                                             (g$binding-value$7602$RCJqu
                                               g$b$8292$RCJqu))
                                           g$r$8285$RCJqu
                                           g$mr$8286$RCJqu)))))))
                                (g$binding-type$7601$RCJqu g$b$8292$RCJqu))))
                            (g$label->binding$7599$RCJqu
                              g$lab$8291$RCJqu
                              g$r$8285$RCJqu))))
                        (g$id->label$7597$RCJqu g$id$8290$RCJqu))))
                    g$ls/false$8288$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8287$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8287$RCJqu '(_ any)))))
         g$e$8284$RCJqu))))
   (g$when-transformer$7818$RCJqu
     g$when-transformer$11268$RCJqu
     (case-lambda
       ((g$e$8294$RCJqu g$r$8295$RCJqu g$mr$8296$RCJqu)
        ((case-lambda
           ((g$t$8297$RCJqu)
            ((case-lambda
               ((g$ls/false$8298$RCJqu)
                (if g$ls/false$8298$RCJqu
                  (apply
                    (case-lambda
                      ((g$test$8299$RCJqu g$e$8300$RCJqu g$e*$8301$RCJqu)
                       (list
                         'if
                         (g$chi-expr$7880$RCJqu
                           g$test$8299$RCJqu
                           g$r$8295$RCJqu
                           g$mr$8296$RCJqu)
                         (g$build-sequence$7518$RCJqu
                           '#f
                           (g$chi-expr*$7878$RCJqu
                             (cons g$e$8300$RCJqu g$e*$8301$RCJqu)
                             g$r$8295$RCJqu
                             g$mr$8296$RCJqu))
                         (g$build-void$7519$RCJqu))))
                    g$ls/false$8298$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8297$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8297$RCJqu
               '(_ any any . each-any)))))
         g$e$8294$RCJqu))))
   (g$unless-transformer$7819$RCJqu
     g$unless-transformer$11269$RCJqu
     (case-lambda
       ((g$e$8302$RCJqu g$r$8303$RCJqu g$mr$8304$RCJqu)
        ((case-lambda
           ((g$t$8305$RCJqu)
            ((case-lambda
               ((g$ls/false$8306$RCJqu)
                (if g$ls/false$8306$RCJqu
                  (apply
                    (case-lambda
                      ((g$test$8307$RCJqu g$e$8308$RCJqu g$e*$8309$RCJqu)
                       (list
                         'if
                         (g$chi-expr$7880$RCJqu
                           g$test$8307$RCJqu
                           g$r$8303$RCJqu
                           g$mr$8304$RCJqu)
                         (g$build-void$7519$RCJqu)
                         (g$build-sequence$7518$RCJqu
                           '#f
                           (g$chi-expr*$7878$RCJqu
                             (cons g$e$8308$RCJqu g$e*$8309$RCJqu)
                             g$r$8303$RCJqu
                             g$mr$8304$RCJqu)))))
                    g$ls/false$8306$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8305$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8305$RCJqu
               '(_ any any . each-any)))))
         g$e$8302$RCJqu))))
   (g$if-transformer$7820$RCJqu
     g$if-transformer$11270$RCJqu
     (case-lambda
       ((g$e$8310$RCJqu g$r$8311$RCJqu g$mr$8312$RCJqu)
        ((case-lambda
           ((g$t$8313$RCJqu)
            ((case-lambda
               ((g$ls/false$8314$RCJqu)
                (if g$ls/false$8314$RCJqu
                  (apply
                    (case-lambda
                      ((g$e0$8315$RCJqu g$e1$8316$RCJqu g$e2$8317$RCJqu)
                       (list
                         'if
                         (g$chi-expr$7880$RCJqu
                           g$e0$8315$RCJqu
                           g$r$8311$RCJqu
                           g$mr$8312$RCJqu)
                         (g$chi-expr$7880$RCJqu
                           g$e1$8316$RCJqu
                           g$r$8311$RCJqu
                           g$mr$8312$RCJqu)
                         (g$chi-expr$7880$RCJqu
                           g$e2$8317$RCJqu
                           g$r$8311$RCJqu
                           g$mr$8312$RCJqu))))
                    g$ls/false$8314$RCJqu)
                  ((case-lambda
                     ((g$t$8318$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8319$RCJqu)
                          (if g$ls/false$8319$RCJqu
                            (apply
                              (case-lambda
                                ((g$e0$8320$RCJqu g$e1$8321$RCJqu)
                                 (list
                                   'if
                                   (g$chi-expr$7880$RCJqu
                                     g$e0$8320$RCJqu
                                     g$r$8311$RCJqu
                                     g$mr$8312$RCJqu)
                                   (g$chi-expr$7880$RCJqu
                                     g$e1$8321$RCJqu
                                     g$r$8311$RCJqu
                                     g$mr$8312$RCJqu)
                                   (g$build-void$7519$RCJqu))))
                              g$ls/false$8319$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8318$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8318$RCJqu
                         '(_ any any)))))
                   g$t$8313$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8313$RCJqu '(_ any any any)))))
         g$e$8310$RCJqu))))
   (g$case-transformer$7821$RCJqu
     g$case-transformer$11271$RCJqu
     (case-lambda
       ((g$e$8322$RCJqu g$r$8323$RCJqu g$mr$8324$RCJqu)
        (letrec* ((g$build-one$8325$RCJqu
                    (case-lambda
                      ((g$t$8354$RCJqu g$cls$8355$RCJqu g$rest$8356$RCJqu)
                       ((case-lambda
                          ((g$t$8357$RCJqu)
                           ((case-lambda
                              ((g$ls/false$8358$RCJqu)
                               (if g$ls/false$8358$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$d*$8359$RCJqu
                                        g$e$8360$RCJqu
                                        g$e*$8361$RCJqu)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$8362$RCJqu)
                                            (if (= '1
                                                   (length g$data$8362$RCJqu))
                                              (list
                                                '(primitive eqv?)
                                                g$t$8354$RCJqu
                                                (list
                                                  'quote
                                                  (car g$data$8362$RCJqu)))
                                              (list
                                                '(primitive memv)
                                                g$t$8354$RCJqu
                                                (list
                                                  'quote
                                                  g$data$8362$RCJqu)))))
                                         (g$stx->datum$7595$RCJqu
                                           g$d*$8359$RCJqu))
                                        (g$build-sequence$7518$RCJqu
                                          '#f
                                          (g$chi-expr*$7878$RCJqu
                                            (cons
                                              g$e$8360$RCJqu
                                              g$e*$8361$RCJqu)
                                            g$r$8323$RCJqu
                                            g$mr$8324$RCJqu))
                                        g$rest$8356$RCJqu)))
                                   g$ls/false$8358$RCJqu)
                                 ((case-lambda
                                    ((g$t$8363$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$8364$RCJqu)
                                         (if g$ls/false$8364$RCJqu
                                           (apply
                                             (case-lambda
                                               ((g$else$8365$RCJqu)
                                                (g$syntax-violation$7968$RCJqu
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$8322$RCJqu)))
                                             g$ls/false$8364$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$8363$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$8363$RCJqu
                                        'any))))
                                  g$t$8357$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$8357$RCJqu
                              '(each-any any . each-any)))))
                        g$cls$8355$RCJqu))))
                  (g$build-last$8326$RCJqu
                    (case-lambda
                      ((g$t$8339$RCJqu g$cls$8340$RCJqu)
                       ((case-lambda
                          ((g$t$8341$RCJqu)
                           ((case-lambda
                              ((g$ls/false$8342$RCJqu)
                               (if g$ls/false$8342$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$d*$8343$RCJqu
                                        g$e$8344$RCJqu
                                        g$e*$8345$RCJqu)
                                      (g$build-one$8325$RCJqu
                                        g$t$8339$RCJqu
                                        g$cls$8340$RCJqu
                                        (g$build-void$7519$RCJqu))))
                                   g$ls/false$8342$RCJqu)
                                 ((case-lambda
                                    ((g$t$8346$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$8347$RCJqu)
                                         (if g$ls/false$8347$RCJqu
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$8348$RCJqu
                                                  g$x$8349$RCJqu
                                                  g$x*$8350$RCJqu)
                                                (if (if (g$id?$7584$RCJqu
                                                          g$else-kwd$8348$RCJqu)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$7588$RCJqu
                                                          g$else-kwd$8348$RCJqu
                                                          (g$scheme-stx$7805$RCJqu
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$7518$RCJqu
                                                    '#f
                                                    (g$chi-expr*$7878$RCJqu
                                                      (cons
                                                        g$x$8349$RCJqu
                                                        g$x*$8350$RCJqu)
                                                      g$r$8323$RCJqu
                                                      g$mr$8324$RCJqu))
                                                  (g$syntax-violation$7968$RCJqu
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$8322$RCJqu))))
                                             g$ls/false$8347$RCJqu)
                                           ((case-lambda
                                              ((g$t$8351$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$8352$RCJqu)
                                                   (if g$ls/false$8352$RCJqu
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$8353$RCJqu)
                                                          (g$syntax-violation$7968$RCJqu
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$8322$RCJqu)))
                                                       g$ls/false$8352$RCJqu)
                                                     (g$syntax-violation$7968$RCJqu
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8351$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$8351$RCJqu
                                                  'any))))
                                            g$t$8346$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$8346$RCJqu
                                        '(any any . each-any)))))
                                  g$t$8341$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$8341$RCJqu
                              '(each-any any . each-any)))))
                        g$cls$8340$RCJqu)))))
          ((case-lambda
             ((g$t$8327$RCJqu)
              ((case-lambda
                 ((g$ls/false$8328$RCJqu)
                  (if g$ls/false$8328$RCJqu
                    (apply
                      (case-lambda
                        ((g$expr$8329$RCJqu)
                         (g$build-sequence$7518$RCJqu
                           '#f
                           (list
                             (g$chi-expr$7880$RCJqu
                               g$expr$8329$RCJqu
                               g$r$8323$RCJqu
                               g$mr$8324$RCJqu)
                             (g$build-void$7519$RCJqu)))))
                      g$ls/false$8328$RCJqu)
                    ((case-lambda
                       ((g$t$8330$RCJqu)
                        ((case-lambda
                           ((g$ls/false$8331$RCJqu)
                            (if g$ls/false$8331$RCJqu
                              (apply
                                (case-lambda
                                  ((g$expr$8332$RCJqu
                                     g$cls$8333$RCJqu
                                     g$cls*$8334$RCJqu)
                                   ((case-lambda
                                      ((g$t$8335$RCJqu)
                                       (g$build-let$7517$RCJqu
                                         '#f
                                         (list g$t$8335$RCJqu)
                                         (list
                                           (g$chi-expr$7880$RCJqu
                                             g$expr$8332$RCJqu
                                             g$r$8323$RCJqu
                                             g$mr$8324$RCJqu))
                                         ((letrec ((g$f$8336$RCJqu
                                                     (case-lambda
                                                       ((g$cls$8337$RCJqu
                                                          g$cls*$8338$RCJqu)
                                                        (if (null?
                                                              g$cls*$8338$RCJqu)
                                                          (g$build-last$8326$RCJqu
                                                            g$t$8335$RCJqu
                                                            g$cls$8337$RCJqu)
                                                          (g$build-one$8325$RCJqu
                                                            g$t$8335$RCJqu
                                                            g$cls$8337$RCJqu
                                                            (g$f$8336$RCJqu
                                                              (car g$cls*$8338$RCJqu)
                                                              (cdr g$cls*$8338$RCJqu))))))))
                                            g$f$8336$RCJqu)
                                          g$cls$8333$RCJqu
                                          g$cls*$8334$RCJqu))))
                                    (g$gen-lexical$7528$RCJqu 't))))
                                g$ls/false$8331$RCJqu)
                              (g$syntax-violation$7968$RCJqu
                                '#f
                                '"invalid syntax"
                                g$t$8330$RCJqu))))
                         (g$syntax-dispatch$7862$RCJqu
                           g$t$8330$RCJqu
                           '(_ any any . each-any)))))
                     g$t$8327$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu g$t$8327$RCJqu '(_ any)))))
           g$e$8322$RCJqu)))))
   (g$quote-transformer$7822$RCJqu
     g$quote-transformer$11272$RCJqu
     (case-lambda
       ((g$e$8366$RCJqu g$r$8367$RCJqu g$mr$8368$RCJqu)
        ((case-lambda
           ((g$t$8369$RCJqu)
            ((case-lambda
               ((g$ls/false$8370$RCJqu)
                (if g$ls/false$8370$RCJqu
                  (apply
                    (case-lambda
                      ((g$datum$8371$RCJqu)
                       (list
                         'quote
                         (g$stx->datum$7595$RCJqu g$datum$8371$RCJqu))))
                    g$ls/false$8370$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8369$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8369$RCJqu '(_ any)))))
         g$e$8366$RCJqu))))
   (g$case-lambda-transformer$7823$RCJqu
     g$case-lambda-transformer$11273$RCJqu
     (case-lambda
       ((g$e$8372$RCJqu g$r$8373$RCJqu g$mr$8374$RCJqu)
        ((case-lambda
           ((g$t$8375$RCJqu)
            ((case-lambda
               ((g$ls/false$8376$RCJqu)
                (if g$ls/false$8376$RCJqu
                  (apply
                    (case-lambda
                      ((g$fmls*$8377$RCJqu g$b*$8378$RCJqu g$b**$8379$RCJqu)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7884$RCJqu
                              g$e$8372$RCJqu
                              g$fmls*$8377$RCJqu
                              (map cons g$b*$8378$RCJqu g$b**$8379$RCJqu)
                              g$r$8373$RCJqu
                              g$mr$8374$RCJqu)))
                         (case-lambda
                           ((g$fmls*$8382$RCJqu g$body*$8383$RCJqu)
                            ((case-lambda
                               ((g$body*$8384$RCJqu g$fmls*$8385$RCJqu)
                                (g$build-case-lambda$7516$RCJqu
                                  '#f
                                  g$fmls*$8385$RCJqu
                                  g$body*$8384$RCJqu)))
                             g$body*$8383$RCJqu
                             g$fmls*$8382$RCJqu))))))
                    g$ls/false$8376$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8375$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8375$RCJqu
               '(_ . #(each (any any . each-any)))))))
         g$e$8372$RCJqu))))
   (g$lambda-transformer$7824$RCJqu
     g$lambda-transformer$11274$RCJqu
     (case-lambda
       ((g$e$8386$RCJqu g$r$8387$RCJqu g$mr$8388$RCJqu)
        ((case-lambda
           ((g$t$8389$RCJqu)
            ((case-lambda
               ((g$ls/false$8390$RCJqu)
                (if g$ls/false$8390$RCJqu
                  (apply
                    (case-lambda
                      ((g$fmls$8391$RCJqu g$b$8392$RCJqu g$b*$8393$RCJqu)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7883$RCJqu
                              g$e$8386$RCJqu
                              g$fmls$8391$RCJqu
                              (cons g$b$8392$RCJqu g$b*$8393$RCJqu)
                              g$r$8387$RCJqu
                              g$mr$8388$RCJqu)))
                         (case-lambda
                           ((g$fmls$8396$RCJqu g$body$8397$RCJqu)
                            ((case-lambda
                               ((g$body$8398$RCJqu g$fmls$8399$RCJqu)
                                (g$build-lambda$7515$RCJqu
                                  '#f
                                  g$fmls$8399$RCJqu
                                  g$body$8398$RCJqu)))
                             g$body$8397$RCJqu
                             g$fmls$8396$RCJqu))))))
                    g$ls/false$8390$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8389$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8389$RCJqu
               '(_ any any . each-any)))))
         g$e$8386$RCJqu))))
   (g$bless$7825$RCJqu
     g$bless$11275$RCJqu
     (case-lambda
       ((g$x$8400$RCJqu)
        (g$mkstx$7572$RCJqu
          ((letrec ((g$f$8401$RCJqu
                      (case-lambda
                        ((g$x$8402$RCJqu)
                         (if (g$stx?$7556$RCJqu g$x$8402$RCJqu)
                           g$x$8402$RCJqu
                           (if (pair? g$x$8402$RCJqu)
                             (cons
                               (g$f$8401$RCJqu (car g$x$8402$RCJqu))
                               (g$f$8401$RCJqu (cdr g$x$8402$RCJqu)))
                             (if (symbol? g$x$8402$RCJqu)
                               (g$scheme-stx$7805$RCJqu g$x$8402$RCJqu)
                               (if (vector? g$x$8402$RCJqu)
                                 (vector-map g$f$8401$RCJqu g$x$8402$RCJqu)
                                 g$x$8402$RCJqu))))))))
             g$f$8401$RCJqu)
           g$x$8400$RCJqu)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7826$RCJqu
     g$with-syntax-macro$11276$RCJqu
     (case-lambda
       ((g$e$8403$RCJqu)
        ((case-lambda
           ((g$t$8404$RCJqu)
            ((case-lambda
               ((g$ls/false$8405$RCJqu)
                (if g$ls/false$8405$RCJqu
                  (apply
                    (case-lambda
                      ((g$pat*$8406$RCJqu
                         g$expr*$8407$RCJqu
                         g$b$8408$RCJqu
                         g$b*$8409$RCJqu)
                       ((case-lambda
                          ((g$idn*$8410$RCJqu)
                           (begin
                             (g$verify-formals$7882$RCJqu
                               (map car g$idn*$8410$RCJqu)
                               g$e$8403$RCJqu)
                             ((case-lambda
                                ((g$t*$8411$RCJqu)
                                 (g$bless$7825$RCJqu
                                   (list
                                     'let
                                     (map list
                                          g$t*$8411$RCJqu
                                          g$expr*$8407$RCJqu)
                                     ((letrec ((g$f$8412$RCJqu
                                                 (case-lambda
                                                   ((g$pat*$8413$RCJqu
                                                      g$t*$8414$RCJqu)
                                                    (if (null?
                                                          g$pat*$8413$RCJqu)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8408$RCJqu
                                                            g$b*$8409$RCJqu)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8414$RCJqu)
                                                        '()
                                                        (list
                                                          (car g$pat*$8413$RCJqu)
                                                          (g$f$8412$RCJqu
                                                            (cdr g$pat*$8413$RCJqu)
                                                            (cdr g$t*$8414$RCJqu)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8413$RCJqu))
                                                            (car g$t*$8414$RCJqu)))))))))
                                        g$f$8412$RCJqu)
                                      g$pat*$8406$RCJqu
                                      g$t*$8411$RCJqu)))))
                              (g$generate-temporaries$7961$RCJqu
                                g$expr*$8407$RCJqu)))))
                        ((letrec ((g$f$8415$RCJqu
                                    (case-lambda
                                      ((g$pat*$8416$RCJqu)
                                       (if (null? g$pat*$8416$RCJqu)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7861$RCJqu
                                                (car g$pat*$8416$RCJqu)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8419$RCJqu
                                                g$idn*$8420$RCJqu)
                                              ((case-lambda
                                                 ((g$idn*$8421$RCJqu
                                                    g$pat$8422$RCJqu)
                                                  (append
                                                    g$idn*$8421$RCJqu
                                                    (g$f$8415$RCJqu
                                                      (cdr g$pat*$8416$RCJqu)))))
                                               g$idn*$8420$RCJqu
                                               g$pat$8419$RCJqu)))))))))
                           g$f$8415$RCJqu)
                         g$pat*$8406$RCJqu))))
                    g$ls/false$8405$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8404$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8404$RCJqu
               '(_ #(each (any any)) any . each-any)))))
         g$e$8403$RCJqu))))
   (g$invalid-fmls-error$7827$RCJqu
     g$invalid-fmls-error$11277$RCJqu
     (case-lambda
       ((g$stx$8423$RCJqu g$fmls$8424$RCJqu)
        ((case-lambda
           ((g$t$8425$RCJqu)
            ((case-lambda
               ((g$ls/false$8426$RCJqu)
                (if g$ls/false$8426$RCJqu
                  (apply
                    (case-lambda
                      ((g$id*$8427$RCJqu g$last$8428$RCJqu)
                       ((letrec ((g$f$8429$RCJqu
                                   (case-lambda
                                     ((g$id*$8430$RCJqu)
                                      (if (null? g$id*$8430$RCJqu)
                                        (values)
                                        (if (not (g$id?$7584$RCJqu
                                                   (car g$id*$8430$RCJqu)))
                                          (g$syntax-violation$7968$RCJqu
                                            '#f
                                            '"not an identifier"
                                            g$stx$8423$RCJqu
                                            (car g$id*$8430$RCJqu))
                                          (begin
                                            (g$f$8429$RCJqu
                                              (cdr g$id*$8430$RCJqu))
                                            (if (g$bound-id-member?$7591$RCJqu
                                                  (car g$id*$8430$RCJqu)
                                                  (cdr g$id*$8430$RCJqu))
                                              (g$syntax-violation$7968$RCJqu
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8423$RCJqu
                                                (car g$id*$8430$RCJqu))
                                              (void)))))))))
                          g$f$8429$RCJqu)
                        (if (g$id?$7584$RCJqu g$last$8428$RCJqu)
                          (cons g$last$8428$RCJqu g$id*$8427$RCJqu)
                          (if (g$syntax-null?$7579$RCJqu g$last$8428$RCJqu)
                            g$id*$8427$RCJqu
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"not an identifier"
                              g$stx$8423$RCJqu
                              g$last$8428$RCJqu))))))
                    g$ls/false$8426$RCJqu)
                  ((case-lambda
                     ((g$t$8431$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8432$RCJqu)
                          (if g$ls/false$8432$RCJqu
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7968$RCJqu
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8423$RCJqu
                                   g$fmls$8424$RCJqu)))
                              g$ls/false$8432$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8431$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu g$t$8431$RCJqu '_))))
                   g$t$8425$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8425$RCJqu
               '#(each+ any () any)))))
         g$fmls$8424$RCJqu))))
   (g$let-macro$7828$RCJqu
     g$let-macro$11278$RCJqu
     (case-lambda
       ((g$stx$8433$RCJqu)
        ((case-lambda
           ((g$t$8434$RCJqu)
            ((case-lambda
               ((g$ls/false$8435$RCJqu)
                (if g$ls/false$8435$RCJqu
                  (apply
                    (case-lambda
                      ((g$lhs*$8436$RCJqu
                         g$rhs*$8437$RCJqu
                         g$b$8438$RCJqu
                         g$b*$8439$RCJqu)
                       (if (g$valid-bound-ids?$7589$RCJqu g$lhs*$8436$RCJqu)
                         (g$bless$7825$RCJqu
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8436$RCJqu
                                 (cons g$b$8438$RCJqu g$b*$8439$RCJqu)))
                             g$rhs*$8437$RCJqu))
                         (g$invalid-fmls-error$7827$RCJqu
                           g$stx$8433$RCJqu
                           g$lhs*$8436$RCJqu))))
                    g$ls/false$8435$RCJqu)
                  ((case-lambda
                     ((g$t$8440$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8441$RCJqu)
                          (if (if g$ls/false$8441$RCJqu
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8442$RCJqu
                                         g$lhs*$8443$RCJqu
                                         g$rhs*$8444$RCJqu
                                         g$b$8445$RCJqu
                                         g$b*$8446$RCJqu)
                                       (g$id?$7584$RCJqu g$f$8442$RCJqu)))
                                    g$ls/false$8441$RCJqu))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8447$RCJqu
                                   g$lhs*$8448$RCJqu
                                   g$rhs*$8449$RCJqu
                                   g$b$8450$RCJqu
                                   g$b*$8451$RCJqu)
                                 (if (g$valid-bound-ids?$7589$RCJqu
                                       g$lhs*$8448$RCJqu)
                                   (g$bless$7825$RCJqu
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8447$RCJqu
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8448$RCJqu
                                                 (cons
                                                   g$b$8450$RCJqu
                                                   g$b*$8451$RCJqu)))))
                                         g$f$8447$RCJqu)
                                       g$rhs*$8449$RCJqu))
                                   (g$invalid-fmls-error$7827$RCJqu
                                     g$stx$8433$RCJqu
                                     g$lhs*$8448$RCJqu))))
                              g$ls/false$8441$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8440$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8440$RCJqu
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8434$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8434$RCJqu
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8433$RCJqu))))
   (g$let-values-macro$7829$RCJqu
     g$let-values-macro$11279$RCJqu
     (case-lambda
       ((g$stx$8452$RCJqu)
        (letrec* ((g$rename$8453$RCJqu
                    (case-lambda
                      ((g$x$8504$RCJqu g$old*$8505$RCJqu g$new*$8506$RCJqu)
                       (begin
                         (if (g$id?$7584$RCJqu g$x$8504$RCJqu)
                           (void)
                           (g$syntax-violation$7968$RCJqu
                             '#f
                             '"not an indentifier"
                             g$stx$8452$RCJqu
                             g$x$8504$RCJqu))
                         (if (g$bound-id-member?$7591$RCJqu
                               g$x$8504$RCJqu
                               g$old*$8505$RCJqu)
                           (g$syntax-violation$7968$RCJqu
                             '#f
                             '"duplicate binding"
                             g$stx$8452$RCJqu
                             g$x$8504$RCJqu)
                           (void))
                         ((case-lambda
                            ((g$y$8507$RCJqu)
                             (values
                               g$y$8507$RCJqu
                               (cons g$x$8504$RCJqu g$old*$8505$RCJqu)
                               (cons g$y$8507$RCJqu g$new*$8506$RCJqu))))
                          (gensym
                            (g$syntax->datum$7971$RCJqu g$x$8504$RCJqu)))))))
                  (g$rename*$8454$RCJqu
                    (case-lambda
                      ((g$x*$8495$RCJqu g$old*$8496$RCJqu g$new*$8497$RCJqu)
                       (if (null? g$x*$8495$RCJqu)
                         (values '() g$old*$8496$RCJqu g$new*$8497$RCJqu)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8453$RCJqu
                                (car g$x*$8495$RCJqu)
                                g$old*$8496$RCJqu
                                g$new*$8497$RCJqu)))
                           (case-lambda
                             ((g$x$8498$RCJqu
                                g$old*$8499$RCJqu
                                g$new*$8500$RCJqu)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8454$RCJqu
                                     (cdr g$x*$8495$RCJqu)
                                     g$old*$8499$RCJqu
                                     g$new*$8500$RCJqu)))
                                (case-lambda
                                  ((g$x*$8501$RCJqu
                                     g$old*$8502$RCJqu
                                     g$new*$8503$RCJqu)
                                   (values
                                     (cons g$x$8498$RCJqu g$x*$8501$RCJqu)
                                     g$old*$8502$RCJqu
                                     g$new*$8503$RCJqu))))))))))))
          ((case-lambda
             ((g$t$8455$RCJqu)
              ((case-lambda
                 ((g$ls/false$8456$RCJqu)
                  (if g$ls/false$8456$RCJqu
                    (apply
                      (case-lambda
                        ((g$b$8457$RCJqu g$b*$8458$RCJqu)
                         (g$cons*$6014$RCJqu
                           (g$bless$7825$RCJqu 'let)
                           '()
                           g$b$8457$RCJqu
                           g$b*$8458$RCJqu)))
                      g$ls/false$8456$RCJqu)
                    ((case-lambda
                       ((g$t$8459$RCJqu)
                        ((case-lambda
                           ((g$ls/false$8460$RCJqu)
                            (if g$ls/false$8460$RCJqu
                              (apply
                                (case-lambda
                                  ((g$lhs*$8461$RCJqu
                                     g$rhs*$8462$RCJqu
                                     g$b$8463$RCJqu
                                     g$b*$8464$RCJqu)
                                   (g$bless$7825$RCJqu
                                     ((letrec ((g$f$8465$RCJqu
                                                 (case-lambda
                                                   ((g$lhs*$8466$RCJqu
                                                      g$rhs*$8467$RCJqu
                                                      g$old*$8468$RCJqu
                                                      g$new*$8469$RCJqu)
                                                    (if (null?
                                                          g$lhs*$8466$RCJqu)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8468$RCJqu
                                                               g$new*$8469$RCJqu)
                                                          (cons
                                                            g$b$8463$RCJqu
                                                            g$b*$8464$RCJqu)))
                                                      ((case-lambda
                                                         ((g$t$8470$RCJqu)
                                                          ((case-lambda
                                                             ((g$ls/false$8471$RCJqu)
                                                              (if g$ls/false$8471$RCJqu
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8472$RCJqu)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8454$RCJqu
                                                                            g$x*$8472$RCJqu
                                                                            g$old*$8468$RCJqu
                                                                            g$new*$8469$RCJqu)))
                                                                       (case-lambda
                                                                         ((g$y*$8476$RCJqu
                                                                            g$old*$8477$RCJqu
                                                                            g$new*$8478$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$new*$8479$RCJqu
                                                                                g$old*$8480$RCJqu
                                                                                g$y*$8481$RCJqu)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8467$RCJqu))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8481$RCJqu
                                                                                  (g$f$8465$RCJqu
                                                                                    (cdr g$lhs*$8466$RCJqu)
                                                                                    (cdr g$rhs*$8467$RCJqu)
                                                                                    g$old*$8480$RCJqu
                                                                                    g$new*$8479$RCJqu)))))
                                                                           g$new*$8478$RCJqu
                                                                           g$old*$8477$RCJqu
                                                                           g$y*$8476$RCJqu))))))
                                                                  g$ls/false$8471$RCJqu)
                                                                ((case-lambda
                                                                   ((g$t$8482$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8483$RCJqu)
                                                                        (if g$ls/false$8483$RCJqu
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8484$RCJqu
                                                                                 g$x$8485$RCJqu)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8453$RCJqu
                                                                                      g$x$8485$RCJqu
                                                                                      g$old*$8468$RCJqu
                                                                                      g$new*$8469$RCJqu)))
                                                                                 (case-lambda
                                                                                   ((g$y$8486$RCJqu
                                                                                      g$old*$8487$RCJqu
                                                                                      g$new*$8488$RCJqu)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8454$RCJqu
                                                                                           g$x*$8484$RCJqu
                                                                                           g$old*$8487$RCJqu
                                                                                           g$new*$8488$RCJqu)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8489$RCJqu
                                                                                           g$old*$8490$RCJqu
                                                                                           g$new*$8491$RCJqu)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8467$RCJqu))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8489$RCJqu
                                                                                               g$y$8486$RCJqu)
                                                                                             (g$f$8465$RCJqu
                                                                                               (cdr g$lhs*$8466$RCJqu)
                                                                                               (cdr g$rhs*$8467$RCJqu)
                                                                                               g$old*$8490$RCJqu
                                                                                               g$new*$8491$RCJqu)))))))))))
                                                                            g$ls/false$8483$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$t$8492$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8493$RCJqu)
                                                                                  (if g$ls/false$8493$RCJqu
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8494$RCJqu)
                                                                                         (g$syntax-violation$7968$RCJqu
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8452$RCJqu
                                                                                           g$others$8494$RCJqu)))
                                                                                      g$ls/false$8493$RCJqu)
                                                                                    (g$syntax-violation$7968$RCJqu
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8492$RCJqu))))
                                                                               (g$syntax-dispatch$7862$RCJqu
                                                                                 g$t$8492$RCJqu
                                                                                 'any))))
                                                                           g$t$8482$RCJqu))))
                                                                     (g$syntax-dispatch$7862$RCJqu
                                                                       g$t$8482$RCJqu
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8470$RCJqu))))
                                                           (g$syntax-dispatch$7862$RCJqu
                                                             g$t$8470$RCJqu
                                                             'each-any))))
                                                       (car g$lhs*$8466$RCJqu)))))))
                                        g$f$8465$RCJqu)
                                      g$lhs*$8461$RCJqu
                                      g$rhs*$8462$RCJqu
                                      '()
                                      '()))))
                                g$ls/false$8460$RCJqu)
                              (g$syntax-violation$7968$RCJqu
                                '#f
                                '"invalid syntax"
                                g$t$8459$RCJqu))))
                         (g$syntax-dispatch$7862$RCJqu
                           g$t$8459$RCJqu
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8455$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$8455$RCJqu
                 '(_ () any . each-any)))))
           g$stx$8452$RCJqu)))))
   (g$let*-values-macro$7830$RCJqu
     g$let*-values-macro$11280$RCJqu
     (case-lambda
       ((g$stx$8508$RCJqu)
        (letrec* ((g$check$8509$RCJqu
                    (case-lambda
                      ((g$x*$8533$RCJqu)
                       (if (null? g$x*$8533$RCJqu)
                         (void)
                         ((case-lambda
                            ((g$x$8534$RCJqu)
                             (begin
                               (if (g$id?$7584$RCJqu g$x$8534$RCJqu)
                                 (void)
                                 (g$syntax-violation$7968$RCJqu
                                   '#f
                                   '"not an identifier"
                                   g$stx$8508$RCJqu
                                   g$x$8534$RCJqu))
                               (g$check$8509$RCJqu (cdr g$x*$8533$RCJqu))
                               (if (g$bound-id-member?$7591$RCJqu
                                     g$x$8534$RCJqu
                                     (cdr g$x*$8533$RCJqu))
                                 (g$syntax-violation$7968$RCJqu
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8508$RCJqu
                                   g$x$8534$RCJqu)
                                 (void)))))
                          (car g$x*$8533$RCJqu)))))))
          ((case-lambda
             ((g$t$8510$RCJqu)
              ((case-lambda
                 ((g$ls/false$8511$RCJqu)
                  (if g$ls/false$8511$RCJqu
                    (apply
                      (case-lambda
                        ((g$b$8512$RCJqu g$b*$8513$RCJqu)
                         (g$cons*$6014$RCJqu
                           (g$bless$7825$RCJqu 'let)
                           '()
                           g$b$8512$RCJqu
                           g$b*$8513$RCJqu)))
                      g$ls/false$8511$RCJqu)
                    ((case-lambda
                       ((g$t$8514$RCJqu)
                        ((case-lambda
                           ((g$ls/false$8515$RCJqu)
                            (if g$ls/false$8515$RCJqu
                              (apply
                                (case-lambda
                                  ((g$lhs*$8516$RCJqu
                                     g$rhs*$8517$RCJqu
                                     g$b$8518$RCJqu
                                     g$b*$8519$RCJqu)
                                   (g$bless$7825$RCJqu
                                     ((letrec ((g$f$8520$RCJqu
                                                 (case-lambda
                                                   ((g$lhs*$8521$RCJqu
                                                      g$rhs*$8522$RCJqu)
                                                    (if (null?
                                                          g$lhs*$8521$RCJqu)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8518$RCJqu
                                                          g$b*$8519$RCJqu))
                                                      ((case-lambda
                                                         ((g$t$8523$RCJqu)
                                                          ((case-lambda
                                                             ((g$ls/false$8524$RCJqu)
                                                              (if g$ls/false$8524$RCJqu
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8525$RCJqu)
                                                                     (begin
                                                                       (g$check$8509$RCJqu
                                                                         g$x*$8525$RCJqu)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8522$RCJqu))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8525$RCJqu
                                                                           (g$f$8520$RCJqu
                                                                             (cdr g$lhs*$8521$RCJqu)
                                                                             (cdr g$rhs*$8522$RCJqu)))))))
                                                                  g$ls/false$8524$RCJqu)
                                                                ((case-lambda
                                                                   ((g$t$8526$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8527$RCJqu)
                                                                        (if g$ls/false$8527$RCJqu
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8528$RCJqu
                                                                                 g$x$8529$RCJqu)
                                                                               (begin
                                                                                 (g$check$8509$RCJqu
                                                                                   (cons
                                                                                     g$x$8529$RCJqu
                                                                                     g$x*$8528$RCJqu))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8522$RCJqu))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8528$RCJqu
                                                                                       g$x$8529$RCJqu)
                                                                                     (g$f$8520$RCJqu
                                                                                       (cdr g$lhs*$8521$RCJqu)
                                                                                       (cdr g$rhs*$8522$RCJqu)))))))
                                                                            g$ls/false$8527$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$t$8530$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8531$RCJqu)
                                                                                  (if g$ls/false$8531$RCJqu
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8532$RCJqu)
                                                                                         (g$syntax-violation$7968$RCJqu
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8508$RCJqu
                                                                                           g$others$8532$RCJqu)))
                                                                                      g$ls/false$8531$RCJqu)
                                                                                    (g$syntax-violation$7968$RCJqu
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8530$RCJqu))))
                                                                               (g$syntax-dispatch$7862$RCJqu
                                                                                 g$t$8530$RCJqu
                                                                                 'any))))
                                                                           g$t$8526$RCJqu))))
                                                                     (g$syntax-dispatch$7862$RCJqu
                                                                       g$t$8526$RCJqu
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8523$RCJqu))))
                                                           (g$syntax-dispatch$7862$RCJqu
                                                             g$t$8523$RCJqu
                                                             'each-any))))
                                                       (car g$lhs*$8521$RCJqu)))))))
                                        g$f$8520$RCJqu)
                                      g$lhs*$8516$RCJqu
                                      g$rhs*$8517$RCJqu))))
                                g$ls/false$8515$RCJqu)
                              (g$syntax-violation$7968$RCJqu
                                '#f
                                '"invalid syntax"
                                g$t$8514$RCJqu))))
                         (g$syntax-dispatch$7862$RCJqu
                           g$t$8514$RCJqu
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8510$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$8510$RCJqu
                 '(_ () any . each-any)))))
           g$stx$8508$RCJqu)))))
   (g$trace-lambda-macro$7831$RCJqu
     g$trace-lambda-macro$11281$RCJqu
     (case-lambda
       ((g$stx$8535$RCJqu)
        ((case-lambda
           ((g$t$8536$RCJqu)
            ((case-lambda
               ((g$ls/false$8537$RCJqu)
                (if g$ls/false$8537$RCJqu
                  (apply
                    (case-lambda
                      ((g$who$8538$RCJqu
                         g$fmls$8539$RCJqu
                         g$b$8540$RCJqu
                         g$b*$8541$RCJqu)
                       (if (g$valid-bound-ids?$7589$RCJqu g$fmls$8539$RCJqu)
                         (g$bless$7825$RCJqu
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8538$RCJqu)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8539$RCJqu
                                 (cons g$b$8540$RCJqu g$b*$8541$RCJqu)))))
                         (g$invalid-fmls-error$7827$RCJqu
                           g$stx$8535$RCJqu
                           g$fmls$8539$RCJqu))))
                    g$ls/false$8537$RCJqu)
                  ((case-lambda
                     ((g$t$8542$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8543$RCJqu)
                          (if g$ls/false$8543$RCJqu
                            (apply
                              (case-lambda
                                ((g$who$8544$RCJqu
                                   g$fmls$8545$RCJqu
                                   g$last$8546$RCJqu
                                   g$b$8547$RCJqu
                                   g$b*$8548$RCJqu)
                                 (if (g$valid-bound-ids?$7589$RCJqu
                                       (cons
                                         g$last$8546$RCJqu
                                         g$fmls$8545$RCJqu))
                                   (g$bless$7825$RCJqu
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8544$RCJqu)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8545$RCJqu
                                             g$last$8546$RCJqu)
                                           (cons
                                             g$b$8547$RCJqu
                                             g$b*$8548$RCJqu)))))
                                   (g$invalid-fmls-error$7827$RCJqu
                                     g$stx$8535$RCJqu
                                     (append
                                       g$fmls$8545$RCJqu
                                       g$last$8546$RCJqu)))))
                              g$ls/false$8543$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8542$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8542$RCJqu
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8536$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8536$RCJqu
               '(_ any each-any any . each-any)))))
         g$stx$8535$RCJqu))))
   (g$trace-define-macro$7832$RCJqu
     g$trace-define-macro$11282$RCJqu
     (case-lambda
       ((g$stx$8549$RCJqu)
        ((case-lambda
           ((g$t$8550$RCJqu)
            ((case-lambda
               ((g$ls/false$8551$RCJqu)
                (if g$ls/false$8551$RCJqu
                  (apply
                    (case-lambda
                      ((g$who$8552$RCJqu
                         g$fmls$8553$RCJqu
                         g$b$8554$RCJqu
                         g$b*$8555$RCJqu)
                       (if (g$valid-bound-ids?$7589$RCJqu g$fmls$8553$RCJqu)
                         (g$bless$7825$RCJqu
                           (list
                             'define
                             g$who$8552$RCJqu
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8552$RCJqu)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8553$RCJqu
                                   (cons g$b$8554$RCJqu g$b*$8555$RCJqu))))))
                         (g$invalid-fmls-error$7827$RCJqu
                           g$stx$8549$RCJqu
                           g$fmls$8553$RCJqu))))
                    g$ls/false$8551$RCJqu)
                  ((case-lambda
                     ((g$t$8556$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8557$RCJqu)
                          (if g$ls/false$8557$RCJqu
                            (apply
                              (case-lambda
                                ((g$who$8558$RCJqu
                                   g$fmls$8559$RCJqu
                                   g$last$8560$RCJqu
                                   g$b$8561$RCJqu
                                   g$b*$8562$RCJqu)
                                 (if (g$valid-bound-ids?$7589$RCJqu
                                       (cons
                                         g$last$8560$RCJqu
                                         g$fmls$8559$RCJqu))
                                   (g$bless$7825$RCJqu
                                     (list
                                       'define
                                       g$who$8558$RCJqu
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8558$RCJqu)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8559$RCJqu
                                               g$last$8560$RCJqu)
                                             (cons
                                               g$b$8561$RCJqu
                                               g$b*$8562$RCJqu))))))
                                   (g$invalid-fmls-error$7827$RCJqu
                                     g$stx$8549$RCJqu
                                     (append
                                       g$fmls$8559$RCJqu
                                       g$last$8560$RCJqu)))))
                              g$ls/false$8557$RCJqu)
                            ((case-lambda
                               ((g$t$8563$RCJqu)
                                ((case-lambda
                                   ((g$ls/false$8564$RCJqu)
                                    (if g$ls/false$8564$RCJqu
                                      (apply
                                        (case-lambda
                                          ((g$who$8565$RCJqu g$expr$8566$RCJqu)
                                           (if (g$id?$7584$RCJqu
                                                 g$who$8565$RCJqu)
                                             (g$bless$7825$RCJqu
                                               (list
                                                 'define
                                                 g$who$8565$RCJqu
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8566$RCJqu))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8565$RCJqu)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7968$RCJqu
                                               '#f
                                               '"invalid name"
                                               g$stx$8549$RCJqu))))
                                        g$ls/false$8564$RCJqu)
                                      (g$syntax-violation$7968$RCJqu
                                        '#f
                                        '"invalid syntax"
                                        g$t$8563$RCJqu))))
                                 (g$syntax-dispatch$7862$RCJqu
                                   g$t$8563$RCJqu
                                   '(_ any any)))))
                             g$t$8556$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8556$RCJqu
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8550$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8550$RCJqu
               '(_ (any . each-any) any . each-any)))))
         g$stx$8549$RCJqu))))
   (g$trace-define-syntax-macro$7833$RCJqu
     g$trace-define-syntax-macro$11283$RCJqu
     (case-lambda
       ((g$stx$8567$RCJqu)
        ((case-lambda
           ((g$t$8568$RCJqu)
            ((case-lambda
               ((g$ls/false$8569$RCJqu)
                (if g$ls/false$8569$RCJqu
                  (apply
                    (case-lambda
                      ((g$who$8570$RCJqu g$expr$8571$RCJqu)
                       (if (g$id?$7584$RCJqu g$who$8570$RCJqu)
                         (g$bless$7825$RCJqu
                           (list
                             'define-syntax
                             g$who$8570$RCJqu
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8570$RCJqu)
                               g$expr$8571$RCJqu)))
                         (g$syntax-violation$7968$RCJqu
                           '#f
                           '"invalid name"
                           g$stx$8567$RCJqu))))
                    g$ls/false$8569$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8568$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8568$RCJqu '(_ any any)))))
         g$stx$8567$RCJqu))))
   (g$trace-let/rec-syntax$7834$RCJqu
     g$trace-let/rec-syntax$11284$RCJqu
     (case-lambda
       ((g$who$8572$RCJqu)
        (case-lambda
          ((g$stx$8573$RCJqu)
           ((case-lambda
              ((g$t$8574$RCJqu)
               ((case-lambda
                  ((g$ls/false$8575$RCJqu)
                   (if g$ls/false$8575$RCJqu
                     (apply
                       (case-lambda
                         ((g$lhs*$8576$RCJqu
                            g$rhs*$8577$RCJqu
                            g$b$8578$RCJqu
                            g$b*$8579$RCJqu)
                          (if (g$valid-bound-ids?$7589$RCJqu g$lhs*$8576$RCJqu)
                            ((case-lambda
                               ((g$rhs*$8580$RCJqu)
                                (g$bless$7825$RCJqu
                                  (cons
                                    g$who$8572$RCJqu
                                    (cons
                                      (map list
                                           g$lhs*$8576$RCJqu
                                           g$rhs*$8580$RCJqu)
                                      (cons g$b$8578$RCJqu g$b*$8579$RCJqu))))))
                             (map (case-lambda
                                    ((g$lhs$8581$RCJqu g$rhs$8582$RCJqu)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8581$RCJqu)
                                       g$rhs$8582$RCJqu)))
                                  g$lhs*$8576$RCJqu
                                  g$rhs*$8577$RCJqu))
                            (g$invalid-fmls-error$7827$RCJqu
                              g$stx$8573$RCJqu
                              g$lhs*$8576$RCJqu))))
                       g$ls/false$8575$RCJqu)
                     (g$syntax-violation$7968$RCJqu
                       '#f
                       '"invalid syntax"
                       g$t$8574$RCJqu))))
                (g$syntax-dispatch$7862$RCJqu
                  g$t$8574$RCJqu
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8573$RCJqu))))))
   (g$trace-let-syntax-macro$7835$RCJqu
     g$trace-let-syntax-macro$11285$RCJqu
     (g$trace-let/rec-syntax$7834$RCJqu 'let-syntax))
   (g$trace-letrec-syntax-macro$7836$RCJqu
     g$trace-letrec-syntax-macro$11286$RCJqu
     (g$trace-let/rec-syntax$7834$RCJqu 'letrec-syntax))
   (g$guard-macro$7837$RCJqu
     g$guard-macro$11287$RCJqu
     (case-lambda
       ((g$x$8583$RCJqu)
        (letrec* ((g$gen-clauses$8584$RCJqu
                    (case-lambda
                      ((g$con$8596$RCJqu
                         g$outerk$8597$RCJqu
                         g$clause*$8598$RCJqu)
                       (letrec* ((g$f$8599$RCJqu
                                   (case-lambda
                                     ((g$x$8627$RCJqu g$k$8628$RCJqu)
                                      ((case-lambda
                                         ((g$t$8629$RCJqu)
                                          ((case-lambda
                                             ((g$ls/false$8630$RCJqu)
                                              (if g$ls/false$8630$RCJqu
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8631$RCJqu
                                                       g$p$8632$RCJqu)
                                                     ((case-lambda
                                                        ((g$t$8633$RCJqu)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8633$RCJqu
                                                               g$e$8631$RCJqu))
                                                           (list
                                                             'if
                                                             g$t$8633$RCJqu
                                                             (list
                                                               g$p$8632$RCJqu
                                                               g$t$8633$RCJqu)
                                                             g$k$8628$RCJqu))))
                                                      (gensym))))
                                                  g$ls/false$8630$RCJqu)
                                                ((case-lambda
                                                   ((g$t$8634$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$8635$RCJqu)
                                                        (if g$ls/false$8635$RCJqu
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8636$RCJqu)
                                                               ((case-lambda
                                                                  ((g$t$8637$RCJqu)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8637$RCJqu
                                                                         g$e$8636$RCJqu))
                                                                     (list
                                                                       'if
                                                                       g$t$8637$RCJqu
                                                                       g$t$8637$RCJqu
                                                                       g$k$8628$RCJqu))))
                                                                (gensym))))
                                                            g$ls/false$8635$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$8638$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$8639$RCJqu)
                                                                  (if g$ls/false$8639$RCJqu
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8640$RCJqu
                                                                           g$v$8641$RCJqu
                                                                           g$v*$8642$RCJqu)
                                                                         (list
                                                                           'if
                                                                           g$e$8640$RCJqu
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8641$RCJqu
                                                                               g$v*$8642$RCJqu))
                                                                           g$k$8628$RCJqu)))
                                                                      g$ls/false$8639$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$t$8643$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8644$RCJqu)
                                                                            (if g$ls/false$8644$RCJqu
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7968$RCJqu
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8627$RCJqu)))
                                                                                g$ls/false$8644$RCJqu)
                                                                              (g$syntax-violation$7968$RCJqu
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8643$RCJqu))))
                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                           g$t$8643$RCJqu
                                                                           '_))))
                                                                     g$t$8638$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$8638$RCJqu
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8634$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$8634$RCJqu
                                                       '(any)))))
                                                 g$t$8629$RCJqu))))
                                           (g$syntax-dispatch$7862$RCJqu
                                             g$t$8629$RCJqu
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8627$RCJqu))))
                                 (g$f*$8600$RCJqu
                                   (case-lambda
                                     ((g$x*$8607$RCJqu)
                                      ((case-lambda
                                         ((g$t$8608$RCJqu)
                                          ((case-lambda
                                             ((g$ls/false$8609$RCJqu)
                                              (if g$ls/false$8609$RCJqu
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8596$RCJqu)
                                                       '#t)))
                                                  g$ls/false$8609$RCJqu)
                                                ((case-lambda
                                                   ((g$t$8610$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$8611$RCJqu)
                                                        (if g$ls/false$8611$RCJqu
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8612$RCJqu
                                                                 g$e*$8613$RCJqu)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8612$RCJqu
                                                                     g$e*$8613$RCJqu))
                                                                 '#f)))
                                                            g$ls/false$8611$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$8614$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$8615$RCJqu)
                                                                  (if g$ls/false$8615$RCJqu
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8616$RCJqu
                                                                           g$cls*$8617$RCJqu)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8600$RCJqu
                                                                                g$cls*$8617$RCJqu)))
                                                                           (case-lambda
                                                                             ((g$e$8620$RCJqu
                                                                                g$g$8621$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$g$8622$RCJqu
                                                                                    g$e$8623$RCJqu)
                                                                                  (values
                                                                                    (g$f$8599$RCJqu
                                                                                      g$cls$8616$RCJqu
                                                                                      g$e$8623$RCJqu)
                                                                                    g$g$8622$RCJqu)))
                                                                               g$g$8621$RCJqu
                                                                               g$e$8620$RCJqu))))))
                                                                      g$ls/false$8615$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$t$8624$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8625$RCJqu)
                                                                            (if g$ls/false$8625$RCJqu
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8626$RCJqu)
                                                                                   (g$syntax-violation$7968$RCJqu
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8626$RCJqu)))
                                                                                g$ls/false$8625$RCJqu)
                                                                              (g$syntax-violation$7968$RCJqu
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8624$RCJqu))))
                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                           g$t$8624$RCJqu
                                                                           'any))))
                                                                     g$t$8614$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$8614$RCJqu
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8610$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$8610$RCJqu
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8608$RCJqu))))
                                           (g$syntax-dispatch$7862$RCJqu
                                             g$t$8608$RCJqu
                                             '()))))
                                       g$x*$8607$RCJqu)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8600$RCJqu g$clause*$8598$RCJqu)))
                           (case-lambda
                             ((g$code$8603$RCJqu g$raisek$8604$RCJqu)
                              ((case-lambda
                                 ((g$raisek$8605$RCJqu g$code$8606$RCJqu)
                                  (if g$raisek$8605$RCJqu
                                    (list g$outerk$8597$RCJqu g$code$8606$RCJqu)
                                    g$code$8606$RCJqu)))
                               g$raisek$8604$RCJqu
                               g$code$8603$RCJqu)))))))))
          ((case-lambda
             ((g$t$8585$RCJqu)
              ((case-lambda
                 ((g$ls/false$8586$RCJqu)
                  (if (if g$ls/false$8586$RCJqu
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8587$RCJqu
                                 g$clause*$8588$RCJqu
                                 g$b$8589$RCJqu
                                 g$b*$8590$RCJqu)
                               (g$id?$7584$RCJqu g$con$8587$RCJqu)))
                            g$ls/false$8586$RCJqu))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8591$RCJqu
                           g$clause*$8592$RCJqu
                           g$b$8593$RCJqu
                           g$b*$8594$RCJqu)
                         ((case-lambda
                            ((g$outerk$8595$RCJqu)
                             (g$bless$7825$RCJqu
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8595$RCJqu)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8591$RCJqu)
                                           (g$gen-clauses$8584$RCJqu
                                             g$con$8591$RCJqu
                                             g$outerk$8595$RCJqu
                                             g$clause*$8592$RCJqu))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8593$RCJqu
                                                 g$b*$8594$RCJqu))))))))))))
                          (gensym))))
                      g$ls/false$8586$RCJqu)
                    (g$syntax-violation$7968$RCJqu
                      '#f
                      '"invalid syntax"
                      g$t$8585$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$8585$RCJqu
                 '(_ (any . each-any) any . each-any)))))
           g$x$8583$RCJqu)))))
   (g$define-enumeration-macro$7838$RCJqu
     g$define-enumeration-macro$11288$RCJqu
     (case-lambda
       ((g$stx$8645$RCJqu)
        (letrec* ((g$set?$8646$RCJqu
                    (case-lambda
                      ((g$x$8659$RCJqu)
                       ((case-lambda
                          ((g$t$8660$RCJqu)
                           (if g$t$8660$RCJqu
                             g$t$8660$RCJqu
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8659$RCJqu)
                                          (cdr g$x$8659$RCJqu)))
                                 (begin
                                   '#f
                                   (g$set?$8646$RCJqu (cdr g$x$8659$RCJqu)))
                                 '#f)))))
                        (null? g$x$8659$RCJqu)))))
                  (g$remove-dups$8647$RCJqu
                    (case-lambda
                      ((g$ls$8658$RCJqu)
                       (if (null? g$ls$8658$RCJqu)
                         '()
                         (cons
                           (car g$ls$8658$RCJqu)
                           (g$remove-dups$8647$RCJqu
                             (g$remq$6019$RCJqu
                               (car g$ls$8658$RCJqu)
                               (cdr g$ls$8658$RCJqu)))))))))
          ((case-lambda
             ((g$t$8648$RCJqu)
              ((case-lambda
                 ((g$ls/false$8649$RCJqu)
                  (if (if g$ls/false$8649$RCJqu
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8650$RCJqu
                                 g$id*$8651$RCJqu
                                 g$maker$8652$RCJqu)
                               (if (g$id?$7584$RCJqu g$name$8650$RCJqu)
                                 (if (g$id?$7584$RCJqu g$maker$8652$RCJqu)
                                   (begin
                                     '#f
                                     (g$for-all$6012$RCJqu
                                       g$id?$7584$RCJqu
                                       g$id*$8651$RCJqu))
                                   '#f)
                                 '#f)))
                            g$ls/false$8649$RCJqu))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8653$RCJqu g$id*$8654$RCJqu g$maker$8655$RCJqu)
                         ((case-lambda
                            ((g$name*$8656$RCJqu g$mk$8657$RCJqu)
                             (g$bless$7825$RCJqu
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8657$RCJqu
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8656$RCJqu))))
                                 (list
                                   'define-syntax
                                   g$name$8653$RCJqu
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8656$RCJqu))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8653$RCJqu)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8655$RCJqu
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8655$RCJqu)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8656$RCJqu))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8655$RCJqu)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8657$RCJqu
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8647$RCJqu
                            (g$syntax->datum$7971$RCJqu g$id*$8654$RCJqu))
                          (gensym))))
                      g$ls/false$8649$RCJqu)
                    (g$syntax-violation$7968$RCJqu
                      '#f
                      '"invalid syntax"
                      g$t$8648$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$8648$RCJqu
                 '(_ any each-any any)))))
           g$stx$8645$RCJqu)))))
   (g$time-macro$7839$RCJqu
     g$time-macro$11289$RCJqu
     (case-lambda
       ((g$stx$8661$RCJqu)
        ((case-lambda
           ((g$t$8662$RCJqu)
            ((case-lambda
               ((g$ls/false$8663$RCJqu)
                (if g$ls/false$8663$RCJqu
                  (apply
                    (case-lambda
                      ((g$expr$8664$RCJqu)
                       ((case-lambda
                          ((g$str$8665$RCJqu)
                           (g$bless$7825$RCJqu
                             (list
                               'time-it
                               g$str$8665$RCJqu
                               (list 'lambda '() g$expr$8664$RCJqu)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6742$RCJqu)))
                          (case-lambda
                            ((g$p$8668$RCJqu g$e$8669$RCJqu)
                             ((case-lambda
                                ((g$e$8670$RCJqu g$p$8671$RCJqu)
                                 (begin
                                   (write
                                     (g$syntax->datum$7971$RCJqu
                                       g$expr$8664$RCJqu)
                                     g$p$8671$RCJqu)
                                   (g$e$8670$RCJqu))))
                              g$e$8669$RCJqu
                              g$p$8668$RCJqu)))))))
                    g$ls/false$8663$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8662$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8662$RCJqu '(_ any)))))
         g$stx$8661$RCJqu))))
   (g$delay-macro$7840$RCJqu
     g$delay-macro$11290$RCJqu
     (case-lambda
       ((g$stx$8672$RCJqu)
        ((case-lambda
           ((g$t$8673$RCJqu)
            ((case-lambda
               ((g$ls/false$8674$RCJqu)
                (if g$ls/false$8674$RCJqu
                  (apply
                    (case-lambda
                      ((g$expr$8675$RCJqu)
                       (g$bless$7825$RCJqu
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8675$RCJqu)))))
                    g$ls/false$8674$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8673$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8673$RCJqu '(_ any)))))
         g$stx$8672$RCJqu))))
   (g$assert-macro$7841$RCJqu
     g$assert-macro$11291$RCJqu
     (case-lambda
       ((g$stx$8676$RCJqu)
        ((case-lambda
           ((g$t$8677$RCJqu)
            ((case-lambda
               ((g$ls/false$8678$RCJqu)
                (if g$ls/false$8678$RCJqu
                  (apply
                    (case-lambda
                      ((g$expr$8679$RCJqu)
                       (g$bless$7825$RCJqu
                         (list
                           'unless
                           g$expr$8679$RCJqu
                           (list
                             'assertion-violation
                             ''assert
                             '"assertion failed"
                             (list 'quote g$expr$8679$RCJqu))))))
                    g$ls/false$8678$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8677$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8677$RCJqu '(_ any)))))
         g$stx$8676$RCJqu))))
   (g$endianness-macro$7842$RCJqu
     g$endianness-macro$11292$RCJqu
     (case-lambda
       ((g$stx$8680$RCJqu)
        ((case-lambda
           ((g$t$8681$RCJqu)
            ((case-lambda
               ((g$ls/false$8682$RCJqu)
                (if g$ls/false$8682$RCJqu
                  (apply
                    (case-lambda
                      ((g$e$8683$RCJqu)
                       ((case-lambda
                          ((g$t$8684$RCJqu)
                           (if (eqv? g$t$8684$RCJqu 'little)
                             (g$bless$7825$RCJqu ''little)
                             (if (eqv? g$t$8684$RCJqu 'big)
                               (g$bless$7825$RCJqu ''big)
                               (g$syntax-violation$7968$RCJqu
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8680$RCJqu)))))
                        (g$syntax->datum$7971$RCJqu g$e$8683$RCJqu))))
                    g$ls/false$8682$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8681$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8681$RCJqu '(_ any)))))
         g$stx$8680$RCJqu))))
   (g$identifier-syntax-macro$7843$RCJqu
     g$identifier-syntax-macro$11293$RCJqu
     (case-lambda
       ((g$stx$8685$RCJqu)
        ((case-lambda
           ((g$t$8686$RCJqu)
            ((case-lambda
               ((g$ls/false$8687$RCJqu)
                (if g$ls/false$8687$RCJqu
                  (apply
                    (case-lambda
                      ((g$expr$8688$RCJqu)
                       (g$bless$7825$RCJqu
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8688$RCJqu))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8688$RCJqu)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8687$RCJqu)
                  ((case-lambda
                     ((g$t$8689$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8690$RCJqu)
                          (if (if g$ls/false$8690$RCJqu
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8691$RCJqu
                                         g$expr1$8692$RCJqu
                                         g$id2$8693$RCJqu
                                         g$expr2$8694$RCJqu
                                         g$expr3$8695$RCJqu)
                                       (if (g$id?$7584$RCJqu g$id1$8691$RCJqu)
                                         (if (g$id?$7584$RCJqu g$id2$8693$RCJqu)
                                           (begin
                                             '#f
                                             (g$id?$7584$RCJqu
                                               g$expr2$8694$RCJqu))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8690$RCJqu))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8696$RCJqu
                                   g$expr1$8697$RCJqu
                                   g$id2$8698$RCJqu
                                   g$expr2$8699$RCJqu
                                   g$expr3$8700$RCJqu)
                                 (g$bless$7825$RCJqu
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8697$RCJqu))
                                         (list
                                           (list 'set! 'id g$expr2$8699$RCJqu)
                                           (list 'syntax g$expr3$8700$RCJqu))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8697$RCJqu
                                               '(e* ...))))))))))
                              g$ls/false$8690$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8689$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8689$RCJqu
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8686$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8686$RCJqu '(_ any)))))
         g$stx$8685$RCJqu))))
   (g$do-macro$7844$RCJqu
     g$do-macro$11294$RCJqu
     (case-lambda
       ((g$stx$8701$RCJqu)
        (letrec* ((g$bind$8702$RCJqu
                    (case-lambda
                      ((g$x$8714$RCJqu)
                       ((case-lambda
                          ((g$t$8715$RCJqu)
                           ((case-lambda
                              ((g$ls/false$8716$RCJqu)
                               (if g$ls/false$8716$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$x$8717$RCJqu g$init$8718$RCJqu)
                                      (list
                                        g$x$8717$RCJqu
                                        g$init$8718$RCJqu
                                        g$x$8717$RCJqu)))
                                   g$ls/false$8716$RCJqu)
                                 ((case-lambda
                                    ((g$t$8719$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$8720$RCJqu)
                                         (if g$ls/false$8720$RCJqu
                                           (apply
                                             (case-lambda
                                               ((g$x$8721$RCJqu
                                                  g$init$8722$RCJqu
                                                  g$step$8723$RCJqu)
                                                (list
                                                  g$x$8721$RCJqu
                                                  g$init$8722$RCJqu
                                                  g$step$8723$RCJqu)))
                                             g$ls/false$8720$RCJqu)
                                           ((case-lambda
                                              ((g$t$8724$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$8725$RCJqu)
                                                   (if g$ls/false$8725$RCJqu
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7968$RCJqu
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8701$RCJqu)))
                                                       g$ls/false$8725$RCJqu)
                                                     (g$syntax-violation$7968$RCJqu
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8724$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$8724$RCJqu
                                                  '_))))
                                            g$t$8719$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$8719$RCJqu
                                        '(any any any)))))
                                  g$t$8715$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$8715$RCJqu
                              '(any any)))))
                        g$x$8714$RCJqu)))))
          ((case-lambda
             ((g$t$8703$RCJqu)
              ((case-lambda
                 ((g$ls/false$8704$RCJqu)
                  (if g$ls/false$8704$RCJqu
                    (apply
                      (case-lambda
                        ((g$binding*$8705$RCJqu
                           g$test$8706$RCJqu
                           g$expr*$8707$RCJqu
                           g$command*$8708$RCJqu)
                         ((case-lambda
                            ((g$t$8709$RCJqu)
                             ((case-lambda
                                ((g$ls/false$8710$RCJqu)
                                 (if g$ls/false$8710$RCJqu
                                   (apply
                                     (case-lambda
                                       ((g$x*$8711$RCJqu
                                          g$init*$8712$RCJqu
                                          g$step*$8713$RCJqu)
                                        (if (g$valid-bound-ids?$7589$RCJqu
                                              g$x*$8711$RCJqu)
                                          (g$bless$7825$RCJqu
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8711$RCJqu
                                                    (list
                                                      'if
                                                      g$test$8706$RCJqu
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8707$RCJqu))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8708$RCJqu
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8713$RCJqu))))))))
                                              (cons 'loop g$init*$8712$RCJqu)))
                                          (g$syntax-violation$7968$RCJqu
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8701$RCJqu))))
                                     g$ls/false$8710$RCJqu)
                                   (g$syntax-violation$7968$RCJqu
                                     '#f
                                     '"invalid syntax"
                                     g$t$8709$RCJqu))))
                              (g$syntax-dispatch$7862$RCJqu
                                g$t$8709$RCJqu
                                '#(each (any any any))))))
                          (map g$bind$8702$RCJqu g$binding*$8705$RCJqu))))
                      g$ls/false$8704$RCJqu)
                    (g$syntax-violation$7968$RCJqu
                      '#f
                      '"invalid syntax"
                      g$t$8703$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$8703$RCJqu
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8701$RCJqu)))))
   (g$let*-macro$7845$RCJqu
     g$let*-macro$11295$RCJqu
     (case-lambda
       ((g$stx$8726$RCJqu)
        ((case-lambda
           ((g$t$8727$RCJqu)
            ((case-lambda
               ((g$ls/false$8728$RCJqu)
                (if (if g$ls/false$8728$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8729$RCJqu
                               g$rhs*$8730$RCJqu
                               g$b$8731$RCJqu
                               g$b*$8732$RCJqu)
                             (g$for-all$6012$RCJqu
                               g$id?$7584$RCJqu
                               g$lhs*$8729$RCJqu)))
                          g$ls/false$8728$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8733$RCJqu
                         g$rhs*$8734$RCJqu
                         g$b$8735$RCJqu
                         g$b*$8736$RCJqu)
                       (g$bless$7825$RCJqu
                         ((letrec ((g$f$8737$RCJqu
                                     (case-lambda
                                       ((g$x*$8738$RCJqu)
                                        (if (null? g$x*$8738$RCJqu)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8735$RCJqu
                                                g$b*$8736$RCJqu)))
                                          (list
                                            'let
                                            (list (car g$x*$8738$RCJqu))
                                            (g$f$8737$RCJqu
                                              (cdr g$x*$8738$RCJqu))))))))
                            g$f$8737$RCJqu)
                          (map list g$lhs*$8733$RCJqu g$rhs*$8734$RCJqu)))))
                    g$ls/false$8728$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8727$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8727$RCJqu
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8726$RCJqu))))
   (g$or-macro$7846$RCJqu
     g$or-macro$11296$RCJqu
     (case-lambda
       ((g$stx$8739$RCJqu)
        ((case-lambda
           ((g$t$8740$RCJqu)
            ((case-lambda
               ((g$ls/false$8741$RCJqu)
                (if g$ls/false$8741$RCJqu
                  (apply (case-lambda (() '#f)) g$ls/false$8741$RCJqu)
                  ((case-lambda
                     ((g$t$8742$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8743$RCJqu)
                          (if g$ls/false$8743$RCJqu
                            (apply
                              (case-lambda
                                ((g$e$8744$RCJqu g$e*$8745$RCJqu)
                                 (g$bless$7825$RCJqu
                                   ((letrec ((g$f$8746$RCJqu
                                               (case-lambda
                                                 ((g$e$8747$RCJqu
                                                    g$e*$8748$RCJqu)
                                                  (if (null? g$e*$8748$RCJqu)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8747$RCJqu)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8747$RCJqu))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8746$RCJqu
                                                          (car g$e*$8748$RCJqu)
                                                          (cdr g$e*$8748$RCJqu)))))))))
                                      g$f$8746$RCJqu)
                                    g$e$8744$RCJqu
                                    g$e*$8745$RCJqu))))
                              g$ls/false$8743$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8742$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8742$RCJqu
                         '(_ any . each-any)))))
                   g$t$8740$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8740$RCJqu '(_)))))
         g$stx$8739$RCJqu))))
   (g$and-macro$7847$RCJqu
     g$and-macro$11297$RCJqu
     (case-lambda
       ((g$stx$8749$RCJqu)
        ((case-lambda
           ((g$t$8750$RCJqu)
            ((case-lambda
               ((g$ls/false$8751$RCJqu)
                (if g$ls/false$8751$RCJqu
                  (apply (case-lambda (() '#t)) g$ls/false$8751$RCJqu)
                  ((case-lambda
                     ((g$t$8752$RCJqu)
                      ((case-lambda
                         ((g$ls/false$8753$RCJqu)
                          (if g$ls/false$8753$RCJqu
                            (apply
                              (case-lambda
                                ((g$e$8754$RCJqu g$e*$8755$RCJqu)
                                 (g$bless$7825$RCJqu
                                   ((letrec ((g$f$8756$RCJqu
                                               (case-lambda
                                                 ((g$e$8757$RCJqu
                                                    g$e*$8758$RCJqu)
                                                  (if (null? g$e*$8758$RCJqu)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8757$RCJqu)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8757$RCJqu
                                                        (cons
                                                          (g$f$8756$RCJqu
                                                            (car g$e*$8758$RCJqu)
                                                            (cdr g$e*$8758$RCJqu))
                                                          '(#f)))))))))
                                      g$f$8756$RCJqu)
                                    g$e$8754$RCJqu
                                    g$e*$8755$RCJqu))))
                              g$ls/false$8753$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$8752$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$8752$RCJqu
                         '(_ any . each-any)))))
                   g$t$8750$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8750$RCJqu '(_)))))
         g$stx$8749$RCJqu))))
   (g$cond-macro$7848$RCJqu
     g$cond-macro$11298$RCJqu
     (case-lambda
       ((g$stx$8759$RCJqu)
        ((case-lambda
           ((g$t$8760$RCJqu)
            ((case-lambda
               ((g$ls/false$8761$RCJqu)
                (if g$ls/false$8761$RCJqu
                  (apply
                    (case-lambda
                      ((g$cls$8762$RCJqu g$cls*$8763$RCJqu)
                       (g$bless$7825$RCJqu
                         ((letrec ((g$f$8764$RCJqu
                                     (case-lambda
                                       ((g$cls$8765$RCJqu g$cls*$8766$RCJqu)
                                        (if (null? g$cls*$8766$RCJqu)
                                          ((case-lambda
                                             ((g$t$8767$RCJqu)
                                              ((case-lambda
                                                 ((g$ls/false$8768$RCJqu)
                                                  (if g$ls/false$8768$RCJqu
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8769$RCJqu
                                                           g$e*$8770$RCJqu)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8769$RCJqu
                                                             g$e*$8770$RCJqu))))
                                                      g$ls/false$8768$RCJqu)
                                                    ((case-lambda
                                                       ((g$t$8771$RCJqu)
                                                        ((case-lambda
                                                           ((g$ls/false$8772$RCJqu)
                                                            (if g$ls/false$8772$RCJqu
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8773$RCJqu
                                                                     g$p$8774$RCJqu)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8773$RCJqu))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8774$RCJqu
                                                                         '(t))))))
                                                                g$ls/false$8772$RCJqu)
                                                              ((case-lambda
                                                                 ((g$t$8775$RCJqu)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8776$RCJqu)
                                                                      (if g$ls/false$8776$RCJqu
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8777$RCJqu)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8777$RCJqu
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8776$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$t$8778$RCJqu)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8779$RCJqu)
                                                                                (if g$ls/false$8779$RCJqu
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8780$RCJqu
                                                                                         g$e*$8781$RCJqu)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8780$RCJqu
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8781$RCJqu))))
                                                                                    g$ls/false$8779$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$t$8782$RCJqu)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8783$RCJqu)
                                                                                          (if g$ls/false$8783$RCJqu
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7968$RCJqu
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8759$RCJqu)))
                                                                                              g$ls/false$8783$RCJqu)
                                                                                            (g$syntax-violation$7968$RCJqu
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8782$RCJqu))))
                                                                                       (g$syntax-dispatch$7862$RCJqu
                                                                                         g$t$8782$RCJqu
                                                                                         '_))))
                                                                                   g$t$8778$RCJqu))))
                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                               g$t$8778$RCJqu
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8775$RCJqu))))
                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                     g$t$8775$RCJqu
                                                                     '(any)))))
                                                               g$t$8771$RCJqu))))
                                                         (g$syntax-dispatch$7862$RCJqu
                                                           g$t$8771$RCJqu
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8767$RCJqu))))
                                               (g$syntax-dispatch$7862$RCJqu
                                                 g$t$8767$RCJqu
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8765$RCJqu)
                                          ((case-lambda
                                             ((g$t$8784$RCJqu)
                                              ((case-lambda
                                                 ((g$ls/false$8785$RCJqu)
                                                  (if g$ls/false$8785$RCJqu
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8786$RCJqu
                                                           g$e*$8787$RCJqu)
                                                         (g$syntax-violation$7968$RCJqu
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8759$RCJqu)))
                                                      g$ls/false$8785$RCJqu)
                                                    ((case-lambda
                                                       ((g$t$8788$RCJqu)
                                                        ((case-lambda
                                                           ((g$ls/false$8789$RCJqu)
                                                            (if g$ls/false$8789$RCJqu
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8790$RCJqu
                                                                     g$p$8791$RCJqu)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8790$RCJqu))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8791$RCJqu
                                                                         '(t))
                                                                       (g$f$8764$RCJqu
                                                                         (car g$cls*$8766$RCJqu)
                                                                         (cdr g$cls*$8766$RCJqu))))))
                                                                g$ls/false$8789$RCJqu)
                                                              ((case-lambda
                                                                 ((g$t$8792$RCJqu)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8793$RCJqu)
                                                                      (if g$ls/false$8793$RCJqu
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8794$RCJqu)
                                                                             (list
                                                                               'or
                                                                               g$e$8794$RCJqu
                                                                               (g$f$8764$RCJqu
                                                                                 (car g$cls*$8766$RCJqu)
                                                                                 (cdr g$cls*$8766$RCJqu)))))
                                                                          g$ls/false$8793$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$t$8795$RCJqu)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8796$RCJqu)
                                                                                (if g$ls/false$8796$RCJqu
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8797$RCJqu
                                                                                         g$e*$8798$RCJqu)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8797$RCJqu
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8798$RCJqu)
                                                                                         (g$f$8764$RCJqu
                                                                                           (car g$cls*$8766$RCJqu)
                                                                                           (cdr g$cls*$8766$RCJqu)))))
                                                                                    g$ls/false$8796$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$t$8799$RCJqu)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8800$RCJqu)
                                                                                          (if g$ls/false$8800$RCJqu
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7968$RCJqu
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8759$RCJqu)))
                                                                                              g$ls/false$8800$RCJqu)
                                                                                            (g$syntax-violation$7968$RCJqu
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8799$RCJqu))))
                                                                                       (g$syntax-dispatch$7862$RCJqu
                                                                                         g$t$8799$RCJqu
                                                                                         '_))))
                                                                                   g$t$8795$RCJqu))))
                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                               g$t$8795$RCJqu
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8792$RCJqu))))
                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                     g$t$8792$RCJqu
                                                                     '(any)))))
                                                               g$t$8788$RCJqu))))
                                                         (g$syntax-dispatch$7862$RCJqu
                                                           g$t$8788$RCJqu
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8784$RCJqu))))
                                               (g$syntax-dispatch$7862$RCJqu
                                                 g$t$8784$RCJqu
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8765$RCJqu))))))
                            g$f$8764$RCJqu)
                          g$cls$8762$RCJqu
                          g$cls*$8763$RCJqu))))
                    g$ls/false$8761$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8760$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8760$RCJqu
               '(_ any . each-any)))))
         g$stx$8759$RCJqu))))
   (g$do-include$7849$RCJqu
     g$do-include$11299$RCJqu
     (case-lambda
       ((g$stx$8801$RCJqu g$id$8802$RCJqu g$filename$8803$RCJqu)
        ((case-lambda
           ((g$filename$8804$RCJqu)
            (begin
              (if (if (string? g$filename$8804$RCJqu)
                    (begin '#f (g$id?$7584$RCJqu g$id$8802$RCJqu))
                    '#f)
                (void)
                (g$syntax-violation$7968$RCJqu
                  '#f
                  '"invalid syntax"
                  g$stx$8801$RCJqu))
              (cons
                (g$bless$7825$RCJqu 'begin)
                (with-input-from-file
                  g$filename$8804$RCJqu
                  (case-lambda
                    (()
                     ((letrec ((g$f$8805$RCJqu
                                 (case-lambda
                                   ((g$ls$8806$RCJqu)
                                    ((case-lambda
                                       ((g$x$8807$RCJqu)
                                        (if (eof-object? g$x$8807$RCJqu)
                                          (reverse g$ls$8806$RCJqu)
                                          (g$f$8805$RCJqu
                                            (cons
                                              (g$datum->stx$7567$RCJqu
                                                g$id$8802$RCJqu
                                                g$x$8807$RCJqu)
                                              g$ls$8806$RCJqu)))))
                                     (read-annotated))))))
                        g$f$8805$RCJqu)
                      '()))))))))
         (g$stx->datum$7595$RCJqu g$filename$8803$RCJqu)))))
   (g$include-macro$7850$RCJqu
     g$include-macro$11300$RCJqu
     (case-lambda
       ((g$e$8808$RCJqu)
        ((case-lambda
           ((g$t$8809$RCJqu)
            ((case-lambda
               ((g$ls/false$8810$RCJqu)
                (if g$ls/false$8810$RCJqu
                  (apply
                    (case-lambda
                      ((g$id$8811$RCJqu g$filename$8812$RCJqu)
                       (g$do-include$7849$RCJqu
                         g$e$8808$RCJqu
                         g$id$8811$RCJqu
                         g$filename$8812$RCJqu)))
                    g$ls/false$8810$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8809$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8809$RCJqu '(any any)))))
         g$e$8808$RCJqu))))
   (g$include-into-macro$7851$RCJqu
     g$include-into-macro$11301$RCJqu
     (case-lambda
       ((g$e$8813$RCJqu)
        ((case-lambda
           ((g$t$8814$RCJqu)
            ((case-lambda
               ((g$ls/false$8815$RCJqu)
                (if g$ls/false$8815$RCJqu
                  (apply
                    (case-lambda
                      ((g$id$8816$RCJqu g$filename$8817$RCJqu)
                       (g$do-include$7849$RCJqu
                         g$e$8813$RCJqu
                         g$id$8816$RCJqu
                         g$filename$8817$RCJqu)))
                    g$ls/false$8815$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8814$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$8814$RCJqu '(_ any any)))))
         g$e$8813$RCJqu))))
   (g$syntax-rules-macro$7852$RCJqu
     g$syntax-rules-macro$11302$RCJqu
     (case-lambda
       ((g$e$8818$RCJqu)
        ((case-lambda
           ((g$t$8819$RCJqu)
            ((case-lambda
               ((g$ls/false$8820$RCJqu)
                (if g$ls/false$8820$RCJqu
                  (apply
                    (case-lambda
                      ((g$lits$8821$RCJqu g$pat*$8822$RCJqu g$tmp*$8823$RCJqu)
                       (begin
                         (g$verify-literals$7865$RCJqu
                           g$lits$8821$RCJqu
                           g$e$8818$RCJqu)
                         (g$bless$7825$RCJqu
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8821$RCJqu
                                   (map (case-lambda
                                          ((g$pat$8824$RCJqu g$tmp$8825$RCJqu)
                                           ((case-lambda
                                              ((g$t$8826$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$8827$RCJqu)
                                                   (if g$ls/false$8827$RCJqu
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8828$RCJqu)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8828$RCJqu)
                                                            (list
                                                              'syntax
                                                              g$tmp$8825$RCJqu))))
                                                       g$ls/false$8827$RCJqu)
                                                     ((case-lambda
                                                        ((g$t$8829$RCJqu)
                                                         ((case-lambda
                                                            ((g$ls/false$8830$RCJqu)
                                                             (if g$ls/false$8830$RCJqu
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7968$RCJqu
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8818$RCJqu
                                                                      g$pat$8824$RCJqu)))
                                                                 g$ls/false$8830$RCJqu)
                                                               (g$syntax-violation$7968$RCJqu
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8829$RCJqu))))
                                                          (g$syntax-dispatch$7862$RCJqu
                                                            g$t$8829$RCJqu
                                                            '_))))
                                                      g$t$8826$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$8826$RCJqu
                                                  '(_ . any)))))
                                            g$pat$8824$RCJqu)))
                                        g$pat*$8822$RCJqu
                                        g$tmp*$8823$RCJqu)))))))))
                    g$ls/false$8820$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$8819$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$8819$RCJqu
               '(_ each-any . #(each (any any)))))))
         g$e$8818$RCJqu))))
   (g$quasiquote-macro$7853$RCJqu
     g$quasiquote-macro$11303$RCJqu
     ((case-lambda
        (()
         (letrec* ((g$datum$8831$RCJqu
                     (case-lambda
                       ((g$x$8962$RCJqu)
                        (list
                          (g$scheme-stx$7805$RCJqu 'quote)
                          (g$mkstx$7572$RCJqu g$x$8962$RCJqu '() '() '())))))
                   (g$quasicons*$8847$RCJqu
                     (case-lambda
                       ((g$x$8958$RCJqu g$y$8959$RCJqu)
                        ((letrec ((g$f$8960$RCJqu
                                    (case-lambda
                                      ((g$x$8961$RCJqu)
                                       (if (null? g$x$8961$RCJqu)
                                         g$y$8959$RCJqu
                                         (g$quasicons$8848$RCJqu
                                           (car g$x$8961$RCJqu)
                                           (g$f$8960$RCJqu
                                             (cdr g$x$8961$RCJqu))))))))
                           g$f$8960$RCJqu)
                         g$x$8958$RCJqu))))
                   (g$quasicons$8848$RCJqu
                     (case-lambda
                       ((g$x$8939$RCJqu g$y$8940$RCJqu)
                        ((case-lambda
                           ((g$t$8941$RCJqu)
                            ((case-lambda
                               ((g$ls/false$8942$RCJqu)
                                (if g$ls/false$8942$RCJqu
                                  (apply
                                    (case-lambda
                                      ((g$dy$8943$RCJqu)
                                       ((case-lambda
                                          ((g$t$8944$RCJqu)
                                           ((case-lambda
                                              ((g$ls/false$8945$RCJqu)
                                               (if g$ls/false$8945$RCJqu
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8946$RCJqu)
                                                      (list
                                                        (g$scheme-stx$7805$RCJqu
                                                          'quote)
                                                        (cons
                                                          g$dx$8946$RCJqu
                                                          g$dy$8943$RCJqu))))
                                                   g$ls/false$8945$RCJqu)
                                                 ((case-lambda
                                                    ((g$t$8947$RCJqu)
                                                     ((case-lambda
                                                        ((g$ls/false$8948$RCJqu)
                                                         (if g$ls/false$8948$RCJqu
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8949$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8950$RCJqu)
                                                                        (if g$ls/false$8950$RCJqu
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7805$RCJqu
                                                                                   'list)
                                                                                 g$x$8939$RCJqu)))
                                                                            g$ls/false$8950$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$t$8951$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8952$RCJqu)
                                                                                  (if g$ls/false$8952$RCJqu
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7805$RCJqu
                                                                                             'cons)
                                                                                           g$x$8939$RCJqu
                                                                                           g$y$8940$RCJqu)))
                                                                                      g$ls/false$8952$RCJqu)
                                                                                    (g$syntax-violation$7968$RCJqu
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8951$RCJqu))))
                                                                               (g$syntax-dispatch$7862$RCJqu
                                                                                 g$t$8951$RCJqu
                                                                                 '_))))
                                                                           g$t$8949$RCJqu))))
                                                                     (g$syntax-dispatch$7862$RCJqu
                                                                       g$t$8949$RCJqu
                                                                       '()))))
                                                                 g$dy$8943$RCJqu)))
                                                             g$ls/false$8948$RCJqu)
                                                           (g$syntax-violation$7968$RCJqu
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8947$RCJqu))))
                                                      (g$syntax-dispatch$7862$RCJqu
                                                        g$t$8947$RCJqu
                                                        '_))))
                                                  g$t$8944$RCJqu))))
                                            (g$syntax-dispatch$7862$RCJqu
                                              g$t$8944$RCJqu
                                              '(#(scheme-id quote) any)))))
                                        g$x$8939$RCJqu)))
                                    g$ls/false$8942$RCJqu)
                                  ((case-lambda
                                     ((g$t$8953$RCJqu)
                                      ((case-lambda
                                         ((g$ls/false$8954$RCJqu)
                                          (if g$ls/false$8954$RCJqu
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8955$RCJqu)
                                                 (g$cons*$6014$RCJqu
                                                   (g$scheme-stx$7805$RCJqu
                                                     'list)
                                                   g$x$8939$RCJqu
                                                   g$stuff$8955$RCJqu)))
                                              g$ls/false$8954$RCJqu)
                                            ((case-lambda
                                               ((g$t$8956$RCJqu)
                                                ((case-lambda
                                                   ((g$ls/false$8957$RCJqu)
                                                    (if g$ls/false$8957$RCJqu
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7805$RCJqu
                                                               'cons)
                                                             g$x$8939$RCJqu
                                                             g$y$8940$RCJqu)))
                                                        g$ls/false$8957$RCJqu)
                                                      (g$syntax-violation$7968$RCJqu
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8956$RCJqu))))
                                                 (g$syntax-dispatch$7862$RCJqu
                                                   g$t$8956$RCJqu
                                                   '_))))
                                             g$t$8953$RCJqu))))
                                       (g$syntax-dispatch$7862$RCJqu
                                         g$t$8953$RCJqu
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8941$RCJqu))))
                             (g$syntax-dispatch$7862$RCJqu
                               g$t$8941$RCJqu
                               '(#(scheme-id quote) any)))))
                         g$y$8940$RCJqu))))
                   (g$quasiappend$8849$RCJqu
                     (case-lambda
                       ((g$x$8926$RCJqu g$y$8927$RCJqu)
                        ((case-lambda
                           ((g$ls$8928$RCJqu)
                            (if (null? g$ls$8928$RCJqu)
                              (list (g$scheme-stx$7805$RCJqu 'quote) '())
                              (if (null? (cdr g$ls$8928$RCJqu))
                                (car g$ls$8928$RCJqu)
                                (g$cons*$6014$RCJqu
                                  (g$scheme-stx$7805$RCJqu 'append)
                                  g$ls$8928$RCJqu)))))
                         ((letrec ((g$f$8929$RCJqu
                                     (case-lambda
                                       ((g$x$8930$RCJqu)
                                        (if (null? g$x$8930$RCJqu)
                                          ((case-lambda
                                             ((g$t$8931$RCJqu)
                                              ((case-lambda
                                                 ((g$ls/false$8932$RCJqu)
                                                  (if g$ls/false$8932$RCJqu
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8932$RCJqu)
                                                    ((case-lambda
                                                       ((g$t$8933$RCJqu)
                                                        ((case-lambda
                                                           ((g$ls/false$8934$RCJqu)
                                                            (if g$ls/false$8934$RCJqu
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8927$RCJqu)))
                                                                g$ls/false$8934$RCJqu)
                                                              (g$syntax-violation$7968$RCJqu
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8933$RCJqu))))
                                                         (g$syntax-dispatch$7862$RCJqu
                                                           g$t$8933$RCJqu
                                                           '_))))
                                                     g$t$8931$RCJqu))))
                                               (g$syntax-dispatch$7862$RCJqu
                                                 g$t$8931$RCJqu
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8927$RCJqu)
                                          ((case-lambda
                                             ((g$t$8935$RCJqu)
                                              ((case-lambda
                                                 ((g$ls/false$8936$RCJqu)
                                                  (if g$ls/false$8936$RCJqu
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8929$RCJqu
                                                           (cdr g$x$8930$RCJqu))))
                                                      g$ls/false$8936$RCJqu)
                                                    ((case-lambda
                                                       ((g$t$8937$RCJqu)
                                                        ((case-lambda
                                                           ((g$ls/false$8938$RCJqu)
                                                            (if g$ls/false$8938$RCJqu
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8930$RCJqu)
                                                                     (g$f$8929$RCJqu
                                                                       (cdr g$x$8930$RCJqu)))))
                                                                g$ls/false$8938$RCJqu)
                                                              (g$syntax-violation$7968$RCJqu
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8937$RCJqu))))
                                                         (g$syntax-dispatch$7862$RCJqu
                                                           g$t$8937$RCJqu
                                                           '_))))
                                                     g$t$8935$RCJqu))))
                                               (g$syntax-dispatch$7862$RCJqu
                                                 g$t$8935$RCJqu
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8930$RCJqu)))))))
                            g$f$8929$RCJqu)
                          g$x$8926$RCJqu)))))
                   (g$quasivector$8850$RCJqu
                     (case-lambda
                       ((g$x$8901$RCJqu)
                        ((case-lambda
                           ((g$pat-x$8902$RCJqu)
                            ((case-lambda
                               ((g$t$8903$RCJqu)
                                ((case-lambda
                                   ((g$ls/false$8904$RCJqu)
                                    (if g$ls/false$8904$RCJqu
                                      (apply
                                        (case-lambda
                                          ((g$x*$8905$RCJqu)
                                           (list
                                             (g$scheme-stx$7805$RCJqu 'quote)
                                             (list->vector g$x*$8905$RCJqu))))
                                        g$ls/false$8904$RCJqu)
                                      ((case-lambda
                                         ((g$t$8906$RCJqu)
                                          ((case-lambda
                                             ((g$ls/false$8907$RCJqu)
                                              (if g$ls/false$8907$RCJqu
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8908$RCJqu
                                                                 (case-lambda
                                                                   ((g$x$8909$RCJqu
                                                                      g$k$8910$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$t$8911$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8912$RCJqu)
                                                                            (if g$ls/false$8912$RCJqu
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8913$RCJqu)
                                                                                   (g$k$8910$RCJqu
                                                                                     (map (case-lambda
                                                                                            ((g$x$8914$RCJqu)
                                                                                             (list
                                                                                               (g$scheme-stx$7805$RCJqu
                                                                                                 'quote)
                                                                                               g$x$8914$RCJqu)))
                                                                                          g$x*$8913$RCJqu))))
                                                                                g$ls/false$8912$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$t$8915$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8916$RCJqu)
                                                                                      (if g$ls/false$8916$RCJqu
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8917$RCJqu)
                                                                                             (g$k$8910$RCJqu
                                                                                               g$x*$8917$RCJqu)))
                                                                                          g$ls/false$8916$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$t$8918$RCJqu)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8919$RCJqu)
                                                                                                (if g$ls/false$8919$RCJqu
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8920$RCJqu
                                                                                                         g$y$8921$RCJqu)
                                                                                                       (g$f$8908$RCJqu
                                                                                                         g$y$8921$RCJqu
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8922$RCJqu)
                                                                                                            (g$k$8910$RCJqu
                                                                                                              (cons
                                                                                                                g$x$8920$RCJqu
                                                                                                                g$ls$8922$RCJqu)))))))
                                                                                                    g$ls/false$8919$RCJqu)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8923$RCJqu)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8924$RCJqu)
                                                                                                          (if g$ls/false$8924$RCJqu
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7805$RCJqu
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8902$RCJqu)))
                                                                                                              g$ls/false$8924$RCJqu)
                                                                                                            (g$syntax-violation$7968$RCJqu
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8923$RCJqu))))
                                                                                                       (g$syntax-dispatch$7862$RCJqu
                                                                                                         g$t$8923$RCJqu
                                                                                                         '_))))
                                                                                                   g$t$8918$RCJqu))))
                                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                                               g$t$8918$RCJqu
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8915$RCJqu))))
                                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                                     g$t$8915$RCJqu
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8911$RCJqu))))
                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                           g$t$8911$RCJqu
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8909$RCJqu)))))
                                                        g$f$8908$RCJqu)
                                                      g$x$8901$RCJqu
                                                      (case-lambda
                                                        ((g$ls$8925$RCJqu)
                                                         (g$cons*$6014$RCJqu
                                                           (g$scheme-stx$7805$RCJqu
                                                             'vector)
                                                           g$ls$8925$RCJqu))))))
                                                  g$ls/false$8907$RCJqu)
                                                (g$syntax-violation$7968$RCJqu
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8906$RCJqu))))
                                           (g$syntax-dispatch$7862$RCJqu
                                             g$t$8906$RCJqu
                                             '_))))
                                       g$t$8903$RCJqu))))
                                 (g$syntax-dispatch$7862$RCJqu
                                   g$t$8903$RCJqu
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8902$RCJqu)))
                         g$x$8901$RCJqu))))
                   (g$vquasi$8851$RCJqu
                     (case-lambda
                       ((g$p$8884$RCJqu g$lev$8885$RCJqu)
                        ((case-lambda
                           ((g$t$8886$RCJqu)
                            ((case-lambda
                               ((g$ls/false$8887$RCJqu)
                                (if g$ls/false$8887$RCJqu
                                  (apply
                                    (case-lambda
                                      ((g$p$8888$RCJqu g$q$8889$RCJqu)
                                       ((case-lambda
                                          ((g$t$8890$RCJqu)
                                           ((case-lambda
                                              ((g$ls/false$8891$RCJqu)
                                               (if g$ls/false$8891$RCJqu
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8892$RCJqu)
                                                      (if (= g$lev$8885$RCJqu
                                                             '0)
                                                        (g$quasicons*$8847$RCJqu
                                                          g$p$8892$RCJqu
                                                          (g$vquasi$8851$RCJqu
                                                            g$q$8889$RCJqu
                                                            g$lev$8885$RCJqu))
                                                        (g$quasicons$8848$RCJqu
                                                          (g$quasicons$8848$RCJqu
                                                            (g$datum$8831$RCJqu
                                                              'unquote)
                                                            (g$quasi$8852$RCJqu
                                                              g$p$8892$RCJqu
                                                              (- g$lev$8885$RCJqu
                                                                 '1)))
                                                          (g$vquasi$8851$RCJqu
                                                            g$q$8889$RCJqu
                                                            g$lev$8885$RCJqu)))))
                                                   g$ls/false$8891$RCJqu)
                                                 ((case-lambda
                                                    ((g$t$8893$RCJqu)
                                                     ((case-lambda
                                                        ((g$ls/false$8894$RCJqu)
                                                         (if g$ls/false$8894$RCJqu
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8895$RCJqu)
                                                                (if (= g$lev$8885$RCJqu
                                                                       '0)
                                                                  (g$quasiappend$8849$RCJqu
                                                                    g$p$8895$RCJqu
                                                                    (g$vquasi$8851$RCJqu
                                                                      g$q$8889$RCJqu
                                                                      g$lev$8885$RCJqu))
                                                                  (g$quasicons$8848$RCJqu
                                                                    (g$quasicons$8848$RCJqu
                                                                      (g$datum$8831$RCJqu
                                                                        'unquote-splicing)
                                                                      (g$quasi$8852$RCJqu
                                                                        g$p$8895$RCJqu
                                                                        (- g$lev$8885$RCJqu
                                                                           '1)))
                                                                    (g$vquasi$8851$RCJqu
                                                                      g$q$8889$RCJqu
                                                                      g$lev$8885$RCJqu)))))
                                                             g$ls/false$8894$RCJqu)
                                                           ((case-lambda
                                                              ((g$t$8896$RCJqu)
                                                               ((case-lambda
                                                                  ((g$ls/false$8897$RCJqu)
                                                                   (if g$ls/false$8897$RCJqu
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8898$RCJqu)
                                                                          (g$quasicons$8848$RCJqu
                                                                            (g$quasi$8852$RCJqu
                                                                              g$p$8898$RCJqu
                                                                              g$lev$8885$RCJqu)
                                                                            (g$vquasi$8851$RCJqu
                                                                              g$q$8889$RCJqu
                                                                              g$lev$8885$RCJqu))))
                                                                       g$ls/false$8897$RCJqu)
                                                                     (g$syntax-violation$7968$RCJqu
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8896$RCJqu))))
                                                                (g$syntax-dispatch$7862$RCJqu
                                                                  g$t$8896$RCJqu
                                                                  'any))))
                                                            g$t$8893$RCJqu))))
                                                      (g$syntax-dispatch$7862$RCJqu
                                                        g$t$8893$RCJqu
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8890$RCJqu))))
                                            (g$syntax-dispatch$7862$RCJqu
                                              g$t$8890$RCJqu
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8888$RCJqu)))
                                    g$ls/false$8887$RCJqu)
                                  ((case-lambda
                                     ((g$t$8899$RCJqu)
                                      ((case-lambda
                                         ((g$ls/false$8900$RCJqu)
                                          (if g$ls/false$8900$RCJqu
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7805$RCJqu
                                                     'quote)
                                                   '())))
                                              g$ls/false$8900$RCJqu)
                                            (g$syntax-violation$7968$RCJqu
                                              '#f
                                              '"invalid syntax"
                                              g$t$8899$RCJqu))))
                                       (g$syntax-dispatch$7862$RCJqu
                                         g$t$8899$RCJqu
                                         '()))))
                                   g$t$8886$RCJqu))))
                             (g$syntax-dispatch$7862$RCJqu
                               g$t$8886$RCJqu
                               '(any . any)))))
                         g$p$8884$RCJqu))))
                   (g$quasi$8852$RCJqu
                     (case-lambda
                       ((g$p$8857$RCJqu g$lev$8858$RCJqu)
                        ((case-lambda
                           ((g$t$8859$RCJqu)
                            ((case-lambda
                               ((g$ls/false$8860$RCJqu)
                                (if g$ls/false$8860$RCJqu
                                  (apply
                                    (case-lambda
                                      ((g$p$8861$RCJqu)
                                       (if (= g$lev$8858$RCJqu '0)
                                         g$p$8861$RCJqu
                                         (g$quasicons$8848$RCJqu
                                           (g$datum$8831$RCJqu 'unquote)
                                           (g$quasi$8852$RCJqu
                                             (list g$p$8861$RCJqu)
                                             (- g$lev$8858$RCJqu '1))))))
                                    g$ls/false$8860$RCJqu)
                                  ((case-lambda
                                     ((g$t$8862$RCJqu)
                                      ((case-lambda
                                         ((g$ls/false$8863$RCJqu)
                                          (if g$ls/false$8863$RCJqu
                                            (apply
                                              (case-lambda
                                                ((g$p$8864$RCJqu g$q$8865$RCJqu)
                                                 (if (= g$lev$8858$RCJqu '0)
                                                   (g$quasicons*$8847$RCJqu
                                                     g$p$8864$RCJqu
                                                     (g$quasi$8852$RCJqu
                                                       g$q$8865$RCJqu
                                                       g$lev$8858$RCJqu))
                                                   (g$quasicons$8848$RCJqu
                                                     (g$quasicons$8848$RCJqu
                                                       (g$datum$8831$RCJqu
                                                         'unquote)
                                                       (g$quasi$8852$RCJqu
                                                         g$p$8864$RCJqu
                                                         (- g$lev$8858$RCJqu
                                                            '1)))
                                                     (g$quasi$8852$RCJqu
                                                       g$q$8865$RCJqu
                                                       g$lev$8858$RCJqu)))))
                                              g$ls/false$8863$RCJqu)
                                            ((case-lambda
                                               ((g$t$8866$RCJqu)
                                                ((case-lambda
                                                   ((g$ls/false$8867$RCJqu)
                                                    (if g$ls/false$8867$RCJqu
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8868$RCJqu
                                                             g$q$8869$RCJqu)
                                                           (if (= g$lev$8858$RCJqu
                                                                  '0)
                                                             (g$quasiappend$8849$RCJqu
                                                               g$p$8868$RCJqu
                                                               (g$quasi$8852$RCJqu
                                                                 g$q$8869$RCJqu
                                                                 g$lev$8858$RCJqu))
                                                             (g$quasicons$8848$RCJqu
                                                               (g$quasicons$8848$RCJqu
                                                                 (g$datum$8831$RCJqu
                                                                   'unquote-splicing)
                                                                 (g$quasi$8852$RCJqu
                                                                   g$p$8868$RCJqu
                                                                   (- g$lev$8858$RCJqu
                                                                      '1)))
                                                               (g$quasi$8852$RCJqu
                                                                 g$q$8869$RCJqu
                                                                 g$lev$8858$RCJqu)))))
                                                        g$ls/false$8867$RCJqu)
                                                      ((case-lambda
                                                         ((g$t$8870$RCJqu)
                                                          ((case-lambda
                                                             ((g$ls/false$8871$RCJqu)
                                                              (if g$ls/false$8871$RCJqu
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8872$RCJqu)
                                                                     (g$quasicons$8848$RCJqu
                                                                       (g$datum$8831$RCJqu
                                                                         'quasiquote)
                                                                       (g$quasi$8852$RCJqu
                                                                         (list
                                                                           g$p$8872$RCJqu)
                                                                         (+ g$lev$8858$RCJqu
                                                                            '1)))))
                                                                  g$ls/false$8871$RCJqu)
                                                                ((case-lambda
                                                                   ((g$t$8873$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8874$RCJqu)
                                                                        (if g$ls/false$8874$RCJqu
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8875$RCJqu
                                                                                 g$q$8876$RCJqu)
                                                                               (g$quasicons$8848$RCJqu
                                                                                 (g$quasi$8852$RCJqu
                                                                                   g$p$8875$RCJqu
                                                                                   g$lev$8858$RCJqu)
                                                                                 (g$quasi$8852$RCJqu
                                                                                   g$q$8876$RCJqu
                                                                                   g$lev$8858$RCJqu))))
                                                                            g$ls/false$8874$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$t$8877$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8878$RCJqu)
                                                                                  (if (if g$ls/false$8878$RCJqu
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8879$RCJqu)
                                                                                               (not (g$stx?$7556$RCJqu
                                                                                                      g$x$8879$RCJqu))))
                                                                                            g$ls/false$8878$RCJqu))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8880$RCJqu)
                                                                                         (g$quasivector$8850$RCJqu
                                                                                           (g$vquasi$8851$RCJqu
                                                                                             g$x$8880$RCJqu
                                                                                             g$lev$8858$RCJqu))))
                                                                                      g$ls/false$8878$RCJqu)
                                                                                    ((case-lambda
                                                                                       ((g$t$8881$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8882$RCJqu)
                                                                                            (if g$ls/false$8882$RCJqu
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8883$RCJqu)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7805$RCJqu
                                                                                                       'quote)
                                                                                                     g$p$8883$RCJqu)))
                                                                                                g$ls/false$8882$RCJqu)
                                                                                              (g$syntax-violation$7968$RCJqu
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8881$RCJqu))))
                                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                                           g$t$8881$RCJqu
                                                                                           'any))))
                                                                                     g$t$8877$RCJqu))))
                                                                               (g$syntax-dispatch$7862$RCJqu
                                                                                 g$t$8877$RCJqu
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8873$RCJqu))))
                                                                     (g$syntax-dispatch$7862$RCJqu
                                                                       g$t$8873$RCJqu
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8870$RCJqu))))
                                                           (g$syntax-dispatch$7862$RCJqu
                                                             g$t$8870$RCJqu
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8866$RCJqu))))
                                                 (g$syntax-dispatch$7862$RCJqu
                                                   g$t$8866$RCJqu
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8862$RCJqu))))
                                       (g$syntax-dispatch$7862$RCJqu
                                         g$t$8862$RCJqu
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8859$RCJqu))))
                             (g$syntax-dispatch$7862$RCJqu
                               g$t$8859$RCJqu
                               '(#(scheme-id unquote) any)))))
                         g$p$8857$RCJqu)))))
           (case-lambda
             ((g$x$8853$RCJqu)
              ((case-lambda
                 ((g$t$8854$RCJqu)
                  ((case-lambda
                     ((g$ls/false$8855$RCJqu)
                      (if g$ls/false$8855$RCJqu
                        (apply
                          (case-lambda
                            ((g$e$8856$RCJqu)
                             (g$quasi$8852$RCJqu g$e$8856$RCJqu '0)))
                          g$ls/false$8855$RCJqu)
                        (g$syntax-violation$7968$RCJqu
                          '#f
                          '"invalid syntax"
                          g$t$8854$RCJqu))))
                   (g$syntax-dispatch$7862$RCJqu g$t$8854$RCJqu '(_ any)))))
               g$x$8853$RCJqu))))))))
   (g$quasisyntax-macro$7854$RCJqu
     g$quasisyntax-macro$11304$RCJqu
     ((case-lambda
        (()
         (letrec* ((g$quasi$8963$RCJqu
                     (case-lambda
                       ((g$p$8977$RCJqu g$lev$8978$RCJqu)
                        ((case-lambda
                           ((g$t$8979$RCJqu)
                            ((case-lambda
                               ((g$ls/false$8980$RCJqu)
                                (if g$ls/false$8980$RCJqu
                                  (apply
                                    (case-lambda
                                      ((g$p$8981$RCJqu)
                                       (if (= g$lev$8978$RCJqu '0)
                                         ((case-lambda
                                            ((g$g$8982$RCJqu)
                                             (values
                                               (list g$g$8982$RCJqu)
                                               (list g$p$8981$RCJqu)
                                               g$g$8982$RCJqu)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8963$RCJqu
                                                g$p$8981$RCJqu
                                                (- g$lev$8978$RCJqu '1))))
                                           (case-lambda
                                             ((g$lhs*$8986$RCJqu
                                                g$rhs*$8987$RCJqu
                                                g$p$8988$RCJqu)
                                              ((case-lambda
                                                 ((g$p$8989$RCJqu
                                                    g$rhs*$8990$RCJqu
                                                    g$lhs*$8991$RCJqu)
                                                  (values
                                                    g$lhs*$8991$RCJqu
                                                    g$rhs*$8990$RCJqu
                                                    (list
                                                      'unsyntax
                                                      g$p$8989$RCJqu))))
                                               g$p$8988$RCJqu
                                               g$rhs*$8987$RCJqu
                                               g$lhs*$8986$RCJqu)))))))
                                    g$ls/false$8980$RCJqu)
                                  ((case-lambda
                                     ((g$t$8992$RCJqu)
                                      ((case-lambda
                                         ((g$ls/false$8993$RCJqu)
                                          (if (if g$ls/false$8993$RCJqu
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8978$RCJqu '0)))
                                                    g$ls/false$8993$RCJqu))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7968$RCJqu
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8977$RCJqu)))
                                              g$ls/false$8993$RCJqu)
                                            ((case-lambda
                                               ((g$t$8994$RCJqu)
                                                ((case-lambda
                                                   ((g$ls/false$8995$RCJqu)
                                                    (if g$ls/false$8995$RCJqu
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8996$RCJqu
                                                             g$q$8997$RCJqu)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8963$RCJqu
                                                                  g$q$8997$RCJqu
                                                                  g$lev$8978$RCJqu)))
                                                             (case-lambda
                                                               ((g$lhs*$9001$RCJqu
                                                                  g$rhs*$9002$RCJqu
                                                                  g$q$9003$RCJqu)
                                                                ((case-lambda
                                                                   ((g$q$9004$RCJqu
                                                                      g$rhs*$9005$RCJqu
                                                                      g$lhs*$9006$RCJqu)
                                                                    (if (= g$lev$8978$RCJqu
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$9007$RCJqu)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$9007$RCJqu
                                                                                '(...))
                                                                              g$lhs*$9006$RCJqu)
                                                                            (cons
                                                                              g$p$8996$RCJqu
                                                                              g$rhs*$9005$RCJqu)
                                                                            (cons
                                                                              g$g$9007$RCJqu
                                                                              (cons
                                                                                '...
                                                                                g$q$9004$RCJqu)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8963$RCJqu
                                                                             g$p$8996$RCJqu
                                                                             (- g$lev$8978$RCJqu
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9011$RCJqu
                                                                             g$rhs2*$9012$RCJqu
                                                                             g$p$9013$RCJqu)
                                                                           ((case-lambda
                                                                              ((g$p$9014$RCJqu
                                                                                 g$rhs2*$9015$RCJqu
                                                                                 g$lhs2*$9016$RCJqu)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9016$RCJqu
                                                                                   g$lhs*$9006$RCJqu)
                                                                                 (append
                                                                                   g$rhs2*$9015$RCJqu
                                                                                   g$rhs*$9005$RCJqu)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$9014$RCJqu)
                                                                                   g$q$9004$RCJqu))))
                                                                            g$p$9013$RCJqu
                                                                            g$rhs2*$9012$RCJqu
                                                                            g$lhs2*$9011$RCJqu)))))))
                                                                 g$q$9003$RCJqu
                                                                 g$rhs*$9002$RCJqu
                                                                 g$lhs*$9001$RCJqu))))))
                                                        g$ls/false$8995$RCJqu)
                                                      ((case-lambda
                                                         ((g$t$9017$RCJqu)
                                                          ((case-lambda
                                                             ((g$ls/false$9018$RCJqu)
                                                              (if (if g$ls/false$9018$RCJqu
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8978$RCJqu
                                                                              '0)))
                                                                        g$ls/false$9018$RCJqu))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7968$RCJqu
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8977$RCJqu)))
                                                                  g$ls/false$9018$RCJqu)
                                                                ((case-lambda
                                                                   ((g$t$9019$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9020$RCJqu)
                                                                        (if g$ls/false$9020$RCJqu
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9021$RCJqu)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8963$RCJqu
                                                                                      g$p$9021$RCJqu
                                                                                      (+ g$lev$8978$RCJqu
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$9025$RCJqu
                                                                                      g$rhs*$9026$RCJqu
                                                                                      g$p$9027$RCJqu)
                                                                                    ((case-lambda
                                                                                       ((g$p$9028$RCJqu
                                                                                          g$rhs*$9029$RCJqu
                                                                                          g$lhs*$9030$RCJqu)
                                                                                        (values
                                                                                          g$lhs*$9030$RCJqu
                                                                                          g$rhs*$9029$RCJqu
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$9028$RCJqu))))
                                                                                     g$p$9027$RCJqu
                                                                                     g$rhs*$9026$RCJqu
                                                                                     g$lhs*$9025$RCJqu))))))
                                                                            g$ls/false$9020$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$t$9031$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9032$RCJqu)
                                                                                  (if g$ls/false$9032$RCJqu
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9033$RCJqu
                                                                                           g$q$9034$RCJqu)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8963$RCJqu
                                                                                                g$p$9033$RCJqu
                                                                                                g$lev$8978$RCJqu)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9041$RCJqu
                                                                                                g$rhs*$9042$RCJqu
                                                                                                g$p$9043$RCJqu)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8963$RCJqu
                                                                                                     g$q$9034$RCJqu
                                                                                                     g$lev$8978$RCJqu)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$9044$RCJqu
                                                                                                     g$rhs2*$9045$RCJqu
                                                                                                     g$q$9046$RCJqu)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$9047$RCJqu
                                                                                                         g$rhs2*$9048$RCJqu
                                                                                                         g$lhs2*$9049$RCJqu
                                                                                                         g$p$9050$RCJqu
                                                                                                         g$rhs*$9051$RCJqu
                                                                                                         g$lhs*$9052$RCJqu)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$9049$RCJqu
                                                                                                           g$lhs*$9052$RCJqu)
                                                                                                         (append
                                                                                                           g$rhs2*$9048$RCJqu
                                                                                                           g$rhs*$9051$RCJqu)
                                                                                                         (cons
                                                                                                           g$p$9050$RCJqu
                                                                                                           g$q$9047$RCJqu))))
                                                                                                    g$q$9046$RCJqu
                                                                                                    g$rhs2*$9045$RCJqu
                                                                                                    g$lhs2*$9044$RCJqu
                                                                                                    g$p$9043$RCJqu
                                                                                                    g$rhs*$9042$RCJqu
                                                                                                    g$lhs*$9041$RCJqu)))))))))
                                                                                      g$ls/false$9032$RCJqu)
                                                                                    ((case-lambda
                                                                                       ((g$t$9053$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9054$RCJqu)
                                                                                            (if (if g$ls/false$9054$RCJqu
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$9055$RCJqu)
                                                                                                         (not (g$stx?$7556$RCJqu
                                                                                                                g$p$8977$RCJqu))))
                                                                                                      g$ls/false$9054$RCJqu))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$9056$RCJqu)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$9060$RCJqu
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9061$RCJqu)
                                                                                                                       (if (null?
                                                                                                                             g$x$9061$RCJqu)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8963$RCJqu
                                                                                                                                (car g$x$9061$RCJqu)
                                                                                                                                g$lev$8978$RCJqu)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$9065$RCJqu
                                                                                                                                g$rhs*$9066$RCJqu
                                                                                                                                g$a$9067$RCJqu)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$9068$RCJqu
                                                                                                                                    g$rhs*$9069$RCJqu
                                                                                                                                    g$lhs*$9070$RCJqu)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$9060$RCJqu
                                                                                                                                         (cdr g$x$9061$RCJqu))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$9074$RCJqu
                                                                                                                                         g$rhs2*$9075$RCJqu
                                                                                                                                         g$d$9076$RCJqu)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$9077$RCJqu
                                                                                                                                             g$rhs2*$9078$RCJqu
                                                                                                                                             g$lhs2*$9079$RCJqu)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$9070$RCJqu
                                                                                                                                               g$lhs2*$9079$RCJqu)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$9069$RCJqu
                                                                                                                                               g$rhs2*$9078$RCJqu)
                                                                                                                                             (cons
                                                                                                                                               g$a$9068$RCJqu
                                                                                                                                               g$d$9077$RCJqu))))
                                                                                                                                        g$d$9076$RCJqu
                                                                                                                                        g$rhs2*$9075$RCJqu
                                                                                                                                        g$lhs2*$9074$RCJqu))))))
                                                                                                                               g$a$9067$RCJqu
                                                                                                                               g$rhs*$9066$RCJqu
                                                                                                                               g$lhs*$9065$RCJqu)))))))))
                                                                                                           g$f$9060$RCJqu)
                                                                                                         g$x$9056$RCJqu)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9080$RCJqu
                                                                                                          g$rhs*$9081$RCJqu
                                                                                                          g$x*$9082$RCJqu)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$9083$RCJqu
                                                                                                              g$rhs*$9084$RCJqu
                                                                                                              g$lhs*$9085$RCJqu)
                                                                                                            (values
                                                                                                              g$lhs*$9085$RCJqu
                                                                                                              g$rhs*$9084$RCJqu
                                                                                                              (list->vector
                                                                                                                g$x*$9083$RCJqu))))
                                                                                                         g$x*$9082$RCJqu
                                                                                                         g$rhs*$9081$RCJqu
                                                                                                         g$lhs*$9080$RCJqu))))))
                                                                                                g$ls/false$9054$RCJqu)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9086$RCJqu)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9087$RCJqu)
                                                                                                      (if g$ls/false$9087$RCJqu
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8977$RCJqu)))
                                                                                                          g$ls/false$9087$RCJqu)
                                                                                                        (g$syntax-violation$7968$RCJqu
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$9086$RCJqu))))
                                                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                                                     g$t$9086$RCJqu
                                                                                                     '_))))
                                                                                               g$t$9053$RCJqu))))
                                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                                           g$t$9053$RCJqu
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$9031$RCJqu))))
                                                                               (g$syntax-dispatch$7862$RCJqu
                                                                                 g$t$9031$RCJqu
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$9019$RCJqu))))
                                                                     (g$syntax-dispatch$7862$RCJqu
                                                                       g$t$9019$RCJqu
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$9017$RCJqu))))
                                                           (g$syntax-dispatch$7862$RCJqu
                                                             g$t$9017$RCJqu
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$8994$RCJqu))))
                                                 (g$syntax-dispatch$7862$RCJqu
                                                   g$t$8994$RCJqu
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$8992$RCJqu))))
                                       (g$syntax-dispatch$7862$RCJqu
                                         g$t$8992$RCJqu
                                         '#(scheme-id unsyntax)))))
                                   g$t$8979$RCJqu))))
                             (g$syntax-dispatch$7862$RCJqu
                               g$t$8979$RCJqu
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8977$RCJqu)))))
           (case-lambda
             ((g$x$8964$RCJqu)
              ((case-lambda
                 ((g$t$8965$RCJqu)
                  ((case-lambda
                     ((g$ls/false$8966$RCJqu)
                      (if g$ls/false$8966$RCJqu
                        (apply
                          (case-lambda
                            ((g$e$8967$RCJqu)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8963$RCJqu g$e$8967$RCJqu '0)))
                               (case-lambda
                                 ((g$lhs*$8971$RCJqu
                                    g$rhs*$8972$RCJqu
                                    g$v$8973$RCJqu)
                                  ((case-lambda
                                     ((g$v$8974$RCJqu
                                        g$rhs*$8975$RCJqu
                                        g$lhs*$8976$RCJqu)
                                      (g$bless$7825$RCJqu
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8975$RCJqu)
                                          '()
                                          (list
                                            g$lhs*$8976$RCJqu
                                            (list 'syntax g$v$8974$RCJqu))))))
                                   g$v$8973$RCJqu
                                   g$rhs*$8972$RCJqu
                                   g$lhs*$8971$RCJqu))))))
                          g$ls/false$8966$RCJqu)
                        (g$syntax-violation$7968$RCJqu
                          '#f
                          '"invalid syntax"
                          g$t$8965$RCJqu))))
                   (g$syntax-dispatch$7862$RCJqu g$t$8965$RCJqu '(_ any)))))
               g$x$8964$RCJqu))))))))
   (g$define-struct-macro$7855$RCJqu
     g$define-struct-macro$11305$RCJqu
     (case-lambda
       ((g$stx$9088$RCJqu)
        (g$syntax-violation$7968$RCJqu
          '#f
          '"define-struct not supported"
          g$stx$9088$RCJqu))))
   (g$define-record-type-macro$7856$RCJqu
     g$define-record-type-macro$11306$RCJqu
     (case-lambda
       ((g$x$9089$RCJqu)
        (letrec* ((g$id$9090$RCJqu
                    (case-lambda
                      ((g$ctxt$9342$RCJqu . g$str*$9343$RCJqu)
                       (g$datum->syntax$7970$RCJqu
                         g$ctxt$9342$RCJqu
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9344$RCJqu)
                                     (if (symbol? g$x$9344$RCJqu)
                                       (symbol->string g$x$9344$RCJqu)
                                       (if (string? g$x$9344$RCJqu)
                                         g$x$9344$RCJqu
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9343$RCJqu)))))))
                  (g$get-record-name$9091$RCJqu
                    (case-lambda
                      ((g$spec$9333$RCJqu)
                       ((case-lambda
                          ((g$t$9334$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9335$RCJqu)
                               (if g$ls/false$9335$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$foo$9336$RCJqu
                                        g$make-foo$9337$RCJqu
                                        g$foo?$9338$RCJqu)
                                      g$foo$9336$RCJqu))
                                   g$ls/false$9335$RCJqu)
                                 ((case-lambda
                                    ((g$t$9339$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9340$RCJqu)
                                         (if g$ls/false$9340$RCJqu
                                           (apply
                                             (case-lambda
                                               ((g$foo$9341$RCJqu)
                                                g$foo$9341$RCJqu))
                                             g$ls/false$9340$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9339$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9339$RCJqu
                                        'any))))
                                  g$t$9334$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9334$RCJqu
                              '(any any any)))))
                        g$spec$9333$RCJqu))))
                  (g$get-record-constructor-name$9092$RCJqu
                    (case-lambda
                      ((g$spec$9323$RCJqu)
                       ((case-lambda
                          ((g$t$9324$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9325$RCJqu)
                               (if g$ls/false$9325$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$foo$9326$RCJqu
                                        g$make-foo$9327$RCJqu
                                        g$foo?$9328$RCJqu)
                                      g$make-foo$9327$RCJqu))
                                   g$ls/false$9325$RCJqu)
                                 ((case-lambda
                                    ((g$t$9329$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9330$RCJqu)
                                         (if (if g$ls/false$9330$RCJqu
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9331$RCJqu)
                                                      (g$id?$7584$RCJqu
                                                        g$foo$9331$RCJqu)))
                                                   g$ls/false$9330$RCJqu))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9332$RCJqu)
                                                (g$id$9090$RCJqu
                                                  g$foo$9332$RCJqu
                                                  '"make-"
                                                  (g$stx->datum$7595$RCJqu
                                                    g$foo$9332$RCJqu))))
                                             g$ls/false$9330$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9329$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9329$RCJqu
                                        'any))))
                                  g$t$9324$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9324$RCJqu
                              '(any any any)))))
                        g$spec$9323$RCJqu))))
                  (g$get-record-predicate-name$9093$RCJqu
                    (case-lambda
                      ((g$spec$9313$RCJqu)
                       ((case-lambda
                          ((g$t$9314$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9315$RCJqu)
                               (if g$ls/false$9315$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$foo$9316$RCJqu
                                        g$make-foo$9317$RCJqu
                                        g$foo?$9318$RCJqu)
                                      g$foo?$9318$RCJqu))
                                   g$ls/false$9315$RCJqu)
                                 ((case-lambda
                                    ((g$t$9319$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9320$RCJqu)
                                         (if (if g$ls/false$9320$RCJqu
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9321$RCJqu)
                                                      (g$id?$7584$RCJqu
                                                        g$foo$9321$RCJqu)))
                                                   g$ls/false$9320$RCJqu))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9322$RCJqu)
                                                (g$id$9090$RCJqu
                                                  g$foo$9322$RCJqu
                                                  (g$stx->datum$7595$RCJqu
                                                    g$foo$9322$RCJqu)
                                                  '"?")))
                                             g$ls/false$9320$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9319$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9319$RCJqu
                                        'any))))
                                  g$t$9314$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9314$RCJqu
                              '(any any any)))))
                        g$spec$9313$RCJqu))))
                  (g$get-clause$9094$RCJqu
                    (case-lambda
                      ((g$id$9304$RCJqu g$ls$9305$RCJqu)
                       ((case-lambda
                          ((g$t$9306$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9307$RCJqu)
                               (if g$ls/false$9307$RCJqu
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9307$RCJqu)
                                 ((case-lambda
                                    ((g$t$9308$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9309$RCJqu)
                                         (if g$ls/false$9309$RCJqu
                                           (apply
                                             (case-lambda
                                               ((g$x$9310$RCJqu
                                                  g$rest$9311$RCJqu
                                                  g$ls$9312$RCJqu)
                                                (if (g$free-id=?$7588$RCJqu
                                                      (g$bless$7825$RCJqu
                                                        g$id$9304$RCJqu)
                                                      g$x$9310$RCJqu)
                                                  (cons
                                                    g$x$9310$RCJqu
                                                    g$rest$9311$RCJqu)
                                                  (g$get-clause$9094$RCJqu
                                                    g$id$9304$RCJqu
                                                    g$ls$9312$RCJqu))))
                                             g$ls/false$9309$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9308$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9308$RCJqu
                                        '((any . any) . any)))))
                                  g$t$9306$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu g$t$9306$RCJqu '()))))
                        g$ls$9305$RCJqu))))
                  (g$foo-rtd-code$9095$RCJqu
                    (case-lambda
                      ((g$name$9263$RCJqu
                         g$clause*$9264$RCJqu
                         g$parent-rtd-code$9265$RCJqu)
                       (letrec* ((g$convert-field-spec*$9266$RCJqu
                                   (case-lambda
                                     ((g$ls$9291$RCJqu)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9292$RCJqu)
                                                ((case-lambda
                                                   ((g$t$9293$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$9294$RCJqu)
                                                        (if g$ls/false$9294$RCJqu
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9295$RCJqu
                                                                 g$rest$9296$RCJqu)
                                                               (list
                                                                 'mutable
                                                                 g$name$9295$RCJqu)))
                                                            g$ls/false$9294$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$9297$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$9298$RCJqu)
                                                                  (if g$ls/false$9298$RCJqu
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9299$RCJqu
                                                                           g$rest$9300$RCJqu)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9299$RCJqu)))
                                                                      g$ls/false$9298$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$t$9301$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9302$RCJqu)
                                                                            (if g$ls/false$9302$RCJqu
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9303$RCJqu)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9303$RCJqu)))
                                                                                g$ls/false$9302$RCJqu)
                                                                              (g$syntax-violation$7968$RCJqu
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9301$RCJqu))))
                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                           g$t$9301$RCJqu
                                                                           'any))))
                                                                     g$t$9297$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$9297$RCJqu
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9293$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$9293$RCJqu
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9292$RCJqu)))
                                             g$ls$9291$RCJqu))))))
                         ((case-lambda
                            ((g$uid-code$9267$RCJqu
                               g$sealed?$9268$RCJqu
                               g$opaque?$9269$RCJqu
                               g$fields$9270$RCJqu)
                             (g$bless$7825$RCJqu
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9263$RCJqu)
                                 g$parent-rtd-code$9265$RCJqu
                                 g$uid-code$9267$RCJqu
                                 g$sealed?$9268$RCJqu
                                 g$opaque?$9269$RCJqu
                                 g$fields$9270$RCJqu))))
                          ((case-lambda
                             ((g$t$9271$RCJqu)
                              ((case-lambda
                                 ((g$ls/false$9272$RCJqu)
                                  (if g$ls/false$9272$RCJqu
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9272$RCJqu)
                                    ((case-lambda
                                       ((g$t$9273$RCJqu)
                                        ((case-lambda
                                           ((g$ls/false$9274$RCJqu)
                                            (if g$ls/false$9274$RCJqu
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9275$RCJqu)
                                                   (list
                                                     'quote
                                                     g$uid$9275$RCJqu)))
                                                g$ls/false$9274$RCJqu)
                                              ((case-lambda
                                                 ((g$t$9276$RCJqu)
                                                  ((case-lambda
                                                     ((g$ls/false$9277$RCJqu)
                                                      (if g$ls/false$9277$RCJqu
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9277$RCJqu)
                                                        (g$syntax-violation$7968$RCJqu
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9276$RCJqu))))
                                                   (g$syntax-dispatch$7862$RCJqu
                                                     g$t$9276$RCJqu
                                                     '_))))
                                               g$t$9273$RCJqu))))
                                         (g$syntax-dispatch$7862$RCJqu
                                           g$t$9273$RCJqu
                                           '(_ any)))))
                                     g$t$9271$RCJqu))))
                               (g$syntax-dispatch$7862$RCJqu
                                 g$t$9271$RCJqu
                                 '(_)))))
                           (g$get-clause$9094$RCJqu
                             'nongenerative
                             g$clause*$9264$RCJqu))
                          ((case-lambda
                             ((g$t$9278$RCJqu)
                              ((case-lambda
                                 ((g$ls/false$9279$RCJqu)
                                  (if g$ls/false$9279$RCJqu
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9279$RCJqu)
                                    ((case-lambda
                                       ((g$t$9280$RCJqu)
                                        ((case-lambda
                                           ((g$ls/false$9281$RCJqu)
                                            (if g$ls/false$9281$RCJqu
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9281$RCJqu)
                                              (g$syntax-violation$7968$RCJqu
                                                '#f
                                                '"invalid syntax"
                                                g$t$9280$RCJqu))))
                                         (g$syntax-dispatch$7862$RCJqu
                                           g$t$9280$RCJqu
                                           '_))))
                                     g$t$9278$RCJqu))))
                               (g$syntax-dispatch$7862$RCJqu
                                 g$t$9278$RCJqu
                                 '(_ #(atom #t))))))
                           (g$get-clause$9094$RCJqu
                             'sealed
                             g$clause*$9264$RCJqu))
                          ((case-lambda
                             ((g$t$9282$RCJqu)
                              ((case-lambda
                                 ((g$ls/false$9283$RCJqu)
                                  (if g$ls/false$9283$RCJqu
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9283$RCJqu)
                                    ((case-lambda
                                       ((g$t$9284$RCJqu)
                                        ((case-lambda
                                           ((g$ls/false$9285$RCJqu)
                                            (if g$ls/false$9285$RCJqu
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9285$RCJqu)
                                              (g$syntax-violation$7968$RCJqu
                                                '#f
                                                '"invalid syntax"
                                                g$t$9284$RCJqu))))
                                         (g$syntax-dispatch$7862$RCJqu
                                           g$t$9284$RCJqu
                                           '_))))
                                     g$t$9282$RCJqu))))
                               (g$syntax-dispatch$7862$RCJqu
                                 g$t$9282$RCJqu
                                 '(_ #(atom #t))))))
                           (g$get-clause$9094$RCJqu
                             'opaque
                             g$clause*$9264$RCJqu))
                          ((case-lambda
                             ((g$t$9286$RCJqu)
                              ((case-lambda
                                 ((g$ls/false$9287$RCJqu)
                                  (if g$ls/false$9287$RCJqu
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9288$RCJqu)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9266$RCJqu
                                             g$field-spec*$9288$RCJqu))))
                                      g$ls/false$9287$RCJqu)
                                    ((case-lambda
                                       ((g$t$9289$RCJqu)
                                        ((case-lambda
                                           ((g$ls/false$9290$RCJqu)
                                            (if g$ls/false$9290$RCJqu
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9290$RCJqu)
                                              (g$syntax-violation$7968$RCJqu
                                                '#f
                                                '"invalid syntax"
                                                g$t$9289$RCJqu))))
                                         (g$syntax-dispatch$7862$RCJqu
                                           g$t$9289$RCJqu
                                           '_))))
                                     g$t$9286$RCJqu))))
                               (g$syntax-dispatch$7862$RCJqu
                                 g$t$9286$RCJqu
                                 '(_ . each-any)))))
                           (g$get-clause$9094$RCJqu
                             'fields
                             g$clause*$9264$RCJqu)))))))
                  (g$parent-rtd-code$9096$RCJqu
                    (case-lambda
                      ((g$clause*$9251$RCJqu)
                       ((case-lambda
                          ((g$t$9252$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9253$RCJqu)
                               (if g$ls/false$9253$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$name$9254$RCJqu)
                                      (list
                                        'record-type-descriptor
                                        g$name$9254$RCJqu)))
                                   g$ls/false$9253$RCJqu)
                                 ((case-lambda
                                    ((g$t$9255$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9256$RCJqu)
                                         (if g$ls/false$9256$RCJqu
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9257$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$9258$RCJqu)
                                                        (if g$ls/false$9258$RCJqu
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9259$RCJqu
                                                                 g$rcd$9260$RCJqu)
                                                               g$rtd$9259$RCJqu))
                                                            g$ls/false$9258$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$9261$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$9262$RCJqu)
                                                                  (if g$ls/false$9262$RCJqu
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9262$RCJqu)
                                                                    (g$syntax-violation$7968$RCJqu
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9261$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$9261$RCJqu
                                                                 '#(atom #f)))))
                                                           g$t$9257$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$9257$RCJqu
                                                       '(_ any any)))))
                                                 (g$get-clause$9094$RCJqu
                                                   'parent-rtd
                                                   g$clause*$9251$RCJqu))))
                                             g$ls/false$9256$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9255$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9255$RCJqu
                                        '#(atom #f)))))
                                  g$t$9252$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9252$RCJqu
                              '(_ any)))))
                        (g$get-clause$9094$RCJqu
                          'parent
                          g$clause*$9251$RCJqu)))))
                  (g$parent-rcd-code$9097$RCJqu
                    (case-lambda
                      ((g$clause*$9239$RCJqu)
                       ((case-lambda
                          ((g$t$9240$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9241$RCJqu)
                               (if g$ls/false$9241$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$name$9242$RCJqu)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9242$RCJqu)))
                                   g$ls/false$9241$RCJqu)
                                 ((case-lambda
                                    ((g$t$9243$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9244$RCJqu)
                                         (if g$ls/false$9244$RCJqu
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9245$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$9246$RCJqu)
                                                        (if g$ls/false$9246$RCJqu
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9247$RCJqu
                                                                 g$rcd$9248$RCJqu)
                                                               g$rcd$9248$RCJqu))
                                                            g$ls/false$9246$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$9249$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$9250$RCJqu)
                                                                  (if g$ls/false$9250$RCJqu
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9250$RCJqu)
                                                                    (g$syntax-violation$7968$RCJqu
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9249$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$9249$RCJqu
                                                                 '#(atom #f)))))
                                                           g$t$9245$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$9245$RCJqu
                                                       '(_ any any)))))
                                                 (g$get-clause$9094$RCJqu
                                                   'parent-rtd
                                                   g$clause*$9239$RCJqu))))
                                             g$ls/false$9244$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9243$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9243$RCJqu
                                        '#(atom #f)))))
                                  g$t$9240$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9240$RCJqu
                              '(_ any)))))
                        (g$get-clause$9094$RCJqu
                          'parent
                          g$clause*$9239$RCJqu)))))
                  (g$foo-rcd-code$9098$RCJqu
                    (case-lambda
                      ((g$clause*$9235$RCJqu
                         g$foo-rtd$9236$RCJqu
                         g$protocol$9237$RCJqu
                         g$parent-rcd-code$9238$RCJqu)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9236$RCJqu
                         g$parent-rcd-code$9238$RCJqu
                         g$protocol$9237$RCJqu))))
                  (g$get-protocol-code$9099$RCJqu
                    (case-lambda
                      ((g$clause*$9229$RCJqu)
                       ((case-lambda
                          ((g$t$9230$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9231$RCJqu)
                               (if g$ls/false$9231$RCJqu
                                 (apply
                                   (case-lambda
                                     ((g$expr$9232$RCJqu) g$expr$9232$RCJqu))
                                   g$ls/false$9231$RCJqu)
                                 ((case-lambda
                                    ((g$t$9233$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9234$RCJqu)
                                         (if g$ls/false$9234$RCJqu
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9234$RCJqu)
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$t$9233$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9233$RCJqu
                                        '_))))
                                  g$t$9230$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9230$RCJqu
                              '(_ any)))))
                        (g$get-clause$9094$RCJqu
                          'protocol
                          g$clause*$9229$RCJqu)))))
                  (g$get-fields$9100$RCJqu
                    (case-lambda
                      ((g$clause*$9220$RCJqu)
                       ((case-lambda
                          ((g$t$9221$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9222$RCJqu)
                               (if g$ls/false$9222$RCJqu
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9222$RCJqu)
                                 ((case-lambda
                                    ((g$t$9223$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9224$RCJqu)
                                         (if g$ls/false$9224$RCJqu
                                           (apply
                                             (case-lambda
                                               ((g$f*$9225$RCJqu)
                                                g$f*$9225$RCJqu))
                                             g$ls/false$9224$RCJqu)
                                           ((case-lambda
                                              ((g$t$9226$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$9227$RCJqu)
                                                   (if g$ls/false$9227$RCJqu
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9228$RCJqu)
                                                          (g$get-fields$9100$RCJqu
                                                            g$rest$9228$RCJqu)))
                                                       g$ls/false$9227$RCJqu)
                                                     (g$syntax-violation$7968$RCJqu
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9226$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$9226$RCJqu
                                                  '(_ . any)))))
                                            g$t$9223$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9223$RCJqu
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9221$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu g$t$9221$RCJqu '()))))
                        g$clause*$9220$RCJqu))))
                  (g$get-mutator-indices$9101$RCJqu
                    (case-lambda
                      ((g$fields$9208$RCJqu)
                       ((letrec ((g$f$9209$RCJqu
                                   (case-lambda
                                     ((g$fields$9210$RCJqu g$i$9211$RCJqu)
                                      ((case-lambda
                                         ((g$t$9212$RCJqu)
                                          ((case-lambda
                                             ((g$ls/false$9213$RCJqu)
                                              (if g$ls/false$9213$RCJqu
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9213$RCJqu)
                                                ((case-lambda
                                                   ((g$t$9214$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$9215$RCJqu)
                                                        (if g$ls/false$9215$RCJqu
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9216$RCJqu)
                                                               (cons
                                                                 g$i$9211$RCJqu
                                                                 (g$f$9209$RCJqu
                                                                   g$rest$9216$RCJqu
                                                                   (+ g$i$9211$RCJqu
                                                                      '1)))))
                                                            g$ls/false$9215$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$9217$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$9218$RCJqu)
                                                                  (if g$ls/false$9218$RCJqu
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9219$RCJqu)
                                                                         (g$f$9209$RCJqu
                                                                           g$rest$9219$RCJqu
                                                                           (+ g$i$9211$RCJqu
                                                                              '1))))
                                                                      g$ls/false$9218$RCJqu)
                                                                    (g$syntax-violation$7968$RCJqu
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9217$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$9217$RCJqu
                                                                 '(_ . any)))))
                                                           g$t$9214$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$9214$RCJqu
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9212$RCJqu))))
                                           (g$syntax-dispatch$7862$RCJqu
                                             g$t$9212$RCJqu
                                             '()))))
                                       g$fields$9210$RCJqu)))))
                          g$f$9209$RCJqu)
                        g$fields$9208$RCJqu
                        '0))))
                  (g$get-mutators$9102$RCJqu
                    (case-lambda
                      ((g$foo$9187$RCJqu g$fields$9188$RCJqu)
                       (letrec* ((g$gen-name$9189$RCJqu
                                   (case-lambda
                                     ((g$x$9207$RCJqu)
                                      (g$datum->syntax$7970$RCJqu
                                        g$foo$9187$RCJqu
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7971$RCJqu
                                                g$foo$9187$RCJqu))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7971$RCJqu
                                                g$x$9207$RCJqu))
                                            '"-set!")))))))
                         ((letrec ((g$f$9190$RCJqu
                                     (case-lambda
                                       ((g$fields$9191$RCJqu)
                                        ((case-lambda
                                           ((g$t$9192$RCJqu)
                                            ((case-lambda
                                               ((g$ls/false$9193$RCJqu)
                                                (if g$ls/false$9193$RCJqu
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9193$RCJqu)
                                                  ((case-lambda
                                                     ((g$t$9194$RCJqu)
                                                      ((case-lambda
                                                         ((g$ls/false$9195$RCJqu)
                                                          (if g$ls/false$9195$RCJqu
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9196$RCJqu
                                                                   g$accessor$9197$RCJqu
                                                                   g$mutator$9198$RCJqu
                                                                   g$rest$9199$RCJqu)
                                                                 (cons
                                                                   g$mutator$9198$RCJqu
                                                                   (g$f$9190$RCJqu
                                                                     g$rest$9199$RCJqu))))
                                                              g$ls/false$9195$RCJqu)
                                                            ((case-lambda
                                                               ((g$t$9200$RCJqu)
                                                                ((case-lambda
                                                                   ((g$ls/false$9201$RCJqu)
                                                                    (if g$ls/false$9201$RCJqu
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9202$RCJqu
                                                                             g$rest$9203$RCJqu)
                                                                           (cons
                                                                             (g$gen-name$9189$RCJqu
                                                                               g$name$9202$RCJqu)
                                                                             (g$f$9190$RCJqu
                                                                               g$rest$9203$RCJqu))))
                                                                        g$ls/false$9201$RCJqu)
                                                                      ((case-lambda
                                                                         ((g$t$9204$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9205$RCJqu)
                                                                              (if g$ls/false$9205$RCJqu
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9206$RCJqu)
                                                                                     (g$f$9190$RCJqu
                                                                                       g$rest$9206$RCJqu)))
                                                                                  g$ls/false$9205$RCJqu)
                                                                                (g$syntax-violation$7968$RCJqu
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9204$RCJqu))))
                                                                           (g$syntax-dispatch$7862$RCJqu
                                                                             g$t$9204$RCJqu
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9200$RCJqu))))
                                                                 (g$syntax-dispatch$7862$RCJqu
                                                                   g$t$9200$RCJqu
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9194$RCJqu))))
                                                       (g$syntax-dispatch$7862$RCJqu
                                                         g$t$9194$RCJqu
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9192$RCJqu))))
                                             (g$syntax-dispatch$7862$RCJqu
                                               g$t$9192$RCJqu
                                               '()))))
                                         g$fields$9191$RCJqu)))))
                            g$f$9190$RCJqu)
                          g$fields$9188$RCJqu)))))
                  (g$get-accessors$9103$RCJqu
                    (case-lambda
                      ((g$foo$9153$RCJqu g$fields$9154$RCJqu)
                       (letrec* ((g$gen-name$9155$RCJqu
                                   (case-lambda
                                     ((g$x$9186$RCJqu)
                                      (g$datum->syntax$7970$RCJqu
                                        g$foo$9153$RCJqu
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7971$RCJqu
                                                g$foo$9153$RCJqu))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7971$RCJqu
                                                g$x$9186$RCJqu)))))))))
                         (map (case-lambda
                                ((g$field$9156$RCJqu)
                                 ((case-lambda
                                    ((g$t$9157$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9158$RCJqu)
                                         (if (if g$ls/false$9158$RCJqu
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$9159$RCJqu
                                                        g$accessor$9160$RCJqu
                                                        g$mutator$9161$RCJqu)
                                                      (g$id?$7584$RCJqu
                                                        g$accessor$9160$RCJqu)))
                                                   g$ls/false$9158$RCJqu))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$9162$RCJqu
                                                  g$accessor$9163$RCJqu
                                                  g$mutator$9164$RCJqu)
                                                g$accessor$9163$RCJqu))
                                             g$ls/false$9158$RCJqu)
                                           ((case-lambda
                                              ((g$t$9165$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$9166$RCJqu)
                                                   (if (if g$ls/false$9166$RCJqu
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$9167$RCJqu
                                                                  g$accessor$9168$RCJqu)
                                                                (g$id?$7584$RCJqu
                                                                  g$accessor$9168$RCJqu)))
                                                             g$ls/false$9166$RCJqu))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$9169$RCJqu
                                                            g$accessor$9170$RCJqu)
                                                          g$accessor$9170$RCJqu))
                                                       g$ls/false$9166$RCJqu)
                                                     ((case-lambda
                                                        ((g$t$9171$RCJqu)
                                                         ((case-lambda
                                                            ((g$ls/false$9172$RCJqu)
                                                             (if (if g$ls/false$9172$RCJqu
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$9173$RCJqu)
                                                                          (g$id?$7584$RCJqu
                                                                            g$name$9173$RCJqu)))
                                                                       g$ls/false$9172$RCJqu))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$9174$RCJqu)
                                                                    (g$gen-name$9155$RCJqu
                                                                      g$name$9174$RCJqu)))
                                                                 g$ls/false$9172$RCJqu)
                                                               ((case-lambda
                                                                  ((g$t$9175$RCJqu)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9176$RCJqu)
                                                                       (if (if g$ls/false$9176$RCJqu
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$9177$RCJqu)
                                                                                    (g$id?$7584$RCJqu
                                                                                      g$name$9177$RCJqu)))
                                                                                 g$ls/false$9176$RCJqu))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$9178$RCJqu)
                                                                              (g$gen-name$9155$RCJqu
                                                                                g$name$9178$RCJqu)))
                                                                           g$ls/false$9176$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$t$9179$RCJqu)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9180$RCJqu)
                                                                                 (if (if g$ls/false$9180$RCJqu
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$9181$RCJqu)
                                                                                              (g$id?$7584$RCJqu
                                                                                                g$name$9181$RCJqu)))
                                                                                           g$ls/false$9180$RCJqu))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$9182$RCJqu)
                                                                                        (g$gen-name$9155$RCJqu
                                                                                          g$name$9182$RCJqu)))
                                                                                     g$ls/false$9180$RCJqu)
                                                                                   ((case-lambda
                                                                                      ((g$t$9183$RCJqu)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9184$RCJqu)
                                                                                           (if g$ls/false$9184$RCJqu
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$9185$RCJqu)
                                                                                                  (g$syntax-violation$7968$RCJqu
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$9156$RCJqu)))
                                                                                               g$ls/false$9184$RCJqu)
                                                                                             (g$syntax-violation$7968$RCJqu
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9183$RCJqu))))
                                                                                        (g$syntax-dispatch$7862$RCJqu
                                                                                          g$t$9183$RCJqu
                                                                                          'any))))
                                                                                    g$t$9179$RCJqu))))
                                                                              (g$syntax-dispatch$7862$RCJqu
                                                                                g$t$9179$RCJqu
                                                                                'any))))
                                                                          g$t$9175$RCJqu))))
                                                                    (g$syntax-dispatch$7862$RCJqu
                                                                      g$t$9175$RCJqu
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$9171$RCJqu))))
                                                          (g$syntax-dispatch$7862$RCJqu
                                                            g$t$9171$RCJqu
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$9165$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$9165$RCJqu
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$9157$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9157$RCJqu
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$9156$RCJqu)))
                              g$fields$9154$RCJqu)))))
                  (g$enumerate$9104$RCJqu
                    (case-lambda
                      ((g$ls$9149$RCJqu)
                       ((letrec ((g$f$9150$RCJqu
                                   (case-lambda
                                     ((g$ls$9151$RCJqu g$i$9152$RCJqu)
                                      (if (null? g$ls$9151$RCJqu)
                                        '()
                                        (cons
                                          g$i$9152$RCJqu
                                          (g$f$9150$RCJqu
                                            (cdr g$ls$9151$RCJqu)
                                            (+ g$i$9152$RCJqu '1))))))))
                          g$f$9150$RCJqu)
                        g$ls$9149$RCJqu
                        '0))))
                  (g$do-define-record$9105$RCJqu
                    (case-lambda
                      ((g$namespec$9129$RCJqu g$clause*$9130$RCJqu)
                       ((case-lambda
                          ((g$foo$9131$RCJqu)
                           ((case-lambda
                              ((g$foo-rtd$9132$RCJqu)
                               ((case-lambda
                                  ((g$foo-rcd$9133$RCJqu)
                                   ((case-lambda
                                      ((g$protocol$9134$RCJqu)
                                       ((case-lambda
                                          ((g$make-foo$9135$RCJqu)
                                           ((case-lambda
                                              ((g$fields$9136$RCJqu)
                                               ((case-lambda
                                                  ((g$idx*$9137$RCJqu)
                                                   ((case-lambda
                                                      ((g$foo-x*$9138$RCJqu)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9139$RCJqu)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9140$RCJqu)
                                                               ((case-lambda
                                                                  ((g$foo?$9141$RCJqu)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9142$RCJqu)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9143$RCJqu)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9144$RCJqu)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7825$RCJqu
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9132$RCJqu
                                                                                           g$foo-rtd-code$9142$RCJqu)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9134$RCJqu
                                                                                             g$protocol-code$9144$RCJqu)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9133$RCJqu
                                                                                               g$foo-rcd-code$9143$RCJqu)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9131$RCJqu
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9132$RCJqu)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9133$RCJqu)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9141$RCJqu
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9132$RCJqu))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9135$RCJqu
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9133$RCJqu))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$9145$RCJqu
                                                                                                               g$idx$9146$RCJqu)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$9145$RCJqu
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$9132$RCJqu
                                                                                                                 g$idx$9146$RCJqu))))
                                                                                                          g$foo-x*$9138$RCJqu
                                                                                                          g$idx*$9137$RCJqu)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$9147$RCJqu
                                                                                                               g$idx$9148$RCJqu)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$9147$RCJqu
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$9132$RCJqu
                                                                                                                 g$idx$9148$RCJqu))))
                                                                                                          g$set-foo-x!*$9139$RCJqu
                                                                                                          g$set-foo-idx*$9140$RCJqu)))))))))))))))
                                                                            (g$get-protocol-code$9099$RCJqu
                                                                              g$clause*$9130$RCJqu))))
                                                                        (g$foo-rcd-code$9098$RCJqu
                                                                          g$clause*$9130$RCJqu
                                                                          g$foo-rtd$9132$RCJqu
                                                                          g$protocol$9134$RCJqu
                                                                          (g$parent-rcd-code$9097$RCJqu
                                                                            g$clause*$9130$RCJqu)))))
                                                                    (g$foo-rtd-code$9095$RCJqu
                                                                      g$foo$9131$RCJqu
                                                                      g$clause*$9130$RCJqu
                                                                      (g$parent-rtd-code$9096$RCJqu
                                                                        g$clause*$9130$RCJqu)))))
                                                                (g$get-record-predicate-name$9093$RCJqu
                                                                  g$namespec$9129$RCJqu))))
                                                            (g$get-mutator-indices$9101$RCJqu
                                                              g$fields$9136$RCJqu))))
                                                        (g$get-mutators$9102$RCJqu
                                                          g$foo$9131$RCJqu
                                                          g$fields$9136$RCJqu))))
                                                    (g$get-accessors$9103$RCJqu
                                                      g$foo$9131$RCJqu
                                                      g$fields$9136$RCJqu))))
                                                (g$enumerate$9104$RCJqu
                                                  g$fields$9136$RCJqu))))
                                            (g$get-fields$9100$RCJqu
                                              g$clause*$9130$RCJqu))))
                                        (g$get-record-constructor-name$9092$RCJqu
                                          g$namespec$9129$RCJqu))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9091$RCJqu g$namespec$9129$RCJqu)))))
                  (g$verify-clauses$9106$RCJqu
                    (case-lambda
                      ((g$x$9111$RCJqu g$cls*$9112$RCJqu)
                       (letrec* ((g$valid-kwds$9113$RCJqu
                                   (map g$bless$7825$RCJqu
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$9114$RCJqu
                                   (case-lambda
                                     ((g$x$9126$RCJqu g$ls$9127$RCJqu)
                                      (if (pair? g$ls$9127$RCJqu)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9128$RCJqu)
                                              (if g$t$9128$RCJqu
                                                g$t$9128$RCJqu
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9114$RCJqu
                                                    g$x$9126$RCJqu
                                                    (cdr g$ls$9127$RCJqu))))))
                                           (g$free-id=?$7588$RCJqu
                                             g$x$9126$RCJqu
                                             (car g$ls$9127$RCJqu))))
                                        '#f)))))
                         ((letrec ((g$f$9115$RCJqu
                                     (case-lambda
                                       ((g$cls*$9116$RCJqu g$seen*$9117$RCJqu)
                                        (if (null? g$cls*$9116$RCJqu)
                                          (void)
                                          ((case-lambda
                                             ((g$t$9118$RCJqu)
                                              ((case-lambda
                                                 ((g$ls/false$9119$RCJqu)
                                                  (if g$ls/false$9119$RCJqu
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9120$RCJqu
                                                           g$rest$9121$RCJqu)
                                                         (if ((case-lambda
                                                                ((g$t$9122$RCJqu)
                                                                 (if g$t$9122$RCJqu
                                                                   g$t$9122$RCJqu
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9114$RCJqu
                                                                            g$kwd$9120$RCJqu
                                                                            g$valid-kwds$9113$RCJqu))))))
                                                              (not (g$id?$7584$RCJqu
                                                                     g$kwd$9120$RCJqu)))
                                                           (g$syntax-violation$7968$RCJqu
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9120$RCJqu)
                                                           (if (g$bound-id-member?$7591$RCJqu
                                                                 g$kwd$9120$RCJqu
                                                                 g$seen*$9117$RCJqu)
                                                             (g$syntax-violation$7968$RCJqu
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9111$RCJqu
                                                               g$kwd$9120$RCJqu)
                                                             (g$f$9115$RCJqu
                                                               (cdr g$cls*$9116$RCJqu)
                                                               (cons
                                                                 g$kwd$9120$RCJqu
                                                                 g$seen*$9117$RCJqu))))))
                                                      g$ls/false$9119$RCJqu)
                                                    ((case-lambda
                                                       ((g$t$9123$RCJqu)
                                                        ((case-lambda
                                                           ((g$ls/false$9124$RCJqu)
                                                            (if g$ls/false$9124$RCJqu
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9125$RCJqu)
                                                                   (g$syntax-violation$7968$RCJqu
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9125$RCJqu)))
                                                                g$ls/false$9124$RCJqu)
                                                              (g$syntax-violation$7968$RCJqu
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9123$RCJqu))))
                                                         (g$syntax-dispatch$7862$RCJqu
                                                           g$t$9123$RCJqu
                                                           'any))))
                                                     g$t$9118$RCJqu))))
                                               (g$syntax-dispatch$7862$RCJqu
                                                 g$t$9118$RCJqu
                                                 '(any . any)))))
                                           (car g$cls*$9116$RCJqu)))))))
                            g$f$9115$RCJqu)
                          g$cls*$9112$RCJqu
                          '()))))))
          ((case-lambda
             ((g$t$9107$RCJqu)
              ((case-lambda
                 ((g$ls/false$9108$RCJqu)
                  (if g$ls/false$9108$RCJqu
                    (apply
                      (case-lambda
                        ((g$namespec$9109$RCJqu g$clause*$9110$RCJqu)
                         (begin
                           (g$verify-clauses$9106$RCJqu
                             g$x$9089$RCJqu
                             g$clause*$9110$RCJqu)
                           (g$do-define-record$9105$RCJqu
                             g$namespec$9109$RCJqu
                             g$clause*$9110$RCJqu))))
                      g$ls/false$9108$RCJqu)
                    (g$syntax-violation$7968$RCJqu
                      '#f
                      '"invalid syntax"
                      g$t$9107$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$9107$RCJqu
                 '(_ any . each-any)))))
           g$x$9089$RCJqu)))))
   (g$define-condition-type-macro$7857$RCJqu
     g$define-condition-type-macro$11307$RCJqu
     (case-lambda
       ((g$x$9345$RCJqu)
        (letrec* ((g$mkname$9346$RCJqu
                    (case-lambda
                      ((g$name$9369$RCJqu g$suffix$9370$RCJqu)
                       (g$datum->syntax$7970$RCJqu
                         g$name$9369$RCJqu
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7971$RCJqu g$name$9369$RCJqu))
                             g$suffix$9370$RCJqu)))))))
          ((case-lambda
             ((g$t$9347$RCJqu)
              ((case-lambda
                 ((g$ls/false$9348$RCJqu)
                  (if (if g$ls/false$9348$RCJqu
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9349$RCJqu
                                 g$name$9350$RCJqu
                                 g$super$9351$RCJqu
                                 g$constructor$9352$RCJqu
                                 g$predicate$9353$RCJqu
                                 g$field*$9354$RCJqu
                                 g$accessor*$9355$RCJqu)
                               (if (g$id?$7584$RCJqu g$name$9350$RCJqu)
                                 (if (g$id?$7584$RCJqu g$super$9351$RCJqu)
                                   (if (g$id?$7584$RCJqu
                                         g$constructor$9352$RCJqu)
                                     (if (g$id?$7584$RCJqu
                                           g$predicate$9353$RCJqu)
                                       (if (g$for-all$6012$RCJqu
                                             g$id?$7584$RCJqu
                                             g$field*$9354$RCJqu)
                                         (begin
                                           '#f
                                           (g$for-all$6012$RCJqu
                                             g$id?$7584$RCJqu
                                             g$accessor*$9355$RCJqu))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9348$RCJqu))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9356$RCJqu
                           g$name$9357$RCJqu
                           g$super$9358$RCJqu
                           g$constructor$9359$RCJqu
                           g$predicate$9360$RCJqu
                           g$field*$9361$RCJqu
                           g$accessor*$9362$RCJqu)
                         ((case-lambda
                            ((g$aux-accessor*$9363$RCJqu)
                             (g$bless$7825$RCJqu
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9357$RCJqu
                                         g$constructor$9359$RCJqu
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9358$RCJqu)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9364$RCJqu
                                                       g$aux$9365$RCJqu)
                                                     (list
                                                       'immutable
                                                       g$field$9364$RCJqu
                                                       g$aux$9365$RCJqu)))
                                                  g$field*$9361$RCJqu
                                                  g$aux-accessor*$9363$RCJqu))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9360$RCJqu
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9357$RCJqu)))
                                     (map (case-lambda
                                            ((g$accessor$9366$RCJqu
                                               g$aux$9367$RCJqu)
                                             (list
                                               'define
                                               g$accessor$9366$RCJqu
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9357$RCJqu)
                                                 g$aux$9367$RCJqu))))
                                          g$accessor*$9362$RCJqu
                                          g$aux-accessor*$9363$RCJqu)))))))
                          (map (case-lambda ((g$x$9368$RCJqu) (gensym)))
                               g$accessor*$9362$RCJqu))))
                      g$ls/false$9348$RCJqu)
                    (g$syntax-violation$7968$RCJqu
                      '#f
                      '"invalid syntax"
                      g$t$9347$RCJqu))))
               (g$syntax-dispatch$7862$RCJqu
                 g$t$9347$RCJqu
                 '(any any any any any . #(each (any any)))))))
           g$x$9345$RCJqu)))))
   (g$incorrect-usage-macro$7858$RCJqu
     g$incorrect-usage-macro$11308$RCJqu
     (case-lambda
       ((g$e$9371$RCJqu)
        (g$syntax-violation$7968$RCJqu
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9371$RCJqu))))
   (g$parameterize-transformer$7859$RCJqu
     g$parameterize-transformer$11309$RCJqu
     (case-lambda
       ((g$e$9372$RCJqu g$r$9373$RCJqu g$mr$9374$RCJqu)
        ((case-lambda
           ((g$t$9375$RCJqu)
            ((case-lambda
               ((g$ls/false$9376$RCJqu)
                (if g$ls/false$9376$RCJqu
                  (apply
                    (case-lambda
                      ((g$b$9377$RCJqu g$b*$9378$RCJqu)
                       (g$chi-internal$7891$RCJqu
                         (cons g$b$9377$RCJqu g$b*$9378$RCJqu)
                         g$r$9373$RCJqu
                         g$mr$9374$RCJqu)))
                    g$ls/false$9376$RCJqu)
                  ((case-lambda
                     ((g$t$9379$RCJqu)
                      ((case-lambda
                         ((g$ls/false$9380$RCJqu)
                          (if g$ls/false$9380$RCJqu
                            (apply
                              (case-lambda
                                ((g$olhs*$9381$RCJqu
                                   g$orhs*$9382$RCJqu
                                   g$b$9383$RCJqu
                                   g$b*$9384$RCJqu)
                                 ((case-lambda
                                    ((g$lhs*$9385$RCJqu
                                       g$rhs*$9386$RCJqu
                                       g$t*$9387$RCJqu
                                       g$swap$9388$RCJqu)
                                     (g$build-let$7517$RCJqu
                                       '#f
                                       (append
                                         g$lhs*$9385$RCJqu
                                         g$rhs*$9386$RCJqu)
                                       (append
                                         (g$chi-expr*$7878$RCJqu
                                           g$olhs*$9381$RCJqu
                                           g$r$9373$RCJqu
                                           g$mr$9374$RCJqu)
                                         (g$chi-expr*$7878$RCJqu
                                           g$orhs*$9382$RCJqu
                                           g$r$9373$RCJqu
                                           g$mr$9374$RCJqu))
                                       (g$build-let$7517$RCJqu
                                         '#f
                                         (list g$swap$9388$RCJqu)
                                         (list
                                           (g$build-lambda$7515$RCJqu
                                             '#f
                                             '()
                                             (g$build-sequence$7518$RCJqu
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$9389$RCJqu
                                                         g$lhs$9390$RCJqu
                                                         g$rhs$9391$RCJqu)
                                                       (g$build-let$7517$RCJqu
                                                         '#f
                                                         (list g$t$9389$RCJqu)
                                                         (list
                                                           (list
                                                             g$lhs$9390$RCJqu))
                                                         (g$build-sequence$7518$RCJqu
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$9390$RCJqu
                                                               g$rhs$9391$RCJqu)
                                                             (list
                                                               'set!
                                                               g$rhs$9391$RCJqu
                                                               g$t$9389$RCJqu))))))
                                                    g$t*$9387$RCJqu
                                                    g$lhs*$9385$RCJqu
                                                    g$rhs*$9386$RCJqu))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$9388$RCJqu
                                           (g$build-lambda$7515$RCJqu
                                             '#f
                                             '()
                                             (g$chi-internal$7891$RCJqu
                                               (cons
                                                 g$b$9383$RCJqu
                                                 g$b*$9384$RCJqu)
                                               g$r$9373$RCJqu
                                               g$mr$9374$RCJqu))
                                           g$swap$9388$RCJqu)))))
                                  (map (case-lambda
                                         ((g$x$9392$RCJqu)
                                          (g$gen-lexical$7528$RCJqu 'lhs)))
                                       g$olhs*$9381$RCJqu)
                                  (map (case-lambda
                                         ((g$x$9393$RCJqu)
                                          (g$gen-lexical$7528$RCJqu 'rhs)))
                                       g$olhs*$9381$RCJqu)
                                  (map (case-lambda
                                         ((g$x$9394$RCJqu)
                                          (g$gen-lexical$7528$RCJqu 't)))
                                       g$olhs*$9381$RCJqu)
                                  (g$gen-lexical$7528$RCJqu 'swap))))
                              g$ls/false$9380$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$9379$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$9379$RCJqu
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9375$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$9375$RCJqu
               '(_ () any . each-any)))))
         g$e$9372$RCJqu))))
   (g$foreign-call-transformer$7860$RCJqu
     g$foreign-call-transformer$11310$RCJqu
     (case-lambda
       ((g$e$9395$RCJqu g$r$9396$RCJqu g$mr$9397$RCJqu)
        ((case-lambda
           ((g$t$9398$RCJqu)
            ((case-lambda
               ((g$ls/false$9399$RCJqu)
                (if g$ls/false$9399$RCJqu
                  (apply
                    (case-lambda
                      ((g$name$9400$RCJqu g$arg*$9401$RCJqu)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7880$RCJqu
                             g$name$9400$RCJqu
                             g$r$9396$RCJqu
                             g$mr$9397$RCJqu)
                           (g$chi-expr*$7878$RCJqu
                             g$arg*$9401$RCJqu
                             g$r$9396$RCJqu
                             g$mr$9397$RCJqu)))))
                    g$ls/false$9399$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$9398$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$9398$RCJqu
               '(_ any . each-any)))))
         g$e$9395$RCJqu))))
   (g$convert-pattern$7861$RCJqu
     g$convert-pattern$11311$RCJqu
     (case-lambda
       ((g$pattern$9402$RCJqu g$keys$9403$RCJqu)
        (letrec* ((g$cvt*$9404$RCJqu
                    (case-lambda
                      ((g$p*$9484$RCJqu g$n$9485$RCJqu g$ids$9486$RCJqu)
                       (if (null? g$p*$9484$RCJqu)
                         (values '() g$ids$9486$RCJqu)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9404$RCJqu
                                (cdr g$p*$9484$RCJqu)
                                g$n$9485$RCJqu
                                g$ids$9486$RCJqu)))
                           (case-lambda
                             ((g$y$9489$RCJqu g$ids$9490$RCJqu)
                              ((case-lambda
                                 ((g$ids$9491$RCJqu g$y$9492$RCJqu)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9405$RCJqu
                                         (car g$p*$9484$RCJqu)
                                         g$n$9485$RCJqu
                                         g$ids$9491$RCJqu)))
                                    (case-lambda
                                      ((g$x$9495$RCJqu g$ids$9496$RCJqu)
                                       ((case-lambda
                                          ((g$ids$9497$RCJqu g$x$9498$RCJqu)
                                           (values
                                             (cons
                                               g$x$9498$RCJqu
                                               g$y$9492$RCJqu)
                                             g$ids$9497$RCJqu)))
                                        g$ids$9496$RCJqu
                                        g$x$9495$RCJqu))))))
                               g$ids$9490$RCJqu
                               g$y$9489$RCJqu))))))))
                  (g$cvt$9405$RCJqu
                    (case-lambda
                      ((g$p$9406$RCJqu g$n$9407$RCJqu g$ids$9408$RCJqu)
                       ((case-lambda
                          ((g$t$9409$RCJqu)
                           ((case-lambda
                              ((g$ls/false$9410$RCJqu)
                               (if (if g$ls/false$9410$RCJqu
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9411$RCJqu)
                                            (g$id?$7584$RCJqu g$id$9411$RCJqu)))
                                         g$ls/false$9410$RCJqu))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9412$RCJqu)
                                      (if (g$bound-id-member?$7591$RCJqu
                                            g$p$9406$RCJqu
                                            g$keys$9403$RCJqu)
                                        (values
                                          (vector 'free-id g$p$9406$RCJqu)
                                          g$ids$9408$RCJqu)
                                        (if (g$free-id=?$7588$RCJqu
                                              g$p$9406$RCJqu
                                              (g$scheme-stx$7805$RCJqu '_))
                                          (values '_ g$ids$9408$RCJqu)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9406$RCJqu
                                                g$n$9407$RCJqu)
                                              g$ids$9408$RCJqu))))))
                                   g$ls/false$9410$RCJqu)
                                 ((case-lambda
                                    ((g$t$9413$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$9414$RCJqu)
                                         (if (if g$ls/false$9414$RCJqu
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9415$RCJqu
                                                        g$dots$9416$RCJqu)
                                                      (g$ellipsis?$7863$RCJqu
                                                        g$dots$9416$RCJqu)))
                                                   g$ls/false$9414$RCJqu))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9417$RCJqu
                                                  g$dots$9418$RCJqu)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9405$RCJqu
                                                       g$p$9417$RCJqu
                                                       (+ g$n$9407$RCJqu '1)
                                                       g$ids$9408$RCJqu)))
                                                  (case-lambda
                                                    ((g$p$9421$RCJqu
                                                       g$ids$9422$RCJqu)
                                                     ((case-lambda
                                                        ((g$ids$9423$RCJqu
                                                           g$p$9424$RCJqu)
                                                         (values
                                                           (if (eq? g$p$9424$RCJqu
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9424$RCJqu))
                                                           g$ids$9423$RCJqu)))
                                                      g$ids$9422$RCJqu
                                                      g$p$9421$RCJqu))))))
                                             g$ls/false$9414$RCJqu)
                                           ((case-lambda
                                              ((g$t$9425$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$9426$RCJqu)
                                                   (if (if g$ls/false$9426$RCJqu
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9427$RCJqu
                                                                  g$dots$9428$RCJqu
                                                                  g$ys$9429$RCJqu
                                                                  g$z$9430$RCJqu)
                                                                (g$ellipsis?$7863$RCJqu
                                                                  g$dots$9428$RCJqu)))
                                                             g$ls/false$9426$RCJqu))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9431$RCJqu
                                                            g$dots$9432$RCJqu
                                                            g$ys$9433$RCJqu
                                                            g$z$9434$RCJqu)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9405$RCJqu
                                                                 g$z$9434$RCJqu
                                                                 g$n$9407$RCJqu
                                                                 g$ids$9408$RCJqu)))
                                                            (case-lambda
                                                              ((g$z$9437$RCJqu
                                                                 g$ids$9438$RCJqu)
                                                               ((case-lambda
                                                                  ((g$ids$9439$RCJqu
                                                                     g$z$9440$RCJqu)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9404$RCJqu
                                                                          g$ys$9433$RCJqu
                                                                          g$n$9407$RCJqu
                                                                          g$ids$9439$RCJqu)))
                                                                     (case-lambda
                                                                       ((g$ys$9443$RCJqu
                                                                          g$ids$9444$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ids$9445$RCJqu
                                                                              g$ys$9446$RCJqu)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9405$RCJqu
                                                                                   g$x$9431$RCJqu
                                                                                   (+ g$n$9407$RCJqu
                                                                                      '1)
                                                                                   g$ids$9445$RCJqu)))
                                                                              (case-lambda
                                                                                ((g$x$9449$RCJqu
                                                                                   g$ids$9450$RCJqu)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9451$RCJqu
                                                                                       g$x$9452$RCJqu)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9452$RCJqu
                                                                                         (reverse
                                                                                           g$ys$9446$RCJqu)
                                                                                         g$z$9440$RCJqu)
                                                                                       g$ids$9451$RCJqu)))
                                                                                  g$ids$9450$RCJqu
                                                                                  g$x$9449$RCJqu))))))
                                                                         g$ids$9444$RCJqu
                                                                         g$ys$9443$RCJqu))))))
                                                                g$ids$9438$RCJqu
                                                                g$z$9437$RCJqu))))))
                                                       g$ls/false$9426$RCJqu)
                                                     ((case-lambda
                                                        ((g$t$9453$RCJqu)
                                                         ((case-lambda
                                                            ((g$ls/false$9454$RCJqu)
                                                             (if g$ls/false$9454$RCJqu
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9455$RCJqu
                                                                      g$y$9456$RCJqu)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9405$RCJqu
                                                                           g$y$9456$RCJqu
                                                                           g$n$9407$RCJqu
                                                                           g$ids$9408$RCJqu)))
                                                                      (case-lambda
                                                                        ((g$y$9459$RCJqu
                                                                           g$ids$9460$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$ids$9461$RCJqu
                                                                               g$y$9462$RCJqu)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9405$RCJqu
                                                                                    g$x$9455$RCJqu
                                                                                    g$n$9407$RCJqu
                                                                                    g$ids$9461$RCJqu)))
                                                                               (case-lambda
                                                                                 ((g$x$9465$RCJqu
                                                                                    g$ids$9466$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9467$RCJqu
                                                                                        g$x$9468$RCJqu)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9468$RCJqu
                                                                                          g$y$9462$RCJqu)
                                                                                        g$ids$9467$RCJqu)))
                                                                                   g$ids$9466$RCJqu
                                                                                   g$x$9465$RCJqu))))))
                                                                          g$ids$9460$RCJqu
                                                                          g$y$9459$RCJqu))))))
                                                                 g$ls/false$9454$RCJqu)
                                                               ((case-lambda
                                                                  ((g$t$9469$RCJqu)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9470$RCJqu)
                                                                       (if g$ls/false$9470$RCJqu
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9408$RCJqu)))
                                                                           g$ls/false$9470$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$t$9471$RCJqu)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9472$RCJqu)
                                                                                 (if (if g$ls/false$9472$RCJqu
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9473$RCJqu)
                                                                                              (not (g$stx?$7556$RCJqu
                                                                                                     g$p$9473$RCJqu))))
                                                                                           g$ls/false$9472$RCJqu))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9474$RCJqu)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9405$RCJqu
                                                                                               g$p$9474$RCJqu
                                                                                               g$n$9407$RCJqu
                                                                                               g$ids$9408$RCJqu)))
                                                                                          (case-lambda
                                                                                            ((g$p$9477$RCJqu
                                                                                               g$ids$9478$RCJqu)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9479$RCJqu
                                                                                                   g$p$9480$RCJqu)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9480$RCJqu)
                                                                                                   g$ids$9479$RCJqu)))
                                                                                              g$ids$9478$RCJqu
                                                                                              g$p$9477$RCJqu))))))
                                                                                     g$ls/false$9472$RCJqu)
                                                                                   ((case-lambda
                                                                                      ((g$t$9481$RCJqu)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9482$RCJqu)
                                                                                           (if g$ls/false$9482$RCJqu
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9483$RCJqu)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7595$RCJqu
                                                                                                        g$datum$9483$RCJqu))
                                                                                                    g$ids$9408$RCJqu)))
                                                                                               g$ls/false$9482$RCJqu)
                                                                                             (g$syntax-violation$7968$RCJqu
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9481$RCJqu))))
                                                                                        (g$syntax-dispatch$7862$RCJqu
                                                                                          g$t$9481$RCJqu
                                                                                          'any))))
                                                                                    g$t$9471$RCJqu))))
                                                                              (g$syntax-dispatch$7862$RCJqu
                                                                                g$t$9471$RCJqu
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9469$RCJqu))))
                                                                    (g$syntax-dispatch$7862$RCJqu
                                                                      g$t$9469$RCJqu
                                                                      '()))))
                                                                g$t$9453$RCJqu))))
                                                          (g$syntax-dispatch$7862$RCJqu
                                                            g$t$9453$RCJqu
                                                            '(any . any)))))
                                                      g$t$9425$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$9425$RCJqu
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9413$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$9413$RCJqu
                                        '(any any)))))
                                  g$t$9409$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$9409$RCJqu
                              'any))))
                        g$p$9406$RCJqu)))))
          (g$cvt$9405$RCJqu g$pattern$9402$RCJqu '0 '())))))
   (g$syntax-dispatch$7862$RCJqu
     g$syntax-dispatch$11312$RCJqu
     (case-lambda
       ((g$e$9499$RCJqu g$p$9500$RCJqu)
        (letrec* ((g$stx^$9501$RCJqu
                    (case-lambda
                      ((g$e$9609$RCJqu
                         g$m*$9610$RCJqu
                         g$s*$9611$RCJqu
                         g$ae*$9612$RCJqu)
                       (if (if (null? g$m*$9610$RCJqu)
                             (if (null? g$s*$9611$RCJqu)
                               (begin '#f (null? g$ae*$9612$RCJqu))
                               '#f)
                             '#f)
                         g$e$9609$RCJqu
                         (g$mkstx$7572$RCJqu
                           g$e$9609$RCJqu
                           g$m*$9610$RCJqu
                           g$s*$9611$RCJqu
                           g$ae*$9612$RCJqu)))))
                  (g$match-each$9502$RCJqu
                    (case-lambda
                      ((g$e$9593$RCJqu
                         g$p$9594$RCJqu
                         g$m*$9595$RCJqu
                         g$s*$9596$RCJqu
                         g$ae*$9597$RCJqu)
                       (if (pair? g$e$9593$RCJqu)
                         ((case-lambda
                            ((g$first$9598$RCJqu)
                             (if g$first$9598$RCJqu
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9599$RCJqu)
                                     (if g$rest$9599$RCJqu
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9598$RCJqu
                                           g$rest$9599$RCJqu))
                                       '#f)))
                                  (g$match-each$9502$RCJqu
                                    (cdr g$e$9593$RCJqu)
                                    g$p$9594$RCJqu
                                    g$m*$9595$RCJqu
                                    g$s*$9596$RCJqu
                                    g$ae*$9597$RCJqu)))
                               '#f)))
                          (g$match$9508$RCJqu
                            (car g$e$9593$RCJqu)
                            g$p$9594$RCJqu
                            g$m*$9595$RCJqu
                            g$s*$9596$RCJqu
                            g$ae*$9597$RCJqu
                            '()))
                         (if (null? g$e$9593$RCJqu)
                           '()
                           (if (g$stx?$7556$RCJqu g$e$9593$RCJqu)
                             (if (not (g$top-marked?$7527$RCJqu
                                        g$m*$9595$RCJqu))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7571$RCJqu
                                        g$m*$9595$RCJqu
                                        g$s*$9596$RCJqu
                                        g$ae*$9597$RCJqu
                                        g$e$9593$RCJqu)))
                                   (case-lambda
                                     ((g$m*$9603$RCJqu
                                        g$s*$9604$RCJqu
                                        g$ae*$9605$RCJqu)
                                      ((case-lambda
                                         ((g$ae*$9606$RCJqu
                                            g$s*$9607$RCJqu
                                            g$m*$9608$RCJqu)
                                          (g$match-each$9502$RCJqu
                                            (g$stx-expr$7558$RCJqu
                                              g$e$9593$RCJqu)
                                            g$p$9594$RCJqu
                                            g$m*$9608$RCJqu
                                            g$s*$9607$RCJqu
                                            g$ae*$9606$RCJqu)))
                                       g$ae*$9605$RCJqu
                                       g$s*$9604$RCJqu
                                       g$m*$9603$RCJqu)))))
                               '#f)
                             (if (annotation? g$e$9593$RCJqu)
                               (g$match-each$9502$RCJqu
                                 (annotation-expression g$e$9593$RCJqu)
                                 g$p$9594$RCJqu
                                 g$m*$9595$RCJqu
                                 g$s*$9596$RCJqu
                                 g$ae*$9597$RCJqu)
                               '#f)))))))
                  (g$match-each+$9503$RCJqu
                    (case-lambda
                      ((g$e$9561$RCJqu
                         g$x-pat$9562$RCJqu
                         g$y-pat$9563$RCJqu
                         g$z-pat$9564$RCJqu
                         g$m*$9565$RCJqu
                         g$s*$9566$RCJqu
                         g$ae*$9567$RCJqu
                         g$r$9568$RCJqu)
                       ((letrec ((g$f$9569$RCJqu
                                   (case-lambda
                                     ((g$e$9570$RCJqu
                                        g$m*$9571$RCJqu
                                        g$s*$9572$RCJqu
                                        g$ae*$9573$RCJqu)
                                      (if (pair? g$e$9570$RCJqu)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9569$RCJqu
                                               (cdr g$e$9570$RCJqu)
                                               g$m*$9571$RCJqu
                                               g$s*$9572$RCJqu
                                               g$ae*$9573$RCJqu)))
                                          (case-lambda
                                            ((g$xr*$9577$RCJqu
                                               g$y-pat$9578$RCJqu
                                               g$r$9579$RCJqu)
                                             ((case-lambda
                                                ((g$r$9580$RCJqu
                                                   g$y-pat$9581$RCJqu
                                                   g$xr*$9582$RCJqu)
                                                 (if g$r$9580$RCJqu
                                                   (if (null?
                                                         g$y-pat$9581$RCJqu)
                                                     ((case-lambda
                                                        ((g$xr$9583$RCJqu)
                                                         (if g$xr$9583$RCJqu
                                                           (values
                                                             (cons
                                                               g$xr$9583$RCJqu
                                                               g$xr*$9582$RCJqu)
                                                             g$y-pat$9581$RCJqu
                                                             g$r$9580$RCJqu)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9508$RCJqu
                                                        (car g$e$9570$RCJqu)
                                                        g$x-pat$9562$RCJqu
                                                        g$m*$9571$RCJqu
                                                        g$s*$9572$RCJqu
                                                        g$ae*$9573$RCJqu
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9581$RCJqu)
                                                       (g$match$9508$RCJqu
                                                         (car g$e$9570$RCJqu)
                                                         (car g$y-pat$9581$RCJqu)
                                                         g$m*$9571$RCJqu
                                                         g$s*$9572$RCJqu
                                                         g$ae*$9573$RCJqu
                                                         g$r$9580$RCJqu)))
                                                   (values '#f '#f '#f))))
                                              g$r$9579$RCJqu
                                              g$y-pat$9578$RCJqu
                                              g$xr*$9577$RCJqu))))
                                        (if (g$stx?$7556$RCJqu g$e$9570$RCJqu)
                                          (if (g$top-marked?$7527$RCJqu
                                                g$m*$9571$RCJqu)
                                            (values
                                              '()
                                              g$y-pat$9563$RCJqu
                                              (g$match$9508$RCJqu
                                                g$e$9570$RCJqu
                                                g$z-pat$9564$RCJqu
                                                g$m*$9571$RCJqu
                                                g$s*$9572$RCJqu
                                                g$ae*$9573$RCJqu
                                                g$r$9568$RCJqu))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7571$RCJqu
                                                   g$m*$9571$RCJqu
                                                   g$s*$9572$RCJqu
                                                   g$ae*$9573$RCJqu
                                                   g$e$9570$RCJqu)))
                                              (case-lambda
                                                ((g$m*$9587$RCJqu
                                                   g$s*$9588$RCJqu
                                                   g$ae*$9589$RCJqu)
                                                 ((case-lambda
                                                    ((g$ae*$9590$RCJqu
                                                       g$s*$9591$RCJqu
                                                       g$m*$9592$RCJqu)
                                                     (g$f$9569$RCJqu
                                                       (g$stx-expr$7558$RCJqu
                                                         g$e$9570$RCJqu)
                                                       g$m*$9592$RCJqu
                                                       g$s*$9591$RCJqu
                                                       g$ae*$9590$RCJqu)))
                                                  g$ae*$9589$RCJqu
                                                  g$s*$9588$RCJqu
                                                  g$m*$9587$RCJqu)))))
                                          (if (annotation? g$e$9570$RCJqu)
                                            (g$f$9569$RCJqu
                                              (annotation-expression
                                                g$e$9570$RCJqu)
                                              g$m*$9571$RCJqu
                                              g$s*$9572$RCJqu
                                              g$ae*$9573$RCJqu)
                                            (values
                                              '()
                                              g$y-pat$9563$RCJqu
                                              (g$match$9508$RCJqu
                                                g$e$9570$RCJqu
                                                g$z-pat$9564$RCJqu
                                                g$m*$9571$RCJqu
                                                g$s*$9572$RCJqu
                                                g$ae*$9573$RCJqu
                                                g$r$9568$RCJqu)))))))))
                          g$f$9569$RCJqu)
                        g$e$9561$RCJqu
                        g$m*$9565$RCJqu
                        g$s*$9566$RCJqu
                        g$ae*$9567$RCJqu))))
                  (g$match-each-any$9504$RCJqu
                    (case-lambda
                      ((g$e$9547$RCJqu
                         g$m*$9548$RCJqu
                         g$s*$9549$RCJqu
                         g$ae*$9550$RCJqu)
                       (if (pair? g$e$9547$RCJqu)
                         ((case-lambda
                            ((g$l$9551$RCJqu)
                             (if g$l$9551$RCJqu
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9501$RCJqu
                                     (car g$e$9547$RCJqu)
                                     g$m*$9548$RCJqu
                                     g$s*$9549$RCJqu
                                     g$ae*$9550$RCJqu)
                                   g$l$9551$RCJqu))
                               '#f)))
                          (g$match-each-any$9504$RCJqu
                            (cdr g$e$9547$RCJqu)
                            g$m*$9548$RCJqu
                            g$s*$9549$RCJqu
                            g$ae*$9550$RCJqu))
                         (if (null? g$e$9547$RCJqu)
                           '()
                           (if (g$stx?$7556$RCJqu g$e$9547$RCJqu)
                             (if (not (g$top-marked?$7527$RCJqu
                                        g$m*$9548$RCJqu))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7571$RCJqu
                                        g$m*$9548$RCJqu
                                        g$s*$9549$RCJqu
                                        g$ae*$9550$RCJqu
                                        g$e$9547$RCJqu)))
                                   (case-lambda
                                     ((g$m*$9555$RCJqu
                                        g$s*$9556$RCJqu
                                        g$ae*$9557$RCJqu)
                                      ((case-lambda
                                         ((g$ae*$9558$RCJqu
                                            g$s*$9559$RCJqu
                                            g$m*$9560$RCJqu)
                                          (g$match-each-any$9504$RCJqu
                                            (g$stx-expr$7558$RCJqu
                                              g$e$9547$RCJqu)
                                            g$m*$9560$RCJqu
                                            g$s*$9559$RCJqu
                                            g$ae*$9558$RCJqu)))
                                       g$ae*$9557$RCJqu
                                       g$s*$9556$RCJqu
                                       g$m*$9555$RCJqu)))))
                               '#f)
                             (if (annotation? g$e$9547$RCJqu)
                               (g$match-each-any$9504$RCJqu
                                 (annotation-expression g$e$9547$RCJqu)
                                 g$m*$9548$RCJqu
                                 g$s*$9549$RCJqu
                                 g$ae*$9550$RCJqu)
                               '#f)))))))
                  (g$match-empty$9505$RCJqu
                    (case-lambda
                      ((g$p$9544$RCJqu g$r$9545$RCJqu)
                       (if (null? g$p$9544$RCJqu)
                         g$r$9545$RCJqu
                         (if (eq? g$p$9544$RCJqu '_)
                           g$r$9545$RCJqu
                           (if (eq? g$p$9544$RCJqu 'any)
                             (cons '() g$r$9545$RCJqu)
                             (if (pair? g$p$9544$RCJqu)
                               (g$match-empty$9505$RCJqu
                                 (car g$p$9544$RCJqu)
                                 (g$match-empty$9505$RCJqu
                                   (cdr g$p$9544$RCJqu)
                                   g$r$9545$RCJqu))
                               (if (eq? g$p$9544$RCJqu 'each-any)
                                 (cons '() g$r$9545$RCJqu)
                                 ((case-lambda
                                    ((g$t$9546$RCJqu)
                                     (if (eqv? g$t$9546$RCJqu 'each)
                                       (g$match-empty$9505$RCJqu
                                         (vector-ref g$p$9544$RCJqu '1)
                                         g$r$9545$RCJqu)
                                       (if (eqv? g$t$9546$RCJqu 'each+)
                                         (g$match-empty$9505$RCJqu
                                           (vector-ref g$p$9544$RCJqu '1)
                                           (g$match-empty$9505$RCJqu
                                             (reverse
                                               (vector-ref g$p$9544$RCJqu '2))
                                             (g$match-empty$9505$RCJqu
                                               (vector-ref g$p$9544$RCJqu '3)
                                               g$r$9545$RCJqu)))
                                         (if (memv
                                               g$t$9546$RCJqu
                                               '(free-id atom))
                                           g$r$9545$RCJqu
                                           (if (memv
                                                 g$t$9546$RCJqu
                                                 '(scheme-id atom))
                                             g$r$9545$RCJqu
                                             (if (eqv? g$t$9546$RCJqu 'vector)
                                               (g$match-empty$9505$RCJqu
                                                 (vector-ref g$p$9544$RCJqu '1)
                                                 g$r$9545$RCJqu)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9544$RCJqu))))))))
                                  (vector-ref g$p$9544$RCJqu '0))))))))))
                  (g$combine$9506$RCJqu
                    (case-lambda
                      ((g$r*$9542$RCJqu g$r$9543$RCJqu)
                       (if (null? (car g$r*$9542$RCJqu))
                         g$r$9543$RCJqu
                         (cons
                           (map car g$r*$9542$RCJqu)
                           (g$combine$9506$RCJqu
                             (map cdr g$r*$9542$RCJqu)
                             g$r$9543$RCJqu))))))
                  (g$match*$9507$RCJqu
                    (case-lambda
                      ((g$e$9524$RCJqu
                         g$p$9525$RCJqu
                         g$m*$9526$RCJqu
                         g$s*$9527$RCJqu
                         g$ae*$9528$RCJqu
                         g$r$9529$RCJqu)
                       (if (null? g$p$9525$RCJqu)
                         (if (null? g$e$9524$RCJqu)
                           (begin '#f g$r$9529$RCJqu)
                           '#f)
                         (if (pair? g$p$9525$RCJqu)
                           (if (pair? g$e$9524$RCJqu)
                             (begin
                               '#f
                               (g$match$9508$RCJqu
                                 (car g$e$9524$RCJqu)
                                 (car g$p$9525$RCJqu)
                                 g$m*$9526$RCJqu
                                 g$s*$9527$RCJqu
                                 g$ae*$9528$RCJqu
                                 (g$match$9508$RCJqu
                                   (cdr g$e$9524$RCJqu)
                                   (cdr g$p$9525$RCJqu)
                                   g$m*$9526$RCJqu
                                   g$s*$9527$RCJqu
                                   g$ae*$9528$RCJqu
                                   g$r$9529$RCJqu)))
                             '#f)
                           (if (eq? g$p$9525$RCJqu 'each-any)
                             ((case-lambda
                                ((g$l$9530$RCJqu)
                                 (if g$l$9530$RCJqu
                                   (begin
                                     '#f
                                     (cons g$l$9530$RCJqu g$r$9529$RCJqu))
                                   '#f)))
                              (g$match-each-any$9504$RCJqu
                                g$e$9524$RCJqu
                                g$m*$9526$RCJqu
                                g$s*$9527$RCJqu
                                g$ae*$9528$RCJqu))
                             ((case-lambda
                                ((g$t$9531$RCJqu)
                                 (if (eqv? g$t$9531$RCJqu 'each)
                                   (if (null? g$e$9524$RCJqu)
                                     (g$match-empty$9505$RCJqu
                                       (vector-ref g$p$9525$RCJqu '1)
                                       g$r$9529$RCJqu)
                                     ((case-lambda
                                        ((g$r*$9541$RCJqu)
                                         (if g$r*$9541$RCJqu
                                           (begin
                                             '#f
                                             (g$combine$9506$RCJqu
                                               g$r*$9541$RCJqu
                                               g$r$9529$RCJqu))
                                           '#f)))
                                      (g$match-each$9502$RCJqu
                                        g$e$9524$RCJqu
                                        (vector-ref g$p$9525$RCJqu '1)
                                        g$m*$9526$RCJqu
                                        g$s*$9527$RCJqu
                                        g$ae*$9528$RCJqu)))
                                   (if (eqv? g$t$9531$RCJqu 'free-id)
                                     (if (symbol? g$e$9524$RCJqu)
                                       (if (g$top-marked?$7527$RCJqu
                                             g$m*$9526$RCJqu)
                                         (if (g$free-id=?$7588$RCJqu
                                               (g$stx^$9501$RCJqu
                                                 g$e$9524$RCJqu
                                                 g$m*$9526$RCJqu
                                                 g$s*$9527$RCJqu
                                                 g$ae*$9528$RCJqu)
                                               (vector-ref g$p$9525$RCJqu '1))
                                           (begin '#f g$r$9529$RCJqu)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$9531$RCJqu 'scheme-id)
                                       (if (symbol? g$e$9524$RCJqu)
                                         (if (g$top-marked?$7527$RCJqu
                                               g$m*$9526$RCJqu)
                                           (if (g$free-id=?$7588$RCJqu
                                                 (g$stx^$9501$RCJqu
                                                   g$e$9524$RCJqu
                                                   g$m*$9526$RCJqu
                                                   g$s*$9527$RCJqu
                                                   g$ae*$9528$RCJqu)
                                                 (g$scheme-stx$7805$RCJqu
                                                   (vector-ref
                                                     g$p$9525$RCJqu
                                                     '1)))
                                             (begin '#f g$r$9529$RCJqu)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$9531$RCJqu 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9503$RCJqu
                                                g$e$9524$RCJqu
                                                (vector-ref g$p$9525$RCJqu '1)
                                                (vector-ref g$p$9525$RCJqu '2)
                                                (vector-ref g$p$9525$RCJqu '3)
                                                g$m*$9526$RCJqu
                                                g$s*$9527$RCJqu
                                                g$ae*$9528$RCJqu
                                                g$r$9529$RCJqu)))
                                           (case-lambda
                                             ((g$xr*$9535$RCJqu
                                                g$y-pat$9536$RCJqu
                                                g$r$9537$RCJqu)
                                              ((case-lambda
                                                 ((g$r$9538$RCJqu
                                                    g$y-pat$9539$RCJqu
                                                    g$xr*$9540$RCJqu)
                                                  (if g$r$9538$RCJqu
                                                    (if (null?
                                                          g$y-pat$9539$RCJqu)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9540$RCJqu)
                                                          (g$match-empty$9505$RCJqu
                                                            (vector-ref
                                                              g$p$9525$RCJqu
                                                              '1)
                                                            g$r$9538$RCJqu)
                                                          (g$combine$9506$RCJqu
                                                            g$xr*$9540$RCJqu
                                                            g$r$9538$RCJqu)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9537$RCJqu
                                               g$y-pat$9536$RCJqu
                                               g$xr*$9535$RCJqu))))
                                         (if (eqv? g$t$9531$RCJqu 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$9525$RCJqu '1)
                                                 (g$strip$7594$RCJqu
                                                   g$e$9524$RCJqu
                                                   g$m*$9526$RCJqu))
                                             (begin '#f g$r$9529$RCJqu)
                                             '#f)
                                           (if (eqv? g$t$9531$RCJqu 'vector)
                                             (if (vector? g$e$9524$RCJqu)
                                               (begin
                                                 '#f
                                                 (g$match$9508$RCJqu
                                                   (vector->list g$e$9524$RCJqu)
                                                   (vector-ref
                                                     g$p$9525$RCJqu
                                                     '1)
                                                   g$m*$9526$RCJqu
                                                   g$s*$9527$RCJqu
                                                   g$ae*$9528$RCJqu
                                                   g$r$9529$RCJqu))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9525$RCJqu)))))))))
                              (vector-ref g$p$9525$RCJqu '0))))))))
                  (g$match$9508$RCJqu
                    (case-lambda
                      ((g$e$9509$RCJqu
                         g$p$9510$RCJqu
                         g$m*$9511$RCJqu
                         g$s*$9512$RCJqu
                         g$ae*$9513$RCJqu
                         g$r$9514$RCJqu)
                       (if (not g$r$9514$RCJqu)
                         '#f
                         (if (eq? g$p$9510$RCJqu '_)
                           g$r$9514$RCJqu
                           (if (eq? g$p$9510$RCJqu 'any)
                             (cons
                               (g$stx^$9501$RCJqu
                                 g$e$9509$RCJqu
                                 g$m*$9511$RCJqu
                                 g$s*$9512$RCJqu
                                 g$ae*$9513$RCJqu)
                               g$r$9514$RCJqu)
                             (if (g$stx?$7556$RCJqu g$e$9509$RCJqu)
                               (if (not (g$top-marked?$7527$RCJqu
                                          g$m*$9511$RCJqu))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7571$RCJqu
                                          g$m*$9511$RCJqu
                                          g$s*$9512$RCJqu
                                          g$ae*$9513$RCJqu
                                          g$e$9509$RCJqu)))
                                     (case-lambda
                                       ((g$m*$9518$RCJqu
                                          g$s*$9519$RCJqu
                                          g$ae*$9520$RCJqu)
                                        ((case-lambda
                                           ((g$ae*$9521$RCJqu
                                              g$s*$9522$RCJqu
                                              g$m*$9523$RCJqu)
                                            (g$match$9508$RCJqu
                                              (g$stx-expr$7558$RCJqu
                                                g$e$9509$RCJqu)
                                              g$p$9510$RCJqu
                                              g$m*$9523$RCJqu
                                              g$s*$9522$RCJqu
                                              g$ae*$9521$RCJqu
                                              g$r$9514$RCJqu)))
                                         g$ae*$9520$RCJqu
                                         g$s*$9519$RCJqu
                                         g$m*$9518$RCJqu)))))
                                 '#f)
                               (if (annotation? g$e$9509$RCJqu)
                                 (g$match$9508$RCJqu
                                   (annotation-expression g$e$9509$RCJqu)
                                   g$p$9510$RCJqu
                                   g$m*$9511$RCJqu
                                   g$s*$9512$RCJqu
                                   g$ae*$9513$RCJqu
                                   g$r$9514$RCJqu)
                                 (g$match*$9507$RCJqu
                                   g$e$9509$RCJqu
                                   g$p$9510$RCJqu
                                   g$m*$9511$RCJqu
                                   g$s*$9512$RCJqu
                                   g$ae*$9513$RCJqu
                                   g$r$9514$RCJqu))))))))))
          (g$match$9508$RCJqu g$e$9499$RCJqu g$p$9500$RCJqu '() '() '() '())))))
   (g$ellipsis?$7863$RCJqu
     g$ellipsis?$11313$RCJqu
     (case-lambda
       ((g$x$9613$RCJqu)
        (if (g$id?$7584$RCJqu g$x$9613$RCJqu)
          (begin
            '#f
            (g$free-id=?$7588$RCJqu
              g$x$9613$RCJqu
              (g$scheme-stx$7805$RCJqu '...)))
          '#f))))
   (g$underscore?$7864$RCJqu
     g$underscore?$11314$RCJqu
     (case-lambda
       ((g$x$9614$RCJqu)
        (if (g$id?$7584$RCJqu g$x$9614$RCJqu)
          (begin
            '#f
            (g$free-id=?$7588$RCJqu
              g$x$9614$RCJqu
              (g$scheme-stx$7805$RCJqu '_)))
          '#f))))
   (g$verify-literals$7865$RCJqu
     g$verify-literals$11315$RCJqu
     (case-lambda
       ((g$lits$9615$RCJqu g$expr$9616$RCJqu)
        (for-each
          (case-lambda
            ((g$x$9617$RCJqu)
             (if ((case-lambda
                    ((g$t$9618$RCJqu)
                     (if g$t$9618$RCJqu
                       g$t$9618$RCJqu
                       ((case-lambda
                          ((g$t$9619$RCJqu)
                           (if g$t$9619$RCJqu
                             g$t$9619$RCJqu
                             (begin
                               '#f
                               (g$underscore?$7864$RCJqu g$x$9617$RCJqu)))))
                        (g$ellipsis?$7863$RCJqu g$x$9617$RCJqu)))))
                  (not (g$id?$7584$RCJqu g$x$9617$RCJqu)))
               (g$syntax-violation$7968$RCJqu
                 '#f
                 '"invalid literal"
                 g$expr$9616$RCJqu
                 g$x$9617$RCJqu)
               (void))))
          g$lits$9615$RCJqu))))
   (g$syntax-case-transformer$7866$RCJqu
     g$syntax-case-transformer$11316$RCJqu
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9620$RCJqu
                     (case-lambda
                       ((g$pvars$9677$RCJqu
                          g$expr$9678$RCJqu
                          g$y$9679$RCJqu
                          g$r$9680$RCJqu
                          g$mr$9681$RCJqu)
                        ((case-lambda
                           ((g$ids$9682$RCJqu g$levels$9683$RCJqu)
                            ((case-lambda
                               ((g$labels$9684$RCJqu g$new-vars$9685$RCJqu)
                                ((case-lambda
                                   ((g$body$9686$RCJqu)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7515$RCJqu
                                        '#f
                                        g$new-vars$9685$RCJqu
                                        g$body$9686$RCJqu)
                                      g$y$9679$RCJqu)))
                                 (g$chi-expr$7880$RCJqu
                                   (g$add-subst$7574$RCJqu
                                     (g$make-full-rib$7552$RCJqu
                                       g$ids$9682$RCJqu
                                       g$labels$9684$RCJqu)
                                     g$expr$9678$RCJqu)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9687$RCJqu
                                               g$var$9688$RCJqu
                                               g$level$9689$RCJqu)
                                             (cons
                                               g$label$9687$RCJqu
                                               (g$make-binding$7600$RCJqu
                                                 'syntax
                                                 (cons
                                                   g$var$9688$RCJqu
                                                   g$level$9689$RCJqu)))))
                                          g$labels$9684$RCJqu
                                          g$new-vars$9685$RCJqu
                                          (map cdr g$pvars$9677$RCJqu))
                                     g$r$9680$RCJqu)
                                   g$mr$9681$RCJqu))))
                             (map g$gen-label$7530$RCJqu g$ids$9682$RCJqu)
                             (map g$gen-lexical$7528$RCJqu g$ids$9682$RCJqu))))
                         (map car g$pvars$9677$RCJqu)
                         (map cdr g$pvars$9677$RCJqu)))))
                   (g$invalid-ids-error$9621$RCJqu
                     (case-lambda
                       ((g$id*$9671$RCJqu g$e$9672$RCJqu g$class$9673$RCJqu)
                        ((letrec ((g$find$9674$RCJqu
                                    (case-lambda
                                      ((g$id*$9675$RCJqu g$ok*$9676$RCJqu)
                                       (if (null? g$id*$9675$RCJqu)
                                         (g$syntax-violation$7968$RCJqu
                                           '#f
                                           '"invalid syntax"
                                           g$e$9672$RCJqu)
                                         (if (g$id?$7584$RCJqu
                                               (car g$id*$9675$RCJqu))
                                           (if (g$bound-id-member?$7591$RCJqu
                                                 (car g$id*$9675$RCJqu)
                                                 g$ok*$9676$RCJqu)
                                             (g$syntax-error$7965$RCJqu
                                               (car g$id*$9675$RCJqu)
                                               '"duplicate "
                                               g$class$9673$RCJqu)
                                             (g$find$9674$RCJqu
                                               (cdr g$id*$9675$RCJqu)
                                               (cons
                                                 (car g$id*$9675$RCJqu)
                                                 g$ok*$9676$RCJqu)))
                                           (g$syntax-error$7965$RCJqu
                                             (car g$id*$9675$RCJqu)
                                             '"invalid "
                                             g$class$9673$RCJqu)))))))
                           g$find$9674$RCJqu)
                         g$id*$9671$RCJqu
                         '()))))
                   (g$gen-clause$9622$RCJqu
                     (case-lambda
                       ((g$x$9651$RCJqu
                          g$keys$9652$RCJqu
                          g$clauses$9653$RCJqu
                          g$r$9654$RCJqu
                          g$mr$9655$RCJqu
                          g$pat$9656$RCJqu
                          g$fender$9657$RCJqu
                          g$expr$9658$RCJqu)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7861$RCJqu
                               g$pat$9656$RCJqu
                               g$keys$9652$RCJqu)))
                          (case-lambda
                            ((g$p$9661$RCJqu g$pvars$9662$RCJqu)
                             ((case-lambda
                                ((g$pvars$9663$RCJqu g$p$9664$RCJqu)
                                 (if (not (g$distinct-bound-ids?$7590$RCJqu
                                            (map car g$pvars$9663$RCJqu)))
                                   (g$invalid-ids-error$9621$RCJqu
                                     (map car g$pvars$9663$RCJqu)
                                     g$pat$9656$RCJqu
                                     '"pattern variable")
                                   (if (not (g$for-all$6012$RCJqu
                                              (case-lambda
                                                ((g$x$9665$RCJqu)
                                                 (not (g$ellipsis?$7863$RCJqu
                                                        (car g$x$9665$RCJqu)))))
                                              g$pvars$9663$RCJqu))
                                     (g$syntax-violation$7968$RCJqu
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9656$RCJqu)
                                     ((case-lambda
                                        ((g$y$9666$RCJqu)
                                         ((case-lambda
                                            ((g$test$9667$RCJqu)
                                             ((case-lambda
                                                ((g$conseq$9668$RCJqu)
                                                 ((case-lambda
                                                    ((g$altern$9669$RCJqu)
                                                     (list
                                                       (g$build-lambda$7515$RCJqu
                                                         '#f
                                                         (list g$y$9666$RCJqu)
                                                         (list
                                                           'if
                                                           g$test$9667$RCJqu
                                                           g$conseq$9668$RCJqu
                                                           g$altern$9669$RCJqu))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9651$RCJqu
                                                         (list
                                                           'quote
                                                           g$p$9664$RCJqu)))))
                                                  (g$gen-syntax-case$9623$RCJqu
                                                    g$x$9651$RCJqu
                                                    g$keys$9652$RCJqu
                                                    g$clauses$9653$RCJqu
                                                    g$r$9654$RCJqu
                                                    g$mr$9655$RCJqu))))
                                              (g$build-dispatch-call$9620$RCJqu
                                                g$pvars$9663$RCJqu
                                                g$expr$9658$RCJqu
                                                g$y$9666$RCJqu
                                                g$r$9654$RCJqu
                                                g$mr$9655$RCJqu))))
                                          (if (eq? g$fender$9657$RCJqu '#t)
                                            g$y$9666$RCJqu
                                            ((case-lambda
                                               ((g$call$9670$RCJqu)
                                                (list
                                                  'if
                                                  g$y$9666$RCJqu
                                                  g$call$9670$RCJqu
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9620$RCJqu
                                               g$pvars$9663$RCJqu
                                               g$fender$9657$RCJqu
                                               g$y$9666$RCJqu
                                               g$r$9654$RCJqu
                                               g$mr$9655$RCJqu))))))
                                      (g$gen-lexical$7528$RCJqu 'tmp))))))
                              g$pvars$9662$RCJqu
                              g$p$9661$RCJqu)))))))
                   (g$gen-syntax-case$9623$RCJqu
                     (case-lambda
                       ((g$x$9634$RCJqu
                          g$keys$9635$RCJqu
                          g$clauses$9636$RCJqu
                          g$r$9637$RCJqu
                          g$mr$9638$RCJqu)
                        (if (null? g$clauses$9636$RCJqu)
                          (list '(primitive syntax-error) g$x$9634$RCJqu)
                          ((case-lambda
                             ((g$t$9639$RCJqu)
                              ((case-lambda
                                 ((g$ls/false$9640$RCJqu)
                                  (if g$ls/false$9640$RCJqu
                                    (apply
                                      (case-lambda
                                        ((g$pat$9641$RCJqu g$expr$9642$RCJqu)
                                         (if (if (g$id?$7584$RCJqu
                                                   g$pat$9641$RCJqu)
                                               (if (not (g$bound-id-member?$7591$RCJqu
                                                          g$pat$9641$RCJqu
                                                          g$keys$9635$RCJqu))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7863$RCJqu
                                                          g$pat$9641$RCJqu)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7588$RCJqu
                                                 g$pat$9641$RCJqu
                                                 (g$scheme-stx$7805$RCJqu '_))
                                             (g$chi-expr$7880$RCJqu
                                               g$expr$9642$RCJqu
                                               g$r$9637$RCJqu
                                               g$mr$9638$RCJqu)
                                             ((case-lambda
                                                ((g$lab$9643$RCJqu
                                                   g$lex$9644$RCJqu)
                                                 ((case-lambda
                                                    ((g$body$9645$RCJqu)
                                                     (list
                                                       (g$build-lambda$7515$RCJqu
                                                         '#f
                                                         (list g$lex$9644$RCJqu)
                                                         g$body$9645$RCJqu)
                                                       g$x$9634$RCJqu)))
                                                  (g$chi-expr$7880$RCJqu
                                                    (g$add-subst$7574$RCJqu
                                                      (g$make-full-rib$7552$RCJqu
                                                        (list g$pat$9641$RCJqu)
                                                        (list g$lab$9643$RCJqu))
                                                      g$expr$9642$RCJqu)
                                                    (cons
                                                      (cons
                                                        g$lab$9643$RCJqu
                                                        (g$make-binding$7600$RCJqu
                                                          'syntax
                                                          (cons
                                                            g$lex$9644$RCJqu
                                                            '0)))
                                                      g$r$9637$RCJqu)
                                                    g$mr$9638$RCJqu))))
                                              (g$gen-label$7530$RCJqu
                                                g$pat$9641$RCJqu)
                                              (g$gen-lexical$7528$RCJqu
                                                g$pat$9641$RCJqu)))
                                           (g$gen-clause$9622$RCJqu
                                             g$x$9634$RCJqu
                                             g$keys$9635$RCJqu
                                             (cdr g$clauses$9636$RCJqu)
                                             g$r$9637$RCJqu
                                             g$mr$9638$RCJqu
                                             g$pat$9641$RCJqu
                                             '#t
                                             g$expr$9642$RCJqu))))
                                      g$ls/false$9640$RCJqu)
                                    ((case-lambda
                                       ((g$t$9646$RCJqu)
                                        ((case-lambda
                                           ((g$ls/false$9647$RCJqu)
                                            (if g$ls/false$9647$RCJqu
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9648$RCJqu
                                                     g$fender$9649$RCJqu
                                                     g$expr$9650$RCJqu)
                                                   (g$gen-clause$9622$RCJqu
                                                     g$x$9634$RCJqu
                                                     g$keys$9635$RCJqu
                                                     (cdr g$clauses$9636$RCJqu)
                                                     g$r$9637$RCJqu
                                                     g$mr$9638$RCJqu
                                                     g$pat$9648$RCJqu
                                                     g$fender$9649$RCJqu
                                                     g$expr$9650$RCJqu)))
                                                g$ls/false$9647$RCJqu)
                                              (g$syntax-violation$7968$RCJqu
                                                '#f
                                                '"invalid syntax"
                                                g$t$9646$RCJqu))))
                                         (g$syntax-dispatch$7862$RCJqu
                                           g$t$9646$RCJqu
                                           '(any any any)))))
                                     g$t$9639$RCJqu))))
                               (g$syntax-dispatch$7862$RCJqu
                                 g$t$9639$RCJqu
                                 '(any any)))))
                           (car g$clauses$9636$RCJqu)))))))
           (case-lambda
             ((g$e$9624$RCJqu g$r$9625$RCJqu g$mr$9626$RCJqu)
              ((case-lambda
                 ((g$t$9627$RCJqu)
                  ((case-lambda
                     ((g$ls/false$9628$RCJqu)
                      (if g$ls/false$9628$RCJqu
                        (apply
                          (case-lambda
                            ((g$expr$9629$RCJqu
                               g$keys$9630$RCJqu
                               g$clauses$9631$RCJqu)
                             (begin
                               (g$verify-literals$7865$RCJqu
                                 g$keys$9630$RCJqu
                                 g$e$9624$RCJqu)
                               ((case-lambda
                                  ((g$x$9632$RCJqu)
                                   ((case-lambda
                                      ((g$body$9633$RCJqu)
                                       (list
                                         (g$build-lambda$7515$RCJqu
                                           '#f
                                           (list g$x$9632$RCJqu)
                                           g$body$9633$RCJqu)
                                         (g$chi-expr$7880$RCJqu
                                           g$expr$9629$RCJqu
                                           g$r$9625$RCJqu
                                           g$mr$9626$RCJqu))))
                                    (g$gen-syntax-case$9623$RCJqu
                                      g$x$9632$RCJqu
                                      g$keys$9630$RCJqu
                                      g$clauses$9631$RCJqu
                                      g$r$9625$RCJqu
                                      g$mr$9626$RCJqu))))
                                (g$gen-lexical$7528$RCJqu 'tmp)))))
                          g$ls/false$9628$RCJqu)
                        (g$syntax-violation$7968$RCJqu
                          '#f
                          '"invalid syntax"
                          g$t$9627$RCJqu))))
                   (g$syntax-dispatch$7862$RCJqu
                     g$t$9627$RCJqu
                     '(_ any each-any . each-any)))))
               g$e$9624$RCJqu))))))))
   (g$ellipsis-map$7867$RCJqu
     g$ellipsis-map$11317$RCJqu
     (case-lambda
       ((g$proc$9690$RCJqu g$ls$9691$RCJqu . g$ls*$9692$RCJqu)
        (letrec* ((g$who$9693$RCJqu '...))
          (begin
            (if (list? g$ls$9691$RCJqu)
              (void)
              (assertion-violation
                g$who$9693$RCJqu
                '"not a list"
                g$ls$9691$RCJqu))
            (if (null? g$ls*$9692$RCJqu)
              (void)
              ((case-lambda
                 ((g$n$9694$RCJqu)
                  (for-each
                    (case-lambda
                      ((g$x$9695$RCJqu)
                       (begin
                         (if (list? g$x$9695$RCJqu)
                           (void)
                           (assertion-violation
                             g$who$9693$RCJqu
                             '"not a list"
                             g$x$9695$RCJqu))
                         (if (= (length g$x$9695$RCJqu) g$n$9694$RCJqu)
                           (void)
                           (assertion-violation
                             g$who$9693$RCJqu
                             '"length mismatch"
                             g$ls$9691$RCJqu
                             g$x$9695$RCJqu)))))
                    g$ls*$9692$RCJqu)))
               (length g$ls$9691$RCJqu)))
            (apply map g$proc$9690$RCJqu g$ls$9691$RCJqu g$ls*$9692$RCJqu))))))
   (g$syntax-transformer$7868$RCJqu
     g$syntax-transformer$11318$RCJqu
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9696$RCJqu
                     (case-lambda
                       ((g$src$9756$RCJqu
                          g$e$9757$RCJqu
                          g$r$9758$RCJqu
                          g$maps$9759$RCJqu
                          g$ellipsis?$9760$RCJqu
                          g$vec?$9761$RCJqu)
                        ((case-lambda
                           ((g$t$9762$RCJqu)
                            ((case-lambda
                               ((g$ls/false$9763$RCJqu)
                                (if (if g$ls/false$9763$RCJqu
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9764$RCJqu)
                                             (g$ellipsis?$9760$RCJqu
                                               g$dots$9764$RCJqu)))
                                          g$ls/false$9763$RCJqu))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9765$RCJqu)
                                       (g$syntax-violation$7968$RCJqu
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9756$RCJqu)))
                                    g$ls/false$9763$RCJqu)
                                  ((case-lambda
                                     ((g$t$9766$RCJqu)
                                      ((case-lambda
                                         ((g$ls/false$9767$RCJqu)
                                          (if (if g$ls/false$9767$RCJqu
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9768$RCJqu)
                                                       (g$id?$7584$RCJqu
                                                         g$id$9768$RCJqu)))
                                                    g$ls/false$9767$RCJqu))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9769$RCJqu)
                                                 ((case-lambda
                                                    ((g$label$9770$RCJqu)
                                                     ((case-lambda
                                                        ((g$b$9771$RCJqu)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7601$RCJqu
                                                                        g$b$9771$RCJqu)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9774$RCJqu)
                                                                        (g$gen-ref$9697$RCJqu
                                                                          g$src$9756$RCJqu
                                                                          (car g$var.lev$9774$RCJqu)
                                                                          (cdr g$var.lev$9774$RCJqu)
                                                                          g$maps$9759$RCJqu)))
                                                                     (g$binding-value$7602$RCJqu
                                                                       g$b$9771$RCJqu))))
                                                                 (case-lambda
                                                                   ((g$var$9775$RCJqu
                                                                      g$maps$9776$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$maps$9777$RCJqu
                                                                          g$var$9778$RCJqu)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9778$RCJqu)
                                                                          g$maps$9777$RCJqu)))
                                                                     g$maps$9776$RCJqu
                                                                     g$var$9775$RCJqu))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9757$RCJqu)
                                                                 g$maps$9759$RCJqu)))))))
                                                      (g$label->binding$7599$RCJqu
                                                        g$label$9770$RCJqu
                                                        g$r$9758$RCJqu))))
                                                  (g$id->label$7597$RCJqu
                                                    g$e$9757$RCJqu))))
                                              g$ls/false$9767$RCJqu)
                                            ((case-lambda
                                               ((g$t$9779$RCJqu)
                                                ((case-lambda
                                                   ((g$ls/false$9780$RCJqu)
                                                    (if (if g$ls/false$9780$RCJqu
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9781$RCJqu
                                                                   g$e$9782$RCJqu)
                                                                 (g$ellipsis?$9760$RCJqu
                                                                   g$dots$9781$RCJqu)))
                                                              g$ls/false$9780$RCJqu))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9783$RCJqu
                                                             g$e$9784$RCJqu)
                                                           (if g$vec?$9761$RCJqu
                                                             (g$syntax-violation$7968$RCJqu
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9756$RCJqu)
                                                             (g$gen-syntax$9696$RCJqu
                                                               g$src$9756$RCJqu
                                                               g$e$9784$RCJqu
                                                               g$r$9758$RCJqu
                                                               g$maps$9759$RCJqu
                                                               (case-lambda
                                                                 ((g$x$9785$RCJqu)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9780$RCJqu)
                                                      ((case-lambda
                                                         ((g$t$9786$RCJqu)
                                                          ((case-lambda
                                                             ((g$ls/false$9787$RCJqu)
                                                              (if (if g$ls/false$9787$RCJqu
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9788$RCJqu
                                                                             g$dots$9789$RCJqu
                                                                             g$y$9790$RCJqu)
                                                                           (g$ellipsis?$9760$RCJqu
                                                                             g$dots$9789$RCJqu)))
                                                                        g$ls/false$9787$RCJqu))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9791$RCJqu
                                                                       g$dots$9792$RCJqu
                                                                       g$y$9793$RCJqu)
                                                                     ((letrec ((g$f$9794$RCJqu
                                                                                 (case-lambda
                                                                                   ((g$y$9795$RCJqu
                                                                                      g$k$9796$RCJqu)
                                                                                    ((case-lambda
                                                                                       ((g$t$9797$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9798$RCJqu)
                                                                                            (if g$ls/false$9798$RCJqu
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9796$RCJqu
                                                                                                     g$maps$9759$RCJqu)))
                                                                                                g$ls/false$9798$RCJqu)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9799$RCJqu)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9800$RCJqu)
                                                                                                      (if (if g$ls/false$9800$RCJqu
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9801$RCJqu
                                                                                                                     g$y$9802$RCJqu)
                                                                                                                   (g$ellipsis?$9760$RCJqu
                                                                                                                     g$dots$9801$RCJqu)))
                                                                                                                g$ls/false$9800$RCJqu))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9803$RCJqu
                                                                                                               g$y$9804$RCJqu)
                                                                                                             (g$f$9794$RCJqu
                                                                                                               g$y$9804$RCJqu
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9805$RCJqu)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9796$RCJqu
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9805$RCJqu))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9808$RCJqu
                                                                                                                         g$maps$9809$RCJqu)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9810$RCJqu
                                                                                                                             g$x$9811$RCJqu)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9810$RCJqu))
                                                                                                                             (g$syntax-violation$7968$RCJqu
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9756$RCJqu)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9699$RCJqu
                                                                                                                                 g$x$9811$RCJqu
                                                                                                                                 (car g$maps$9810$RCJqu))
                                                                                                                               (cdr g$maps$9810$RCJqu)))))
                                                                                                                        g$maps$9809$RCJqu
                                                                                                                        g$x$9808$RCJqu)))))))))
                                                                                                          g$ls/false$9800$RCJqu)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9812$RCJqu)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9813$RCJqu)
                                                                                                                (if g$ls/false$9813$RCJqu
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9696$RCJqu
                                                                                                                              g$src$9756$RCJqu
                                                                                                                              g$y$9795$RCJqu
                                                                                                                              g$r$9758$RCJqu
                                                                                                                              g$maps$9759$RCJqu
                                                                                                                              g$ellipsis?$9760$RCJqu
                                                                                                                              g$vec?$9761$RCJqu)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9816$RCJqu
                                                                                                                              g$maps$9817$RCJqu)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9818$RCJqu
                                                                                                                                  g$y$9819$RCJqu)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9796$RCJqu
                                                                                                                                       g$maps$9818$RCJqu)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9822$RCJqu
                                                                                                                                       g$maps$9823$RCJqu)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9824$RCJqu
                                                                                                                                           g$x$9825$RCJqu)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9698$RCJqu
                                                                                                                                             g$x$9825$RCJqu
                                                                                                                                             g$y$9819$RCJqu)
                                                                                                                                           g$maps$9824$RCJqu)))
                                                                                                                                      g$maps$9823$RCJqu
                                                                                                                                      g$x$9822$RCJqu))))))
                                                                                                                             g$maps$9817$RCJqu
                                                                                                                             g$y$9816$RCJqu))))))
                                                                                                                    g$ls/false$9813$RCJqu)
                                                                                                                  (g$syntax-violation$7968$RCJqu
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9812$RCJqu))))
                                                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                                                               g$t$9812$RCJqu
                                                                                                               '_))))
                                                                                                         g$t$9799$RCJqu))))
                                                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                                                     g$t$9799$RCJqu
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9797$RCJqu))))
                                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                                           g$t$9797$RCJqu
                                                                                           '()))))
                                                                                     g$y$9795$RCJqu)))))
                                                                        g$f$9794$RCJqu)
                                                                      g$y$9793$RCJqu
                                                                      (case-lambda
                                                                        ((g$maps$9826$RCJqu)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9696$RCJqu
                                                                                g$src$9756$RCJqu
                                                                                g$x$9791$RCJqu
                                                                                g$r$9758$RCJqu
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9826$RCJqu)
                                                                                g$ellipsis?$9760$RCJqu
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9829$RCJqu
                                                                                g$maps$9830$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$maps$9831$RCJqu
                                                                                    g$x$9832$RCJqu)
                                                                                  (if (null?
                                                                                        (car g$maps$9831$RCJqu))
                                                                                    (g$syntax-violation$7968$RCJqu
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9756$RCJqu)
                                                                                    (values
                                                                                      (g$gen-map$9700$RCJqu
                                                                                        g$x$9832$RCJqu
                                                                                        (car g$maps$9831$RCJqu))
                                                                                      (cdr g$maps$9831$RCJqu)))))
                                                                               g$maps$9830$RCJqu
                                                                               g$x$9829$RCJqu)))))))))
                                                                  g$ls/false$9787$RCJqu)
                                                                ((case-lambda
                                                                   ((g$t$9833$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9834$RCJqu)
                                                                        (if g$ls/false$9834$RCJqu
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9835$RCJqu
                                                                                 g$y$9836$RCJqu)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9696$RCJqu
                                                                                      g$src$9756$RCJqu
                                                                                      g$x$9835$RCJqu
                                                                                      g$r$9758$RCJqu
                                                                                      g$maps$9759$RCJqu
                                                                                      g$ellipsis?$9760$RCJqu
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9839$RCJqu
                                                                                      g$maps$9840$RCJqu)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9841$RCJqu
                                                                                          g$xnew$9842$RCJqu)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9696$RCJqu
                                                                                               g$src$9756$RCJqu
                                                                                               g$y$9836$RCJqu
                                                                                               g$r$9758$RCJqu
                                                                                               g$maps$9841$RCJqu
                                                                                               g$ellipsis?$9760$RCJqu
                                                                                               g$vec?$9761$RCJqu)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9845$RCJqu
                                                                                               g$maps$9846$RCJqu)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9847$RCJqu
                                                                                                   g$ynew$9848$RCJqu)
                                                                                                 (values
                                                                                                   (g$gen-cons$9701$RCJqu
                                                                                                     g$e$9757$RCJqu
                                                                                                     g$x$9835$RCJqu
                                                                                                     g$y$9836$RCJqu
                                                                                                     g$xnew$9842$RCJqu
                                                                                                     g$ynew$9848$RCJqu)
                                                                                                   g$maps$9847$RCJqu)))
                                                                                              g$maps$9846$RCJqu
                                                                                              g$ynew$9845$RCJqu))))))
                                                                                     g$maps$9840$RCJqu
                                                                                     g$xnew$9839$RCJqu))))))
                                                                            g$ls/false$9834$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$t$9849$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9850$RCJqu)
                                                                                  (if g$ls/false$9850$RCJqu
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9851$RCJqu)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9696$RCJqu
                                                                                                g$src$9756$RCJqu
                                                                                                g$ls$9851$RCJqu
                                                                                                g$r$9758$RCJqu
                                                                                                g$maps$9759$RCJqu
                                                                                                g$ellipsis?$9760$RCJqu
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9854$RCJqu
                                                                                                g$maps$9855$RCJqu)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9856$RCJqu
                                                                                                    g$lsnew$9857$RCJqu)
                                                                                                  (values
                                                                                                    (g$gen-vector$9702$RCJqu
                                                                                                      g$e$9757$RCJqu
                                                                                                      g$ls$9851$RCJqu
                                                                                                      g$lsnew$9857$RCJqu)
                                                                                                    g$maps$9856$RCJqu)))
                                                                                               g$maps$9855$RCJqu
                                                                                               g$lsnew$9854$RCJqu))))))
                                                                                      g$ls/false$9850$RCJqu)
                                                                                    ((case-lambda
                                                                                       ((g$t$9858$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9859$RCJqu)
                                                                                            (if g$ls/false$9859$RCJqu
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9757$RCJqu)
                                                                                                     g$maps$9759$RCJqu)))
                                                                                                g$ls/false$9859$RCJqu)
                                                                                              (g$syntax-violation$7968$RCJqu
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9858$RCJqu))))
                                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                                           g$t$9858$RCJqu
                                                                                           '_))))
                                                                                     g$t$9849$RCJqu))))
                                                                               (g$syntax-dispatch$7862$RCJqu
                                                                                 g$t$9849$RCJqu
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9833$RCJqu))))
                                                                     (g$syntax-dispatch$7862$RCJqu
                                                                       g$t$9833$RCJqu
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9786$RCJqu))))
                                                           (g$syntax-dispatch$7862$RCJqu
                                                             g$t$9786$RCJqu
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9779$RCJqu))))
                                                 (g$syntax-dispatch$7862$RCJqu
                                                   g$t$9779$RCJqu
                                                   '(any any)))))
                                             g$t$9766$RCJqu))))
                                       (g$syntax-dispatch$7862$RCJqu
                                         g$t$9766$RCJqu
                                         'any))))
                                   g$t$9762$RCJqu))))
                             (g$syntax-dispatch$7862$RCJqu
                               g$t$9762$RCJqu
                               'any))))
                         g$e$9757$RCJqu))))
                   (g$gen-ref$9697$RCJqu
                     (case-lambda
                       ((g$src$9743$RCJqu
                          g$var$9744$RCJqu
                          g$level$9745$RCJqu
                          g$maps$9746$RCJqu)
                        (if (= g$level$9745$RCJqu '0)
                          (values g$var$9744$RCJqu g$maps$9746$RCJqu)
                          (if (null? g$maps$9746$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9743$RCJqu)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9697$RCJqu
                                   g$src$9743$RCJqu
                                   g$var$9744$RCJqu
                                   (- g$level$9745$RCJqu '1)
                                   (cdr g$maps$9746$RCJqu))))
                              (case-lambda
                                ((g$outer-var$9749$RCJqu
                                   g$outer-maps$9750$RCJqu)
                                 ((case-lambda
                                    ((g$outer-maps$9751$RCJqu
                                       g$outer-var$9752$RCJqu)
                                     ((case-lambda
                                        ((g$t$9753$RCJqu)
                                         (if g$t$9753$RCJqu
                                           ((case-lambda
                                              ((g$b$9754$RCJqu)
                                               (values
                                                 (cdr g$b$9754$RCJqu)
                                                 g$maps$9746$RCJqu)))
                                            g$t$9753$RCJqu)
                                           ((case-lambda
                                              ((g$inner-var$9755$RCJqu)
                                               (values
                                                 g$inner-var$9755$RCJqu
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9752$RCJqu
                                                       g$inner-var$9755$RCJqu)
                                                     (car g$maps$9746$RCJqu))
                                                   g$outer-maps$9751$RCJqu))))
                                            (g$gen-lexical$7528$RCJqu 'tmp)))))
                                      (assq
                                        g$outer-var$9752$RCJqu
                                        (car g$maps$9746$RCJqu)))))
                                  g$outer-maps$9750$RCJqu
                                  g$outer-var$9749$RCJqu)))))))))
                   (g$gen-append$9698$RCJqu
                     (case-lambda
                       ((g$x$9741$RCJqu g$y$9742$RCJqu)
                        (if (equal? g$y$9742$RCJqu ''())
                          g$x$9741$RCJqu
                          (list 'append g$x$9741$RCJqu g$y$9742$RCJqu)))))
                   (g$gen-mappend$9699$RCJqu
                     (case-lambda
                       ((g$e$9739$RCJqu g$map-env$9740$RCJqu)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9700$RCJqu
                            g$e$9739$RCJqu
                            g$map-env$9740$RCJqu)))))
                   (g$gen-map$9700$RCJqu
                     (case-lambda
                       ((g$e$9730$RCJqu g$map-env$9731$RCJqu)
                        ((case-lambda
                           ((g$formals$9732$RCJqu g$actuals$9733$RCJqu)
                            (if (eq? (car g$e$9730$RCJqu) 'ref)
                              (car g$actuals$9733$RCJqu)
                              (if (g$for-all$6012$RCJqu
                                    (case-lambda
                                      ((g$x$9734$RCJqu)
                                       (if (eq? (car g$x$9734$RCJqu) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5543$RCJqu g$x$9734$RCJqu)
                                             g$formals$9732$RCJqu))
                                         '#f)))
                                    (cdr g$e$9730$RCJqu))
                                ((case-lambda
                                   ((g$args$9735$RCJqu)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9730$RCJqu))
                                        g$args$9735$RCJqu))))
                                 (map ((case-lambda
                                         ((g$r$9736$RCJqu)
                                          (case-lambda
                                            ((g$x$9737$RCJqu)
                                             (cdr (assq
                                                    (g$cadr$5543$RCJqu
                                                      g$x$9737$RCJqu)
                                                    g$r$9736$RCJqu))))))
                                       (map cons
                                            g$formals$9732$RCJqu
                                            g$actuals$9733$RCJqu))
                                      (cdr g$e$9730$RCJqu)))
                                (g$cons*$6014$RCJqu
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9732$RCJqu
                                    g$e$9730$RCJqu)
                                  g$actuals$9733$RCJqu)))))
                         (map cdr g$map-env$9731$RCJqu)
                         (map (case-lambda
                                ((g$x$9738$RCJqu)
                                 (list 'ref (car g$x$9738$RCJqu))))
                              g$map-env$9731$RCJqu)))))
                   (g$gen-cons$9701$RCJqu
                     (case-lambda
                       ((g$e$9722$RCJqu
                          g$x$9723$RCJqu
                          g$y$9724$RCJqu
                          g$xnew$9725$RCJqu
                          g$ynew$9726$RCJqu)
                        ((case-lambda
                           ((g$t$9727$RCJqu)
                            (if (eqv? g$t$9727$RCJqu 'quote)
                              (if (eq? (car g$xnew$9725$RCJqu) 'quote)
                                ((case-lambda
                                   ((g$xnew$9728$RCJqu g$ynew$9729$RCJqu)
                                    (if (if (eq? g$xnew$9728$RCJqu
                                                 g$x$9723$RCJqu)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9729$RCJqu
                                                 g$y$9724$RCJqu))
                                          '#f)
                                      (list 'quote g$e$9722$RCJqu)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9728$RCJqu
                                          g$ynew$9729$RCJqu)))))
                                 (g$cadr$5543$RCJqu g$xnew$9725$RCJqu)
                                 (g$cadr$5543$RCJqu g$ynew$9726$RCJqu))
                                (if (null?
                                      (g$cadr$5543$RCJqu g$ynew$9726$RCJqu))
                                  (list 'list g$xnew$9725$RCJqu)
                                  (list
                                    'cons
                                    g$xnew$9725$RCJqu
                                    g$ynew$9726$RCJqu)))
                              (if (eqv? g$t$9727$RCJqu 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9725$RCJqu
                                    (cdr g$ynew$9726$RCJqu)))
                                (list
                                  'cons
                                  g$xnew$9725$RCJqu
                                  g$ynew$9726$RCJqu)))))
                         (car g$ynew$9726$RCJqu)))))
                   (g$gen-vector$9702$RCJqu
                     (case-lambda
                       ((g$e$9719$RCJqu g$ls$9720$RCJqu g$lsnew$9721$RCJqu)
                        (if (eq? (car g$lsnew$9721$RCJqu) 'quote)
                          (if (eq? (g$cadr$5543$RCJqu g$lsnew$9721$RCJqu)
                                   g$ls$9720$RCJqu)
                            (list 'quote g$e$9719$RCJqu)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5543$RCJqu g$lsnew$9721$RCJqu))))
                          (if (eq? (car g$lsnew$9721$RCJqu) 'list)
                            (cons 'vector (cdr g$lsnew$9721$RCJqu))
                            (list 'list->vector g$lsnew$9721$RCJqu))))))
                   (g$regen$9703$RCJqu
                     (case-lambda
                       ((g$x$9716$RCJqu)
                        ((case-lambda
                           ((g$t$9717$RCJqu)
                            (if (eqv? g$t$9717$RCJqu 'ref)
                              (g$cadr$5543$RCJqu g$x$9716$RCJqu)
                              (if (eqv? g$t$9717$RCJqu 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$5543$RCJqu g$x$9716$RCJqu))
                                (if (eqv? g$t$9717$RCJqu 'quote)
                                  (list
                                    'quote
                                    (g$cadr$5543$RCJqu g$x$9716$RCJqu))
                                  (if (eqv? g$t$9717$RCJqu 'lambda)
                                    (g$build-lambda$7515$RCJqu
                                      '#f
                                      (g$cadr$5543$RCJqu g$x$9716$RCJqu)
                                      (g$regen$9703$RCJqu
                                        (g$caddr$5549$RCJqu g$x$9716$RCJqu)))
                                    (if (eqv? g$t$9717$RCJqu 'map)
                                      ((case-lambda
                                         ((g$ls$9718$RCJqu)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9718$RCJqu)))
                                       (map g$regen$9703$RCJqu
                                            (cdr g$x$9716$RCJqu)))
                                      (cons
                                        (list 'primitive (car g$x$9716$RCJqu))
                                        (map g$regen$9703$RCJqu
                                             (cdr g$x$9716$RCJqu))))))))))
                         (car g$x$9716$RCJqu))))))
           (case-lambda
             ((g$e$9704$RCJqu g$r$9705$RCJqu g$mr$9706$RCJqu)
              ((case-lambda
                 ((g$t$9707$RCJqu)
                  ((case-lambda
                     ((g$ls/false$9708$RCJqu)
                      (if g$ls/false$9708$RCJqu
                        (apply
                          (case-lambda
                            ((g$x$9709$RCJqu)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9696$RCJqu
                                    g$e$9704$RCJqu
                                    g$x$9709$RCJqu
                                    g$r$9705$RCJqu
                                    '()
                                    g$ellipsis?$7863$RCJqu
                                    '#f)))
                               (case-lambda
                                 ((g$e$9712$RCJqu g$maps$9713$RCJqu)
                                  ((case-lambda
                                     ((g$maps$9714$RCJqu g$e$9715$RCJqu)
                                      (g$regen$9703$RCJqu g$e$9715$RCJqu)))
                                   g$maps$9713$RCJqu
                                   g$e$9712$RCJqu))))))
                          g$ls/false$9708$RCJqu)
                        (g$syntax-violation$7968$RCJqu
                          '#f
                          '"invalid syntax"
                          g$t$9707$RCJqu))))
                   (g$syntax-dispatch$7862$RCJqu g$t$9707$RCJqu '(_ any)))))
               g$e$9704$RCJqu))))))))
   (g$core-macro-transformer$7869$RCJqu
     g$core-macro-transformer$11319$RCJqu
     (case-lambda
       ((g$name$9860$RCJqu)
        ((case-lambda
           ((g$t$9861$RCJqu)
            (if (eqv? g$t$9861$RCJqu 'quote)
              g$quote-transformer$7822$RCJqu
              (if (eqv? g$t$9861$RCJqu 'lambda)
                g$lambda-transformer$7824$RCJqu
                (if (eqv? g$t$9861$RCJqu 'case-lambda)
                  g$case-lambda-transformer$7823$RCJqu
                  (if (eqv? g$t$9861$RCJqu 'letrec)
                    g$letrec-transformer$7812$RCJqu
                    (if (eqv? g$t$9861$RCJqu 'letrec*)
                      g$letrec*-transformer$7813$RCJqu
                      (if (eqv? g$t$9861$RCJqu 'case)
                        g$case-transformer$7821$RCJqu
                        (if (eqv? g$t$9861$RCJqu 'if)
                          g$if-transformer$7820$RCJqu
                          (if (eqv? g$t$9861$RCJqu 'when)
                            g$when-transformer$7818$RCJqu
                            (if (eqv? g$t$9861$RCJqu 'unless)
                              g$unless-transformer$7819$RCJqu
                              (if (eqv? g$t$9861$RCJqu 'parameterize)
                                g$parameterize-transformer$7859$RCJqu
                                (if (eqv? g$t$9861$RCJqu 'foreign-call)
                                  g$foreign-call-transformer$7860$RCJqu
                                  (if (eqv? g$t$9861$RCJqu 'syntax-case)
                                    g$syntax-case-transformer$7866$RCJqu
                                    (if (eqv? g$t$9861$RCJqu 'syntax)
                                      g$syntax-transformer$7868$RCJqu
                                      (if (eqv? g$t$9861$RCJqu 'type-descriptor)
                                        g$type-descriptor-transformer$7815$RCJqu
                                        (if (eqv?
                                              g$t$9861$RCJqu
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7816$RCJqu
                                          (if (eqv?
                                                g$t$9861$RCJqu
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7817$RCJqu
                                            (if (eqv?
                                                  g$t$9861$RCJqu
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7814$RCJqu
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9860$RCJqu))))))))))))))))))))
         g$name$9860$RCJqu))))
   (g$file-options-macro$7870$RCJqu
     g$file-options-macro$11320$RCJqu
     (case-lambda
       ((g$x$9862$RCJqu)
        ((case-lambda
           ((g$t$9863$RCJqu)
            ((case-lambda
               ((g$ls/false$9864$RCJqu)
                (if (if g$ls/false$9864$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9865$RCJqu)
                             (if (g$for-all$6012$RCJqu
                                   g$id?$7584$RCJqu
                                   g$opt*$9865$RCJqu)
                               (begin
                                 '#f
                                 (g$file-options-spec$6853$RCJqu
                                   (map g$id->sym$7585$RCJqu
                                        g$opt*$9865$RCJqu)))
                               '#f)))
                          g$ls/false$9864$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9866$RCJqu)
                       (g$bless$7825$RCJqu
                         (list
                           'quote
                           (g$file-options-spec$6853$RCJqu
                             (map g$id->sym$7585$RCJqu g$opt*$9866$RCJqu))))))
                    g$ls/false$9864$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$9863$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$9863$RCJqu '(_ . each-any)))))
         g$x$9862$RCJqu))))
   (g$symbol-macro$7871$RCJqu
     g$symbol-macro$11321$RCJqu
     (case-lambda
       ((g$x$9867$RCJqu g$set$9868$RCJqu)
        ((case-lambda
           ((g$t$9869$RCJqu)
            ((case-lambda
               ((g$ls/false$9870$RCJqu)
                (if (if g$ls/false$9870$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9871$RCJqu)
                             (if (g$id?$7584$RCJqu g$name$9871$RCJqu)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7585$RCJqu g$name$9871$RCJqu)
                                   g$set$9868$RCJqu))
                               '#f)))
                          g$ls/false$9870$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9872$RCJqu)
                       (g$bless$7825$RCJqu (list 'quote g$name$9872$RCJqu))))
                    g$ls/false$9870$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$9869$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$9869$RCJqu '(_ any)))))
         g$x$9867$RCJqu))))
   (g$macro-transformer$7872$RCJqu
     g$macro-transformer$11322$RCJqu
     (case-lambda
       ((g$x$9873$RCJqu)
        (if (procedure? g$x$9873$RCJqu)
          g$x$9873$RCJqu
          (if (symbol? g$x$9873$RCJqu)
            ((case-lambda
               ((g$t$9874$RCJqu)
                (if (eqv? g$t$9874$RCJqu 'define-record-type)
                  g$define-record-type-macro$7856$RCJqu
                  (if (eqv? g$t$9874$RCJqu 'define-struct)
                    g$define-struct-macro$7855$RCJqu
                    (if (eqv? g$t$9874$RCJqu 'include)
                      g$include-macro$7850$RCJqu
                      (if (eqv? g$t$9874$RCJqu 'cond)
                        g$cond-macro$7848$RCJqu
                        (if (eqv? g$t$9874$RCJqu 'let)
                          g$let-macro$7828$RCJqu
                          (if (eqv? g$t$9874$RCJqu 'do)
                            g$do-macro$7844$RCJqu
                            (if (eqv? g$t$9874$RCJqu 'or)
                              g$or-macro$7846$RCJqu
                              (if (eqv? g$t$9874$RCJqu 'and)
                                g$and-macro$7847$RCJqu
                                (if (eqv? g$t$9874$RCJqu 'let*)
                                  g$let*-macro$7845$RCJqu
                                  (if (eqv? g$t$9874$RCJqu 'let-values)
                                    g$let-values-macro$7829$RCJqu
                                    (if (eqv? g$t$9874$RCJqu 'let*-values)
                                      g$let*-values-macro$7830$RCJqu
                                      (if (eqv? g$t$9874$RCJqu 'syntax-rules)
                                        g$syntax-rules-macro$7852$RCJqu
                                        (if (eqv? g$t$9874$RCJqu 'quasiquote)
                                          g$quasiquote-macro$7853$RCJqu
                                          (if (eqv? g$t$9874$RCJqu 'quasisyntax)
                                            g$quasisyntax-macro$7854$RCJqu
                                            (if (eqv?
                                                  g$t$9874$RCJqu
                                                  'with-syntax)
                                              g$with-syntax-macro$7826$RCJqu
                                              (if (eqv?
                                                    g$t$9874$RCJqu
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7843$RCJqu
                                                (if (eqv? g$t$9874$RCJqu 'time)
                                                  g$time-macro$7839$RCJqu
                                                  (if (eqv?
                                                        g$t$9874$RCJqu
                                                        'delay)
                                                    g$delay-macro$7840$RCJqu
                                                    (if (eqv?
                                                          g$t$9874$RCJqu
                                                          'assert)
                                                      g$assert-macro$7841$RCJqu
                                                      (if (eqv?
                                                            g$t$9874$RCJqu
                                                            'endianness)
                                                        g$endianness-macro$7842$RCJqu
                                                        (if (eqv?
                                                              g$t$9874$RCJqu
                                                              'guard)
                                                          g$guard-macro$7837$RCJqu
                                                          (if (eqv?
                                                                g$t$9874$RCJqu
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7838$RCJqu
                                                            (if (eqv?
                                                                  g$t$9874$RCJqu
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7831$RCJqu
                                                              (if (eqv?
                                                                    g$t$9874$RCJqu
                                                                    'trace-define)
                                                                g$trace-define-macro$7832$RCJqu
                                                                (if (eqv?
                                                                      g$t$9874$RCJqu
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7833$RCJqu
                                                                  (if (eqv?
                                                                        g$t$9874$RCJqu
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7835$RCJqu
                                                                    (if (eqv?
                                                                          g$t$9874$RCJqu
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7836$RCJqu
                                                                      (if (eqv?
                                                                            g$t$9874$RCJqu
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7857$RCJqu
                                                                        (if (eqv?
                                                                              g$t$9874$RCJqu
                                                                              'include-into)
                                                                          g$include-into-macro$7851$RCJqu
                                                                          (if (eqv?
                                                                                g$t$9874$RCJqu
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9877$RCJqu)
                                                                               (g$symbol-macro$7871$RCJqu
                                                                                 g$x$9877$RCJqu
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9874$RCJqu
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9876$RCJqu)
                                                                                 (g$symbol-macro$7871$RCJqu
                                                                                   g$x$9876$RCJqu
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9874$RCJqu
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9875$RCJqu)
                                                                                   (g$symbol-macro$7871$RCJqu
                                                                                     g$x$9875$RCJqu
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9874$RCJqu
                                                                                      'file-options)
                                                                                  g$file-options-macro$7870$RCJqu
                                                                                  (if (memv
                                                                                        g$t$9874$RCJqu
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7858$RCJqu
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9873$RCJqu)))))))))))))))))))))))))))))))))))))
             g$x$9873$RCJqu)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9873$RCJqu))))))
   (g$local-macro-transformer$7873$RCJqu
     g$local-macro-transformer$11323$RCJqu
     (case-lambda ((g$x$9878$RCJqu) (car g$x$9878$RCJqu))))
   (g$do-macro-call$7874$RCJqu
     g$do-macro-call$11324$RCJqu
     (case-lambda
       ((g$transformer$9879$RCJqu g$expr$9880$RCJqu)
        ((case-lambda
           ((g$out$9881$RCJqu)
            (begin
              ((letrec ((g$f$9882$RCJqu
                          (case-lambda
                            ((g$x$9883$RCJqu)
                             (if (g$stx?$7556$RCJqu g$x$9883$RCJqu)
                               (void)
                               (if (pair? g$x$9883$RCJqu)
                                 (begin
                                   (g$f$9882$RCJqu (car g$x$9883$RCJqu))
                                   (g$f$9882$RCJqu (cdr g$x$9883$RCJqu)))
                                 (if (vector? g$x$9883$RCJqu)
                                   (vector-for-each
                                     g$f$9882$RCJqu
                                     g$x$9883$RCJqu)
                                   (if (symbol? g$x$9883$RCJqu)
                                     (g$syntax-violation$7968$RCJqu
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9880$RCJqu
                                       g$x$9883$RCJqu)
                                     (void)))))))))
                 g$f$9882$RCJqu)
               g$out$9881$RCJqu)
              (g$add-mark$7573$RCJqu
                (g$gen-mark$7568$RCJqu)
                g$out$9881$RCJqu
                g$expr$9880$RCJqu))))
         (g$transformer$9879$RCJqu
           (g$add-mark$7573$RCJqu
             g$anti-mark$7569$RCJqu
             g$expr$9880$RCJqu
             '#f))))))
   (g$chi-macro$7875$RCJqu
     g$chi-macro$11325$RCJqu
     (case-lambda
       ((g$p$9884$RCJqu g$e$9885$RCJqu)
        (g$do-macro-call$7874$RCJqu
          (g$macro-transformer$7872$RCJqu g$p$9884$RCJqu)
          g$e$9885$RCJqu))))
   (g$chi-local-macro$7876$RCJqu
     g$chi-local-macro$11326$RCJqu
     (case-lambda
       ((g$p$9886$RCJqu g$e$9887$RCJqu)
        (g$do-macro-call$7874$RCJqu
          (g$local-macro-transformer$7873$RCJqu g$p$9886$RCJqu)
          g$e$9887$RCJqu))))
   (g$chi-global-macro$7877$RCJqu
     g$chi-global-macro$11327$RCJqu
     (case-lambda
       ((g$p$9888$RCJqu g$e$9889$RCJqu)
        ((case-lambda
           ((g$lib$9890$RCJqu g$loc$9891$RCJqu)
            (begin
              (g$visit-library$7400$RCJqu g$lib$9890$RCJqu)
              ((case-lambda
                 ((g$x$9892$RCJqu)
                  ((case-lambda
                     ((g$transformer$9893$RCJqu)
                      (g$do-macro-call$7874$RCJqu
                        g$transformer$9893$RCJqu
                        g$e$9889$RCJqu)))
                   (if (procedure? g$x$9892$RCJqu)
                     g$x$9892$RCJqu
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9892$RCJqu)))))
               (symbol-value g$loc$9891$RCJqu)))))
         (car g$p$9888$RCJqu)
         (cdr g$p$9888$RCJqu)))))
   (g$chi-expr*$7878$RCJqu
     g$chi-expr*$11328$RCJqu
     (case-lambda
       ((g$e*$9894$RCJqu g$r$9895$RCJqu g$mr$9896$RCJqu)
        (if (null? g$e*$9894$RCJqu)
          '()
          ((case-lambda
             ((g$e$9897$RCJqu)
              (cons
                g$e$9897$RCJqu
                (g$chi-expr*$7878$RCJqu
                  (cdr g$e*$9894$RCJqu)
                  g$r$9895$RCJqu
                  g$mr$9896$RCJqu))))
           (g$chi-expr$7880$RCJqu
             (car g$e*$9894$RCJqu)
             g$r$9895$RCJqu
             g$mr$9896$RCJqu))))))
   (g$chi-application$7879$RCJqu
     g$chi-application$11329$RCJqu
     (case-lambda
       ((g$e$9898$RCJqu g$r$9899$RCJqu g$mr$9900$RCJqu)
        ((case-lambda
           ((g$t$9901$RCJqu)
            ((case-lambda
               ((g$ls/false$9902$RCJqu)
                (if g$ls/false$9902$RCJqu
                  (apply
                    (case-lambda
                      ((g$rator$9903$RCJqu g$rands$9904$RCJqu)
                       ((case-lambda
                          ((g$rator$9905$RCJqu)
                           (cons
                             g$rator$9905$RCJqu
                             (g$chi-expr*$7878$RCJqu
                               g$rands$9904$RCJqu
                               g$r$9899$RCJqu
                               g$mr$9900$RCJqu))))
                        (g$chi-expr$7880$RCJqu
                          g$rator$9903$RCJqu
                          g$r$9899$RCJqu
                          g$mr$9900$RCJqu))))
                    g$ls/false$9902$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$9901$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$9901$RCJqu '(any . each-any)))))
         g$e$9898$RCJqu))))
   (g$chi-expr$7880$RCJqu
     g$chi-expr$11330$RCJqu
     (case-lambda
       ((g$e$9906$RCJqu g$r$9907$RCJqu g$mr$9908$RCJqu)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7604$RCJqu g$e$9906$RCJqu g$r$9907$RCJqu)))
          (case-lambda
            ((g$type$9912$RCJqu g$value$9913$RCJqu g$kwd$9914$RCJqu)
             ((case-lambda
                ((g$kwd$9915$RCJqu g$value$9916$RCJqu g$type$9917$RCJqu)
                 ((case-lambda
                    ((g$t$9918$RCJqu)
                     (if (eqv? g$t$9918$RCJqu 'core-macro)
                       ((case-lambda
                          ((g$transformer$9944$RCJqu)
                           (g$transformer$9944$RCJqu
                             g$e$9906$RCJqu
                             g$r$9907$RCJqu
                             g$mr$9908$RCJqu)))
                        (g$core-macro-transformer$7869$RCJqu
                          g$value$9916$RCJqu))
                       (if (eqv? g$t$9918$RCJqu 'global)
                         ((case-lambda
                            ((g$lib$9942$RCJqu)
                             ((case-lambda
                                ((g$loc$9943$RCJqu)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7914$RCJqu)
                                        g$lib$9942$RCJqu)
                                       g$loc$9943$RCJqu))))))
                              (cdr g$value$9916$RCJqu))))
                          (car g$value$9916$RCJqu))
                         (if (eqv? g$t$9918$RCJqu 'core-prim)
                           ((case-lambda
                              ((g$name$9941$RCJqu)
                               (list 'primitive g$name$9941$RCJqu)))
                            g$value$9916$RCJqu)
                           (if (eqv? g$t$9918$RCJqu 'call)
                             (g$chi-application$7879$RCJqu
                               g$e$9906$RCJqu
                               g$r$9907$RCJqu
                               g$mr$9908$RCJqu)
                             (if (eqv? g$t$9918$RCJqu 'lexical)
                               ((case-lambda
                                  ((g$lex$9940$RCJqu) g$lex$9940$RCJqu))
                                (g$lexical-var$7806$RCJqu g$value$9916$RCJqu))
                               (if (memv
                                     g$t$9918$RCJqu
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7880$RCJqu
                                   (g$chi-global-macro$7877$RCJqu
                                     g$value$9916$RCJqu
                                     g$e$9906$RCJqu)
                                   g$r$9907$RCJqu
                                   g$mr$9908$RCJqu)
                                 (if (memv
                                       g$t$9918$RCJqu
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7880$RCJqu
                                     (g$chi-local-macro$7876$RCJqu
                                       g$value$9916$RCJqu
                                       g$e$9906$RCJqu)
                                     g$r$9907$RCJqu
                                     g$mr$9908$RCJqu)
                                   (if (memv g$t$9918$RCJqu '(macro macro!))
                                     (g$chi-expr$7880$RCJqu
                                       (g$chi-macro$7875$RCJqu
                                         g$value$9916$RCJqu
                                         g$e$9906$RCJqu)
                                       g$r$9907$RCJqu
                                       g$mr$9908$RCJqu)
                                     (if (eqv? g$t$9918$RCJqu 'constant)
                                       ((case-lambda
                                          ((g$datum$9939$RCJqu)
                                           (list 'quote g$datum$9939$RCJqu)))
                                        g$value$9916$RCJqu)
                                       (if (eqv? g$t$9918$RCJqu 'set!)
                                         (g$chi-set!$7881$RCJqu
                                           g$e$9906$RCJqu
                                           g$r$9907$RCJqu
                                           g$mr$9908$RCJqu)
                                         (if (eqv? g$t$9918$RCJqu 'begin)
                                           ((case-lambda
                                              ((g$t$9935$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$9936$RCJqu)
                                                   (if g$ls/false$9936$RCJqu
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9937$RCJqu
                                                            g$x*$9938$RCJqu)
                                                          (g$build-sequence$7518$RCJqu
                                                            '#f
                                                            (g$chi-expr*$7878$RCJqu
                                                              (cons
                                                                g$x$9937$RCJqu
                                                                g$x*$9938$RCJqu)
                                                              g$r$9907$RCJqu
                                                              g$mr$9908$RCJqu))))
                                                       g$ls/false$9936$RCJqu)
                                                     (g$syntax-violation$7968$RCJqu
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9935$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$9935$RCJqu
                                                  '(_ any . each-any)))))
                                            g$e$9906$RCJqu)
                                           (if (memv
                                                 g$t$9918$RCJqu
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9920$RCJqu)
                                                 ((case-lambda
                                                    ((g$ls/false$9921$RCJqu)
                                                     (if (if g$ls/false$9921$RCJqu
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9922$RCJqu
                                                                    g$xrhs*$9923$RCJqu
                                                                    g$xbody$9924$RCJqu
                                                                    g$xbody*$9925$RCJqu)
                                                                  (if (g$valid-bound-ids?$7589$RCJqu
                                                                        g$xlhs*$9922$RCJqu)
                                                                    (void)
                                                                    (g$syntax-violation$7968$RCJqu
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9906$RCJqu))))
                                                               g$ls/false$9921$RCJqu))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9926$RCJqu
                                                              g$xrhs*$9927$RCJqu
                                                              g$xbody$9928$RCJqu
                                                              g$xbody*$9929$RCJqu)
                                                            ((case-lambda
                                                               ((g$xlab*$9930$RCJqu)
                                                                ((case-lambda
                                                                   ((g$xrib$9931$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$xb*$9932$RCJqu)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7518$RCJqu
                                                                              '#f
                                                                              (g$chi-expr*$7878$RCJqu
                                                                                (map (case-lambda
                                                                                       ((g$x$9933$RCJqu)
                                                                                        (g$add-subst$7574$RCJqu
                                                                                          g$xrib$9931$RCJqu
                                                                                          g$x$9933$RCJqu)))
                                                                                     (cons
                                                                                       g$xbody$9928$RCJqu
                                                                                       g$xbody*$9929$RCJqu))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9930$RCJqu
                                                                                       g$xb*$9932$RCJqu)
                                                                                  g$r$9907$RCJqu)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9930$RCJqu
                                                                                       g$xb*$9932$RCJqu)
                                                                                  g$mr$9908$RCJqu))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9934$RCJqu)
                                                                             (g$make-eval-transformer$7616$RCJqu
                                                                               (g$expand-transformer$7907$RCJqu
                                                                                 (if (eq? g$type$9917$RCJqu
                                                                                          'let-syntax)
                                                                                   g$x$9934$RCJqu
                                                                                   (g$add-subst$7574$RCJqu
                                                                                     g$xrib$9931$RCJqu
                                                                                     g$x$9934$RCJqu))
                                                                                 g$mr$9908$RCJqu))))
                                                                          g$xrhs*$9927$RCJqu))))
                                                                 (g$make-full-rib$7552$RCJqu
                                                                   g$xlhs*$9926$RCJqu
                                                                   g$xlab*$9930$RCJqu))))
                                                             (map g$gen-label$7530$RCJqu
                                                                  g$xlhs*$9926$RCJqu))))
                                                         g$ls/false$9921$RCJqu)
                                                       (g$syntax-violation$7968$RCJqu
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9920$RCJqu))))
                                                  (g$syntax-dispatch$7862$RCJqu
                                                    g$t$9920$RCJqu
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9906$RCJqu)
                                             (if (eqv?
                                                   g$t$9918$RCJqu
                                                   'displaced-lexical)
                                               (g$syntax-violation$7968$RCJqu
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9906$RCJqu)
                                               (if (eqv? g$t$9918$RCJqu 'syntax)
                                                 (g$syntax-violation$7968$RCJqu
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9906$RCJqu)
                                                 (if (memv
                                                       g$t$9918$RCJqu
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7968$RCJqu
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9919$RCJqu)
                                                           (if (eqv?
                                                                 g$t$9919$RCJqu
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9919$RCJqu
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9919$RCJqu
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9919$RCJqu
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9919$RCJqu
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9917$RCJqu)
                                                       '" was found where an expression was expected")
                                                     g$e$9906$RCJqu)
                                                   (if (eqv?
                                                         g$t$9918$RCJqu
                                                         'mutable)
                                                     (g$syntax-violation$7968$RCJqu
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9906$RCJqu)
                                                     (g$syntax-violation$7968$RCJqu
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9906$RCJqu)))))))))))))))))))
                  g$type$9917$RCJqu)))
              g$kwd$9914$RCJqu
              g$value$9913$RCJqu
              g$type$9912$RCJqu)))))))
   (g$chi-set!$7881$RCJqu
     g$chi-set!$11331$RCJqu
     (case-lambda
       ((g$e$9945$RCJqu g$r$9946$RCJqu g$mr$9947$RCJqu)
        ((case-lambda
           ((g$t$9948$RCJqu)
            ((case-lambda
               ((g$ls/false$9949$RCJqu)
                (if (if g$ls/false$9949$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9950$RCJqu g$v$9951$RCJqu)
                             (g$id?$7584$RCJqu g$x$9950$RCJqu)))
                          g$ls/false$9949$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9952$RCJqu g$v$9953$RCJqu)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7604$RCJqu
                              g$x$9952$RCJqu
                              g$r$9946$RCJqu)))
                         (case-lambda
                           ((g$type$9957$RCJqu
                              g$value$9958$RCJqu
                              g$kwd$9959$RCJqu)
                            ((case-lambda
                               ((g$kwd$9960$RCJqu
                                  g$value$9961$RCJqu
                                  g$type$9962$RCJqu)
                                ((case-lambda
                                   ((g$t$9963$RCJqu)
                                    (if (eqv? g$t$9963$RCJqu 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7808$RCJqu
                                          g$value$9961$RCJqu
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7806$RCJqu
                                            g$value$9961$RCJqu)
                                          (g$chi-expr$7880$RCJqu
                                            g$v$9953$RCJqu
                                            g$r$9946$RCJqu
                                            g$mr$9947$RCJqu)))
                                      (if (eqv? g$t$9963$RCJqu 'core-prim)
                                        (g$syntax-violation$7968$RCJqu
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9945$RCJqu)
                                        (if (eqv? g$t$9963$RCJqu 'global)
                                          (g$syntax-violation$7968$RCJqu
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9945$RCJqu)
                                          (if (eqv?
                                                g$t$9963$RCJqu
                                                'global-macro!)
                                            (g$chi-expr$7880$RCJqu
                                              (g$chi-global-macro$7877$RCJqu
                                                g$value$9961$RCJqu
                                                g$e$9945$RCJqu)
                                              g$r$9946$RCJqu
                                              g$mr$9947$RCJqu)
                                            (if (eqv?
                                                  g$t$9963$RCJqu
                                                  'local-macro!)
                                              (g$chi-expr$7880$RCJqu
                                                (g$chi-local-macro$7876$RCJqu
                                                  g$value$9961$RCJqu
                                                  g$e$9945$RCJqu)
                                                g$r$9946$RCJqu
                                                g$mr$9947$RCJqu)
                                              (if (eqv? g$t$9963$RCJqu 'mutable)
                                                (g$syntax-violation$7968$RCJqu
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9945$RCJqu)
                                                (g$syntax-violation$7968$RCJqu
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9945$RCJqu)))))))))
                                 g$type$9962$RCJqu)))
                             g$kwd$9959$RCJqu
                             g$value$9958$RCJqu
                             g$type$9957$RCJqu))))))
                    g$ls/false$9949$RCJqu)
                  (g$syntax-violation$7968$RCJqu
                    '#f
                    '"invalid syntax"
                    g$t$9948$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$9948$RCJqu '(_ any any)))))
         g$e$9945$RCJqu))))
   (g$verify-formals$7882$RCJqu
     g$verify-formals$11332$RCJqu
     (case-lambda
       ((g$fmls$9964$RCJqu g$stx$9965$RCJqu)
        ((case-lambda
           ((g$t$9966$RCJqu)
            ((case-lambda
               ((g$ls/false$9967$RCJqu)
                (if g$ls/false$9967$RCJqu
                  (apply
                    (case-lambda
                      ((g$x*$9968$RCJqu)
                       (if (g$valid-bound-ids?$7589$RCJqu g$x*$9968$RCJqu)
                         (void)
                         (g$invalid-fmls-error$7827$RCJqu
                           g$stx$9965$RCJqu
                           g$fmls$9964$RCJqu))))
                    g$ls/false$9967$RCJqu)
                  ((case-lambda
                     ((g$t$9969$RCJqu)
                      ((case-lambda
                         ((g$ls/false$9970$RCJqu)
                          (if g$ls/false$9970$RCJqu
                            (apply
                              (case-lambda
                                ((g$x*$9971$RCJqu g$x$9972$RCJqu)
                                 (if (g$valid-bound-ids?$7589$RCJqu
                                       (cons g$x$9972$RCJqu g$x*$9971$RCJqu))
                                   (void)
                                   (g$invalid-fmls-error$7827$RCJqu
                                     g$stx$9965$RCJqu
                                     g$fmls$9964$RCJqu))))
                              g$ls/false$9970$RCJqu)
                            ((case-lambda
                               ((g$t$9973$RCJqu)
                                ((case-lambda
                                   ((g$ls/false$9974$RCJqu)
                                    (if g$ls/false$9974$RCJqu
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9965$RCJqu)))
                                        g$ls/false$9974$RCJqu)
                                      (g$syntax-violation$7968$RCJqu
                                        '#f
                                        '"invalid syntax"
                                        g$t$9973$RCJqu))))
                                 (g$syntax-dispatch$7862$RCJqu
                                   g$t$9973$RCJqu
                                   '_))))
                             g$t$9969$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$9969$RCJqu
                         '#(each+ any () any)))))
                   g$t$9966$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$9966$RCJqu 'each-any))))
         g$fmls$9964$RCJqu))))
   (g$chi-lambda-clause$7883$RCJqu
     g$chi-lambda-clause$11333$RCJqu
     (case-lambda
       ((g$stx$9975$RCJqu
          g$fmls$9976$RCJqu
          g$body*$9977$RCJqu
          g$r$9978$RCJqu
          g$mr$9979$RCJqu)
        ((case-lambda
           ((g$t$9980$RCJqu)
            ((case-lambda
               ((g$ls/false$9981$RCJqu)
                (if g$ls/false$9981$RCJqu
                  (apply
                    (case-lambda
                      ((g$x*$9982$RCJqu)
                       (begin
                         (g$verify-formals$7882$RCJqu
                           g$fmls$9976$RCJqu
                           g$stx$9975$RCJqu)
                         ((case-lambda
                            ((g$lex*$9983$RCJqu g$lab*$9984$RCJqu)
                             (values
                               g$lex*$9983$RCJqu
                               (g$chi-internal$7891$RCJqu
                                 (g$add-subst$7574$RCJqu
                                   (g$make-full-rib$7552$RCJqu
                                     g$x*$9982$RCJqu
                                     g$lab*$9984$RCJqu)
                                   g$body*$9977$RCJqu)
                                 (g$add-lexicals$7810$RCJqu
                                   g$lab*$9984$RCJqu
                                   g$lex*$9983$RCJqu
                                   g$r$9978$RCJqu)
                                 g$mr$9979$RCJqu))))
                          (map g$gen-lexical$7528$RCJqu g$x*$9982$RCJqu)
                          (map g$gen-label$7530$RCJqu g$x*$9982$RCJqu)))))
                    g$ls/false$9981$RCJqu)
                  ((case-lambda
                     ((g$t$9985$RCJqu)
                      ((case-lambda
                         ((g$ls/false$9986$RCJqu)
                          (if g$ls/false$9986$RCJqu
                            (apply
                              (case-lambda
                                ((g$x*$9987$RCJqu g$x$9988$RCJqu)
                                 (begin
                                   (g$verify-formals$7882$RCJqu
                                     g$fmls$9976$RCJqu
                                     g$stx$9975$RCJqu)
                                   ((case-lambda
                                      ((g$lex*$9989$RCJqu
                                         g$lab*$9990$RCJqu
                                         g$lex$9991$RCJqu
                                         g$lab$9992$RCJqu)
                                       (values
                                         (append
                                           g$lex*$9989$RCJqu
                                           g$lex$9991$RCJqu)
                                         (g$chi-internal$7891$RCJqu
                                           (g$add-subst$7574$RCJqu
                                             (g$make-full-rib$7552$RCJqu
                                               (cons
                                                 g$x$9988$RCJqu
                                                 g$x*$9987$RCJqu)
                                               (cons
                                                 g$lab$9992$RCJqu
                                                 g$lab*$9990$RCJqu))
                                             g$body*$9977$RCJqu)
                                           (g$add-lexicals$7810$RCJqu
                                             (cons
                                               g$lab$9992$RCJqu
                                               g$lab*$9990$RCJqu)
                                             (cons
                                               g$lex$9991$RCJqu
                                               g$lex*$9989$RCJqu)
                                             g$r$9978$RCJqu)
                                           g$mr$9979$RCJqu))))
                                    (map g$gen-lexical$7528$RCJqu
                                         g$x*$9987$RCJqu)
                                    (map g$gen-label$7530$RCJqu g$x*$9987$RCJqu)
                                    (g$gen-lexical$7528$RCJqu g$x$9988$RCJqu)
                                    (g$gen-label$7530$RCJqu g$x$9988$RCJqu)))))
                              g$ls/false$9986$RCJqu)
                            ((case-lambda
                               ((g$t$9993$RCJqu)
                                ((case-lambda
                                   ((g$ls/false$9994$RCJqu)
                                    (if g$ls/false$9994$RCJqu
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7968$RCJqu
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9976$RCJqu)))
                                        g$ls/false$9994$RCJqu)
                                      (g$syntax-violation$7968$RCJqu
                                        '#f
                                        '"invalid syntax"
                                        g$t$9993$RCJqu))))
                                 (g$syntax-dispatch$7862$RCJqu
                                   g$t$9993$RCJqu
                                   '_))))
                             g$t$9985$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$9985$RCJqu
                         '#(each+ any () any)))))
                   g$t$9980$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$9980$RCJqu 'each-any))))
         g$fmls$9976$RCJqu))))
   (g$chi-lambda-clause*$7884$RCJqu
     g$chi-lambda-clause*$11334$RCJqu
     (case-lambda
       ((g$stx$9995$RCJqu
          g$fmls*$9996$RCJqu
          g$body**$9997$RCJqu
          g$r$9998$RCJqu
          g$mr$9999$RCJqu)
        (if (null? g$fmls*$9996$RCJqu)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7883$RCJqu
                 g$stx$9995$RCJqu
                 (car g$fmls*$9996$RCJqu)
                 (car g$body**$9997$RCJqu)
                 g$r$9998$RCJqu
                 g$mr$9999$RCJqu)))
            (case-lambda
              ((g$a$10002$RCJqu g$b$10003$RCJqu)
               ((case-lambda
                  ((g$b$10004$RCJqu g$a$10005$RCJqu)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7884$RCJqu
                          g$stx$9995$RCJqu
                          (cdr g$fmls*$9996$RCJqu)
                          (cdr g$body**$9997$RCJqu)
                          g$r$9998$RCJqu
                          g$mr$9999$RCJqu)))
                     (case-lambda
                       ((g$a*$10008$RCJqu g$b*$10009$RCJqu)
                        ((case-lambda
                           ((g$b*$10010$RCJqu g$a*$10011$RCJqu)
                            (values
                              (cons g$a$10005$RCJqu g$a*$10011$RCJqu)
                              (cons g$b$10004$RCJqu g$b*$10010$RCJqu))))
                         g$b*$10009$RCJqu
                         g$a*$10008$RCJqu))))))
                g$b$10003$RCJqu
                g$a$10002$RCJqu))))))))
   (g$chi-defun$7885$RCJqu
     g$chi-defun$11335$RCJqu
     (case-lambda
       ((g$x$10012$RCJqu g$r$10013$RCJqu g$mr$10014$RCJqu)
        ((case-lambda
           ((g$fmls$10015$RCJqu g$body*$10016$RCJqu)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7883$RCJqu
                   g$fmls$10015$RCJqu
                   g$fmls$10015$RCJqu
                   g$body*$10016$RCJqu
                   g$r$10013$RCJqu
                   g$mr$10014$RCJqu)))
              (case-lambda
                ((g$fmls$10019$RCJqu g$body$10020$RCJqu)
                 ((case-lambda
                    ((g$body$10021$RCJqu g$fmls$10022$RCJqu)
                     (g$build-lambda$7515$RCJqu
                       '#f
                       g$fmls$10022$RCJqu
                       g$body$10021$RCJqu)))
                  g$body$10020$RCJqu
                  g$fmls$10019$RCJqu))))))
         (car g$x$10012$RCJqu)
         (cdr g$x$10012$RCJqu)))))
   (g$chi-rhs$7886$RCJqu
     g$chi-rhs$11336$RCJqu
     (case-lambda
       ((g$rhs$10023$RCJqu g$r$10024$RCJqu g$mr$10025$RCJqu)
        ((case-lambda
           ((g$t$10026$RCJqu)
            (if (eqv? g$t$10026$RCJqu 'defun)
              (g$chi-defun$7885$RCJqu
                (cdr g$rhs$10023$RCJqu)
                g$r$10024$RCJqu
                g$mr$10025$RCJqu)
              (if (eqv? g$t$10026$RCJqu 'expr)
                ((case-lambda
                   ((g$expr$10028$RCJqu)
                    (g$chi-expr$7880$RCJqu
                      g$expr$10028$RCJqu
                      g$r$10024$RCJqu
                      g$mr$10025$RCJqu)))
                 (cdr g$rhs$10023$RCJqu))
                (if (eqv? g$t$10026$RCJqu 'top-expr)
                  ((case-lambda
                     ((g$expr$10027$RCJqu)
                      (g$build-sequence$7518$RCJqu
                        '#f
                        (list
                          (g$chi-expr$7880$RCJqu
                            g$expr$10027$RCJqu
                            g$r$10024$RCJqu
                            g$mr$10025$RCJqu)
                          (g$build-void$7519$RCJqu)))))
                   (cdr g$rhs$10023$RCJqu))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10023$RCJqu))))))
         (car g$rhs$10023$RCJqu)))))
   (g$expand-interaction-rhs*/init*$7887$RCJqu
     g$expand-interaction-rhs*/init*$11337$RCJqu
     (case-lambda
       ((g$lhs*$10029$RCJqu
          g$rhs*$10030$RCJqu
          g$init*$10031$RCJqu
          g$r$10032$RCJqu
          g$mr$10033$RCJqu)
        ((letrec ((g$f$10034$RCJqu
                    (case-lambda
                      ((g$lhs*$10035$RCJqu g$rhs*$10036$RCJqu)
                       (if (null? g$lhs*$10035$RCJqu)
                         (map (case-lambda
                                ((g$x$10037$RCJqu)
                                 (g$chi-expr$7880$RCJqu
                                   g$x$10037$RCJqu
                                   g$r$10032$RCJqu
                                   g$mr$10033$RCJqu)))
                              g$init*$10031$RCJqu)
                         ((case-lambda
                            ((g$lhs$10038$RCJqu g$rhs$10039$RCJqu)
                             ((case-lambda
                                ((g$t$10040$RCJqu)
                                 (if (eqv? g$t$10040$RCJqu 'defun)
                                   ((case-lambda
                                      ((g$rhs$10043$RCJqu)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10038$RCJqu
                                           g$rhs$10043$RCJqu)
                                         (g$f$10034$RCJqu
                                           (cdr g$lhs*$10035$RCJqu)
                                           (cdr g$rhs*$10036$RCJqu)))))
                                    (g$chi-defun$7885$RCJqu
                                      (cdr g$rhs$10039$RCJqu)
                                      g$r$10032$RCJqu
                                      g$mr$10033$RCJqu))
                                   (if (eqv? g$t$10040$RCJqu 'expr)
                                     ((case-lambda
                                        ((g$rhs$10042$RCJqu)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10038$RCJqu
                                             g$rhs$10042$RCJqu)
                                           (g$f$10034$RCJqu
                                             (cdr g$lhs*$10035$RCJqu)
                                             (cdr g$rhs*$10036$RCJqu)))))
                                      (g$chi-expr$7880$RCJqu
                                        (cdr g$rhs$10039$RCJqu)
                                        g$r$10032$RCJqu
                                        g$mr$10033$RCJqu))
                                     (if (eqv? g$t$10040$RCJqu 'top-expr)
                                       ((case-lambda
                                          ((g$e$10041$RCJqu)
                                           (cons
                                             g$e$10041$RCJqu
                                             (g$f$10034$RCJqu
                                               (cdr g$lhs*$10035$RCJqu)
                                               (cdr g$rhs*$10036$RCJqu)))))
                                        (g$chi-expr$7880$RCJqu
                                          (cdr g$rhs$10039$RCJqu)
                                          g$r$10032$RCJqu
                                          g$mr$10033$RCJqu))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10039$RCJqu))))))
                              (car g$rhs$10039$RCJqu))))
                          (car g$lhs*$10035$RCJqu)
                          (car g$rhs*$10036$RCJqu)))))))
           g$f$10034$RCJqu)
         g$lhs*$10029$RCJqu
         g$rhs*$10030$RCJqu))))
   (g$chi-rhs*$7888$RCJqu
     g$chi-rhs*$11338$RCJqu
     (case-lambda
       ((g$rhs*$10044$RCJqu g$r$10045$RCJqu g$mr$10046$RCJqu)
        ((letrec ((g$f$10047$RCJqu
                    (case-lambda
                      ((g$ls$10048$RCJqu)
                       (if (null? g$ls$10048$RCJqu)
                         '()
                         ((case-lambda
                            ((g$a$10049$RCJqu)
                             (cons
                               g$a$10049$RCJqu
                               (g$f$10047$RCJqu (cdr g$ls$10048$RCJqu)))))
                          (g$chi-rhs$7886$RCJqu
                            (car g$ls$10048$RCJqu)
                            g$r$10045$RCJqu
                            g$mr$10046$RCJqu)))))))
           g$f$10047$RCJqu)
         g$rhs*$10044$RCJqu))))
   (g$find-bound=?$7889$RCJqu
     g$find-bound=?$11339$RCJqu
     (case-lambda
       ((g$x$10050$RCJqu g$lhs*$10051$RCJqu g$rhs*$10052$RCJqu)
        (if (null? g$lhs*$10051$RCJqu)
          '#f
          (if (g$bound-id=?$7587$RCJqu g$x$10050$RCJqu (car g$lhs*$10051$RCJqu))
            (car g$rhs*$10052$RCJqu)
            (g$find-bound=?$7889$RCJqu
              g$x$10050$RCJqu
              (cdr g$lhs*$10051$RCJqu)
              (cdr g$rhs*$10052$RCJqu)))))))
   (g$find-dups$7890$RCJqu
     g$find-dups$11340$RCJqu
     (case-lambda
       ((g$ls$10053$RCJqu)
        ((letrec ((g$f$10054$RCJqu
                    (case-lambda
                      ((g$ls$10055$RCJqu g$dups$10056$RCJqu)
                       (if (null? g$ls$10055$RCJqu)
                         g$dups$10056$RCJqu
                         ((case-lambda
                            ((g$t$10057$RCJqu)
                             (if g$t$10057$RCJqu
                               ((case-lambda
                                  ((g$x$10058$RCJqu)
                                   (g$f$10054$RCJqu
                                     (cdr g$ls$10055$RCJqu)
                                     (cons
                                       (list
                                         (car g$ls$10055$RCJqu)
                                         g$x$10058$RCJqu)
                                       g$dups$10056$RCJqu))))
                                g$t$10057$RCJqu)
                               (g$f$10054$RCJqu
                                 (cdr g$ls$10055$RCJqu)
                                 g$dups$10056$RCJqu))))
                          (g$find-bound=?$7889$RCJqu
                            (car g$ls$10055$RCJqu)
                            (cdr g$ls$10055$RCJqu)
                            (cdr g$ls$10055$RCJqu))))))))
           g$f$10054$RCJqu)
         g$ls$10053$RCJqu
         '()))))
   (g$chi-internal$7891$RCJqu
     g$chi-internal$11341$RCJqu
     (case-lambda
       ((g$e*$10059$RCJqu g$r$10060$RCJqu g$mr$10061$RCJqu)
        ((case-lambda
           ((g$rib$10062$RCJqu)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7906$RCJqu
                   (map (case-lambda
                          ((g$x$10070$RCJqu)
                           (g$add-subst$7574$RCJqu
                             g$rib$10062$RCJqu
                             g$x$10070$RCJqu)))
                        (g$syntax->list$7583$RCJqu g$e*$10059$RCJqu))
                   g$r$10060$RCJqu
                   g$mr$10061$RCJqu
                   '()
                   '()
                   '()
                   '()
                   g$rib$10062$RCJqu
                   '#f)))
              (case-lambda
                ((g$e*$10071$RCJqu
                   g$r$10072$RCJqu
                   g$mr$10073$RCJqu
                   g$lex*$10074$RCJqu
                   g$rhs*$10075$RCJqu
                   g$mod**$10076$RCJqu
                   g$kwd*$10077$RCJqu)
                 ((case-lambda
                    ((g$kwd*$10078$RCJqu
                       g$mod**$10079$RCJqu
                       g$rhs*$10080$RCJqu
                       g$lex*$10081$RCJqu
                       g$mr$10082$RCJqu
                       g$r$10083$RCJqu
                       g$e*$10084$RCJqu)
                     (begin
                       (if (null? g$e*$10084$RCJqu)
                         (g$syntax-violation$7968$RCJqu
                           '#f
                           '"no expression in body"
                           g$e*$10084$RCJqu)
                         (void))
                       ((case-lambda
                          ((g$init*$10085$RCJqu)
                           ((case-lambda
                              ((g$rhs*$10086$RCJqu)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7521$RCJqu
                                     '#f
                                     (reverse g$lex*$10081$RCJqu)
                                     (reverse g$rhs*$10086$RCJqu)
                                     (g$build-sequence$7518$RCJqu
                                       '#f
                                       g$init*$10085$RCJqu)))))))
                            (g$chi-rhs*$7888$RCJqu
                              g$rhs*$10080$RCJqu
                              g$r$10083$RCJqu
                              g$mr$10082$RCJqu))))
                        (g$chi-expr*$7878$RCJqu
                          (append
                            (apply append (reverse g$mod**$10079$RCJqu))
                            g$e*$10084$RCJqu)
                          g$r$10083$RCJqu
                          g$mr$10082$RCJqu)))))
                  g$kwd*$10077$RCJqu
                  g$mod**$10076$RCJqu
                  g$rhs*$10075$RCJqu
                  g$lex*$10074$RCJqu
                  g$mr$10073$RCJqu
                  g$r$10072$RCJqu
                  g$e*$10071$RCJqu))))))
         (g$make-empty-rib$7547$RCJqu)))))
   (g$parse-module$7892$RCJqu
     g$parse-module$11342$RCJqu
     (case-lambda
       ((g$e$10087$RCJqu)
        ((case-lambda
           ((g$t$10088$RCJqu)
            ((case-lambda
               ((g$ls/false$10089$RCJqu)
                (if g$ls/false$10089$RCJqu
                  (apply
                    (case-lambda
                      ((g$export*$10090$RCJqu g$b*$10091$RCJqu)
                       (begin
                         (if (g$for-all$6012$RCJqu
                               g$id?$7584$RCJqu
                               g$export*$10090$RCJqu)
                           (void)
                           (g$syntax-violation$7968$RCJqu
                             '#f
                             '"module exports must be identifiers"
                             g$e$10087$RCJqu))
                         (values
                           '#f
                           (list->vector g$export*$10090$RCJqu)
                           g$b*$10091$RCJqu))))
                    g$ls/false$10089$RCJqu)
                  ((case-lambda
                     ((g$t$10092$RCJqu)
                      ((case-lambda
                         ((g$ls/false$10093$RCJqu)
                          (if g$ls/false$10093$RCJqu
                            (apply
                              (case-lambda
                                ((g$name$10094$RCJqu
                                   g$export*$10095$RCJqu
                                   g$b*$10096$RCJqu)
                                 (begin
                                   (if (g$id?$7584$RCJqu g$name$10094$RCJqu)
                                     (void)
                                     (g$syntax-violation$7968$RCJqu
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10087$RCJqu))
                                   (if (g$for-all$6012$RCJqu
                                         g$id?$7584$RCJqu
                                         g$export*$10095$RCJqu)
                                     (void)
                                     (g$syntax-violation$7968$RCJqu
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10087$RCJqu))
                                   (values
                                     g$name$10094$RCJqu
                                     (list->vector g$export*$10095$RCJqu)
                                     g$b*$10096$RCJqu))))
                              g$ls/false$10093$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$10092$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$10092$RCJqu
                         '(_ any each-any . each-any)))))
                   g$t$10088$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$10088$RCJqu
               '(_ each-any . each-any)))))
         g$e$10087$RCJqu))))
   (g$8730$7893$RCJqu
     g$8730$11343$RCJqu
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8733$RCJqu
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8732$7894$RCJqu g$8732$11344$RCJqu '#f)
   (g$8731$7895$RCJqu
     g$8731$11345$RCJqu
     (make-record-constructor-descriptor
       g$8730$7893$RCJqu
       '#f
       g$8732$7894$RCJqu))
   (g$module-interface?$7896$RCJqu
     g$module-interface?$11346$RCJqu
     (record-predicate g$8730$7893$RCJqu))
   (g$make-module-interface$7897$RCJqu
     g$make-module-interface$11347$RCJqu
     (record-constructor g$8731$7895$RCJqu))
   (g$module-interface-first-mark$7898$RCJqu
     g$module-interface-first-mark$11348$RCJqu
     (record-accessor g$8730$7893$RCJqu '0))
   (g$module-interface-exp-id-vec$7899$RCJqu
     g$module-interface-exp-id-vec$11349$RCJqu
     (record-accessor g$8730$7893$RCJqu '1))
   (g$module-interface-exp-lab-vec$7900$RCJqu
     g$module-interface-exp-lab-vec$11350$RCJqu
     (record-accessor g$8730$7893$RCJqu '2))
   (g$set-module-interface-first-mark!$7901$RCJqu
     g$set-module-interface-first-mark!$11351$RCJqu
     (record-mutator g$8730$7893$RCJqu '0))
   (g$set-module-interface-exp-id-vec!$7902$RCJqu
     g$set-module-interface-exp-id-vec!$11352$RCJqu
     (record-mutator g$8730$7893$RCJqu '1))
   (g$set-module-interface-exp-lab-vec!$7903$RCJqu
     g$set-module-interface-exp-lab-vec!$11353$RCJqu
     (record-mutator g$8730$7893$RCJqu '2))
   (g$module-interface-exp-id*$7904$RCJqu
     g$module-interface-exp-id*$11354$RCJqu
     (case-lambda
       ((g$iface$10097$RCJqu g$id$10098$RCJqu)
        (letrec* ((g$diff-marks$10099$RCJqu
                    (case-lambda
                      ((g$ls$10103$RCJqu g$x$10104$RCJqu)
                       (begin
                         (if (null? g$ls$10103$RCJqu)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10105$RCJqu)
                             (if (eq? g$a$10105$RCJqu g$x$10104$RCJqu)
                               '()
                               (cons
                                 g$a$10105$RCJqu
                                 (g$diff-marks$10099$RCJqu
                                   (cdr g$ls$10103$RCJqu)
                                   g$x$10104$RCJqu)))))
                          (car g$ls$10103$RCJqu)))))))
          ((case-lambda
             ((g$diff$10100$RCJqu g$id-vec$10101$RCJqu)
              (if (null? g$diff$10100$RCJqu)
                g$id-vec$10101$RCJqu
                (vector-map
                  (case-lambda
                    ((g$x$10102$RCJqu)
                     (g$make-stx$7557$RCJqu
                       (g$stx-expr$7558$RCJqu g$x$10102$RCJqu)
                       (append
                         g$diff$10100$RCJqu
                         (g$stx-mark*$7559$RCJqu g$x$10102$RCJqu))
                       '()
                       '())))
                  g$id-vec$10101$RCJqu))))
           (g$diff-marks$10099$RCJqu
             (g$stx-mark*$7559$RCJqu g$id$10098$RCJqu)
             (g$module-interface-first-mark$7898$RCJqu g$iface$10097$RCJqu))
           (g$module-interface-exp-id-vec$7899$RCJqu g$iface$10097$RCJqu))))))
   (g$chi-internal-module$7905$RCJqu
     g$chi-internal-module$11355$RCJqu
     (case-lambda
       ((g$e$10106$RCJqu
          g$r$10107$RCJqu
          g$mr$10108$RCJqu
          g$lex*$10109$RCJqu
          g$rhs*$10110$RCJqu
          g$mod**$10111$RCJqu
          g$kwd*$10112$RCJqu)
        (call-with-values
          (case-lambda (() (g$parse-module$7892$RCJqu g$e$10106$RCJqu)))
          (case-lambda
            ((g$name$10116$RCJqu g$exp-id*$10117$RCJqu g$e*$10118$RCJqu)
             ((case-lambda
                ((g$e*$10119$RCJqu g$exp-id*$10120$RCJqu g$name$10121$RCJqu)
                 ((case-lambda
                    ((g$rib$10122$RCJqu)
                     ((case-lambda
                        ((g$e*$10123$RCJqu)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7906$RCJqu
                                    g$e*$10123$RCJqu
                                    g$r$10107$RCJqu
                                    g$mr$10108$RCJqu
                                    g$lex*$10109$RCJqu
                                    g$rhs*$10110$RCJqu
                                    g$mod**$10111$RCJqu
                                    g$kwd*$10112$RCJqu
                                    g$rib$10122$RCJqu
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10131$RCJqu
                                    g$r$10132$RCJqu
                                    g$mr$10133$RCJqu
                                    g$lex*$10134$RCJqu
                                    g$rhs*$10135$RCJqu
                                    g$mod**$10136$RCJqu
                                    g$kwd*$10137$RCJqu)
                                  ((case-lambda
                                     ((g$kwd*$10138$RCJqu
                                        g$mod**$10139$RCJqu
                                        g$rhs*$10140$RCJqu
                                        g$lex*$10141$RCJqu
                                        g$mr$10142$RCJqu
                                        g$r$10143$RCJqu
                                        g$e*$10144$RCJqu)
                                      ((case-lambda
                                         ((g$exp-lab*$10145$RCJqu
                                            g$mod**$10146$RCJqu)
                                          (if (not g$name$10121$RCJqu)
                                            (values
                                              g$lex*$10141$RCJqu
                                              g$rhs*$10140$RCJqu
                                              g$exp-id*$10120$RCJqu
                                              g$exp-lab*$10145$RCJqu
                                              g$r$10143$RCJqu
                                              g$mr$10142$RCJqu
                                              g$mod**$10146$RCJqu
                                              g$kwd*$10138$RCJqu)
                                            ((case-lambda
                                               ((g$lab$10147$RCJqu
                                                  g$iface$10148$RCJqu)
                                                (values
                                                  g$lex*$10141$RCJqu
                                                  g$rhs*$10140$RCJqu
                                                  (vector g$name$10121$RCJqu)
                                                  (vector g$lab$10147$RCJqu)
                                                  (cons
                                                    (cons
                                                      g$lab$10147$RCJqu
                                                      (cons
                                                        '$module
                                                        g$iface$10148$RCJqu))
                                                    g$r$10143$RCJqu)
                                                  (cons
                                                    (cons
                                                      g$lab$10147$RCJqu
                                                      (cons
                                                        '$module
                                                        g$iface$10148$RCJqu))
                                                    g$mr$10142$RCJqu)
                                                  g$mod**$10146$RCJqu
                                                  g$kwd*$10138$RCJqu)))
                                             (g$gen-label$7530$RCJqu 'module)
                                             (g$make-module-interface$7897$RCJqu
                                               (car (g$stx-mark*$7559$RCJqu
                                                      g$name$10121$RCJqu))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10149$RCJqu)
                                                    (g$make-stx$7557$RCJqu
                                                      (g$stx-expr$7558$RCJqu
                                                        g$x$10149$RCJqu)
                                                      (g$stx-mark*$7559$RCJqu
                                                        g$x$10149$RCJqu)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10120$RCJqu)
                                               g$exp-lab*$10145$RCJqu)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10150$RCJqu)
                                            ((case-lambda
                                               ((g$t$10151$RCJqu)
                                                (if g$t$10151$RCJqu
                                                  g$t$10151$RCJqu
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7968$RCJqu
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10150$RCJqu)))))
                                             (g$id->label$7597$RCJqu
                                               (g$make-stx$7557$RCJqu
                                                 (g$id->sym$7585$RCJqu
                                                   g$x$10150$RCJqu)
                                                 (g$stx-mark*$7559$RCJqu
                                                   g$x$10150$RCJqu)
                                                 (list g$rib$10122$RCJqu)
                                                 '())))))
                                         g$exp-id*$10120$RCJqu)
                                       (cons
                                         g$e*$10144$RCJqu
                                         g$mod**$10139$RCJqu))))
                                   g$kwd*$10137$RCJqu
                                   g$mod**$10136$RCJqu
                                   g$rhs*$10135$RCJqu
                                   g$lex*$10134$RCJqu
                                   g$mr$10133$RCJqu
                                   g$r$10132$RCJqu
                                   g$e*$10131$RCJqu)))))))))
                      (map (case-lambda
                             ((g$x$10152$RCJqu)
                              (g$add-subst$7574$RCJqu
                                g$rib$10122$RCJqu
                                g$x$10152$RCJqu)))
                           (g$syntax->list$7583$RCJqu g$e*$10119$RCJqu)))))
                  (g$make-empty-rib$7547$RCJqu))))
              g$e*$10118$RCJqu
              g$exp-id*$10117$RCJqu
              g$name$10116$RCJqu)))))))
   (g$chi-body*$7906$RCJqu
     g$chi-body*$11356$RCJqu
     (case-lambda
       ((g$e*$10153$RCJqu
          g$r$10154$RCJqu
          g$mr$10155$RCJqu
          g$lex*$10156$RCJqu
          g$rhs*$10157$RCJqu
          g$mod**$10158$RCJqu
          g$kwd*$10159$RCJqu
          g$rib$10160$RCJqu
          g$top?$10161$RCJqu)
        (if (null? g$e*$10153$RCJqu)
          (values
            g$e*$10153$RCJqu
            g$r$10154$RCJqu
            g$mr$10155$RCJqu
            g$lex*$10156$RCJqu
            g$rhs*$10157$RCJqu
            g$mod**$10158$RCJqu
            g$kwd*$10159$RCJqu)
          ((case-lambda
             ((g$e$10162$RCJqu)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7604$RCJqu g$e$10162$RCJqu g$r$10154$RCJqu)))
                (case-lambda
                  ((g$type$10166$RCJqu g$value$10167$RCJqu g$kwd$10168$RCJqu)
                   ((case-lambda
                      ((g$kwd$10169$RCJqu
                         g$value$10170$RCJqu
                         g$type$10171$RCJqu)
                       ((case-lambda
                          ((g$kwd*$10172$RCJqu)
                           ((case-lambda
                              ((g$t$10173$RCJqu)
                               (if (eqv? g$t$10173$RCJqu 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7802$RCJqu
                                        g$e$10162$RCJqu)))
                                   (case-lambda
                                     ((g$id$10279$RCJqu g$rhs$10280$RCJqu)
                                      ((case-lambda
                                         ((g$rhs$10281$RCJqu g$id$10282$RCJqu)
                                          (begin
                                            (if (g$bound-id-member?$7591$RCJqu
                                                  g$id$10282$RCJqu
                                                  g$kwd*$10172$RCJqu)
                                              (g$syntax-violation$7968$RCJqu
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10162$RCJqu)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7532$RCJqu
                                                   g$id$10282$RCJqu
                                                   g$rib$10160$RCJqu)))
                                              (case-lambda
                                                ((g$lab$10285$RCJqu
                                                   g$lex$10286$RCJqu)
                                                 ((case-lambda
                                                    ((g$lex$10287$RCJqu
                                                       g$lab$10288$RCJqu)
                                                     (begin
                                                       (g$extend-rib!$7548$RCJqu
                                                         g$rib$10160$RCJqu
                                                         g$id$10282$RCJqu
                                                         g$lab$10288$RCJqu)
                                                       (g$chi-body*$7906$RCJqu
                                                         (cdr g$e*$10153$RCJqu)
                                                         (g$add-lexical$7809$RCJqu
                                                           g$lab$10288$RCJqu
                                                           g$lex$10287$RCJqu
                                                           g$r$10154$RCJqu)
                                                         g$mr$10155$RCJqu
                                                         (cons
                                                           g$lex$10287$RCJqu
                                                           g$lex*$10156$RCJqu)
                                                         (cons
                                                           g$rhs$10281$RCJqu
                                                           g$rhs*$10157$RCJqu)
                                                         g$mod**$10158$RCJqu
                                                         g$kwd*$10172$RCJqu
                                                         g$rib$10160$RCJqu
                                                         g$top?$10161$RCJqu))))
                                                  g$lex$10286$RCJqu
                                                  g$lab$10285$RCJqu)))))))
                                       g$rhs$10280$RCJqu
                                       g$id$10279$RCJqu))))
                                 (if (eqv? g$t$10173$RCJqu 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7803$RCJqu
                                          g$e$10162$RCJqu)))
                                     (case-lambda
                                       ((g$id$10270$RCJqu g$rhs$10271$RCJqu)
                                        ((case-lambda
                                           ((g$rhs$10272$RCJqu g$id$10273$RCJqu)
                                            (begin
                                              (if (g$bound-id-member?$7591$RCJqu
                                                    g$id$10273$RCJqu
                                                    g$kwd*$10172$RCJqu)
                                                (g$syntax-violation$7968$RCJqu
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10162$RCJqu)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10274$RCJqu
                                                    g$expanded-rhs$10275$RCJqu)
                                                  (begin
                                                    (g$extend-rib!$7548$RCJqu
                                                      g$rib$10160$RCJqu
                                                      g$id$10273$RCJqu
                                                      g$lab$10274$RCJqu)
                                                    ((case-lambda
                                                       ((g$b$10276$RCJqu)
                                                        (g$chi-body*$7906$RCJqu
                                                          (cdr g$e*$10153$RCJqu)
                                                          (cons
                                                            (cons
                                                              g$lab$10274$RCJqu
                                                              g$b$10276$RCJqu)
                                                            g$r$10154$RCJqu)
                                                          (cons
                                                            (cons
                                                              g$lab$10274$RCJqu
                                                              g$b$10276$RCJqu)
                                                            g$mr$10155$RCJqu)
                                                          g$lex*$10156$RCJqu
                                                          g$rhs*$10157$RCJqu
                                                          g$mod**$10158$RCJqu
                                                          g$kwd*$10172$RCJqu
                                                          g$rib$10160$RCJqu
                                                          g$top?$10161$RCJqu)))
                                                     (g$make-eval-transformer$7616$RCJqu
                                                       g$expanded-rhs$10275$RCJqu)))))
                                               (g$gen-define-label$7533$RCJqu
                                                 g$id$10273$RCJqu
                                                 g$rib$10160$RCJqu)
                                               (g$expand-transformer$7907$RCJqu
                                                 g$rhs$10272$RCJqu
                                                 g$mr$10155$RCJqu)))))
                                         g$rhs$10271$RCJqu
                                         g$id$10270$RCJqu))))
                                   (if (memv
                                         g$t$10173$RCJqu
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10255$RCJqu)
                                         ((case-lambda
                                            ((g$ls/false$10256$RCJqu)
                                             (if (if g$ls/false$10256$RCJqu
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10257$RCJqu
                                                            g$xrhs*$10258$RCJqu
                                                            g$xbody*$10259$RCJqu)
                                                          (if (g$valid-bound-ids?$7589$RCJqu
                                                                g$xlhs*$10257$RCJqu)
                                                            (void)
                                                            (g$syntax-violation$7968$RCJqu
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10162$RCJqu))))
                                                       g$ls/false$10256$RCJqu))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10260$RCJqu
                                                      g$xrhs*$10261$RCJqu
                                                      g$xbody*$10262$RCJqu)
                                                    ((case-lambda
                                                       ((g$xlab*$10263$RCJqu)
                                                        ((case-lambda
                                                           ((g$xrib$10264$RCJqu)
                                                            ((case-lambda
                                                               ((g$xb*$10265$RCJqu)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7906$RCJqu
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$10266$RCJqu)
                                                                                (g$add-subst$7574$RCJqu
                                                                                  g$xrib$10264$RCJqu
                                                                                  g$x$10266$RCJqu)))
                                                                             g$xbody*$10262$RCJqu)
                                                                        (cdr g$e*$10153$RCJqu))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10263$RCJqu
                                                                             g$xb*$10265$RCJqu)
                                                                        g$r$10154$RCJqu)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10263$RCJqu
                                                                             g$xb*$10265$RCJqu)
                                                                        g$mr$10155$RCJqu)
                                                                      g$lex*$10156$RCJqu
                                                                      g$rhs*$10157$RCJqu
                                                                      g$mod**$10158$RCJqu
                                                                      g$kwd*$10172$RCJqu
                                                                      g$rib$10160$RCJqu
                                                                      g$top?$10161$RCJqu))))))
                                                             (map (case-lambda
                                                                    ((g$x$10267$RCJqu)
                                                                     (g$make-eval-transformer$7616$RCJqu
                                                                       (g$expand-transformer$7907$RCJqu
                                                                         (if (eq? g$type$10171$RCJqu
                                                                                  'let-syntax)
                                                                           g$x$10267$RCJqu
                                                                           (g$add-subst$7574$RCJqu
                                                                             g$xrib$10264$RCJqu
                                                                             g$x$10267$RCJqu))
                                                                         g$mr$10155$RCJqu))))
                                                                  g$xrhs*$10261$RCJqu))))
                                                         (g$make-full-rib$7552$RCJqu
                                                           g$xlhs*$10260$RCJqu
                                                           g$xlab*$10263$RCJqu))))
                                                     (map g$gen-label$7530$RCJqu
                                                          g$xlhs*$10260$RCJqu))))
                                                 g$ls/false$10256$RCJqu)
                                               (g$syntax-violation$7968$RCJqu
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10255$RCJqu))))
                                          (g$syntax-dispatch$7862$RCJqu
                                            g$t$10255$RCJqu
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10162$RCJqu)
                                     (if (eqv? g$t$10173$RCJqu 'begin)
                                       ((case-lambda
                                          ((g$t$10252$RCJqu)
                                           ((case-lambda
                                              ((g$ls/false$10253$RCJqu)
                                               (if g$ls/false$10253$RCJqu
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10254$RCJqu)
                                                      (g$chi-body*$7906$RCJqu
                                                        (append
                                                          g$x*$10254$RCJqu
                                                          (cdr g$e*$10153$RCJqu))
                                                        g$r$10154$RCJqu
                                                        g$mr$10155$RCJqu
                                                        g$lex*$10156$RCJqu
                                                        g$rhs*$10157$RCJqu
                                                        g$mod**$10158$RCJqu
                                                        g$kwd*$10172$RCJqu
                                                        g$rib$10160$RCJqu
                                                        g$top?$10161$RCJqu)))
                                                   g$ls/false$10253$RCJqu)
                                                 (g$syntax-violation$7968$RCJqu
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10252$RCJqu))))
                                            (g$syntax-dispatch$7862$RCJqu
                                              g$t$10252$RCJqu
                                              '(_ . each-any)))))
                                        g$e$10162$RCJqu)
                                       (if (memv
                                             g$t$10173$RCJqu
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7906$RCJqu
                                           (cons
                                             (g$add-subst$7574$RCJqu
                                               g$rib$10160$RCJqu
                                               (g$chi-global-macro$7877$RCJqu
                                                 g$value$10170$RCJqu
                                                 g$e$10162$RCJqu))
                                             (cdr g$e*$10153$RCJqu))
                                           g$r$10154$RCJqu
                                           g$mr$10155$RCJqu
                                           g$lex*$10156$RCJqu
                                           g$rhs*$10157$RCJqu
                                           g$mod**$10158$RCJqu
                                           g$kwd*$10172$RCJqu
                                           g$rib$10160$RCJqu
                                           g$top?$10161$RCJqu)
                                         (if (memv
                                               g$t$10173$RCJqu
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7906$RCJqu
                                             (cons
                                               (g$add-subst$7574$RCJqu
                                                 g$rib$10160$RCJqu
                                                 (g$chi-local-macro$7876$RCJqu
                                                   g$value$10170$RCJqu
                                                   g$e$10162$RCJqu))
                                               (cdr g$e*$10153$RCJqu))
                                             g$r$10154$RCJqu
                                             g$mr$10155$RCJqu
                                             g$lex*$10156$RCJqu
                                             g$rhs*$10157$RCJqu
                                             g$mod**$10158$RCJqu
                                             g$kwd*$10172$RCJqu
                                             g$rib$10160$RCJqu
                                             g$top?$10161$RCJqu)
                                           (if (memv
                                                 g$t$10173$RCJqu
                                                 '(macro macro!))
                                             (g$chi-body*$7906$RCJqu
                                               (cons
                                                 (g$add-subst$7574$RCJqu
                                                   g$rib$10160$RCJqu
                                                   (g$chi-macro$7875$RCJqu
                                                     g$value$10170$RCJqu
                                                     g$e$10162$RCJqu))
                                                 (cdr g$e*$10153$RCJqu))
                                               g$r$10154$RCJqu
                                               g$mr$10155$RCJqu
                                               g$lex*$10156$RCJqu
                                               g$rhs*$10157$RCJqu
                                               g$mod**$10158$RCJqu
                                               g$kwd*$10172$RCJqu
                                               g$rib$10160$RCJqu
                                               g$top?$10161$RCJqu)
                                             (if (eqv? g$t$10173$RCJqu 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7905$RCJqu
                                                      g$e$10162$RCJqu
                                                      g$r$10154$RCJqu
                                                      g$mr$10155$RCJqu
                                                      g$lex*$10156$RCJqu
                                                      g$rhs*$10157$RCJqu
                                                      g$mod**$10158$RCJqu
                                                      g$kwd*$10172$RCJqu)))
                                                 (case-lambda
                                                   ((g$lex*$10234$RCJqu
                                                      g$rhs*$10235$RCJqu
                                                      g$m-exp-id*$10236$RCJqu
                                                      g$m-exp-lab*$10237$RCJqu
                                                      g$r$10238$RCJqu
                                                      g$mr$10239$RCJqu
                                                      g$mod**$10240$RCJqu
                                                      g$kwd*$10241$RCJqu)
                                                    ((case-lambda
                                                       ((g$kwd*$10242$RCJqu
                                                          g$mod**$10243$RCJqu
                                                          g$mr$10244$RCJqu
                                                          g$r$10245$RCJqu
                                                          g$m-exp-lab*$10246$RCJqu
                                                          g$m-exp-id*$10247$RCJqu
                                                          g$rhs*$10248$RCJqu
                                                          g$lex*$10249$RCJqu)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10250$RCJqu
                                                                 g$lab$10251$RCJqu)
                                                               (g$extend-rib!$7548$RCJqu
                                                                 g$rib$10160$RCJqu
                                                                 g$id$10250$RCJqu
                                                                 g$lab$10251$RCJqu)))
                                                            g$m-exp-id*$10247$RCJqu
                                                            g$m-exp-lab*$10246$RCJqu)
                                                          (g$chi-body*$7906$RCJqu
                                                            (cdr g$e*$10153$RCJqu)
                                                            g$r$10245$RCJqu
                                                            g$mr$10244$RCJqu
                                                            g$lex*$10249$RCJqu
                                                            g$rhs*$10248$RCJqu
                                                            g$mod**$10243$RCJqu
                                                            g$kwd*$10242$RCJqu
                                                            g$rib$10160$RCJqu
                                                            g$top?$10161$RCJqu))))
                                                     g$kwd*$10241$RCJqu
                                                     g$mod**$10240$RCJqu
                                                     g$mr$10239$RCJqu
                                                     g$r$10238$RCJqu
                                                     g$m-exp-lab*$10237$RCJqu
                                                     g$m-exp-id*$10236$RCJqu
                                                     g$rhs*$10235$RCJqu
                                                     g$lex*$10234$RCJqu))))
                                               (if (eqv?
                                                     g$t$10173$RCJqu
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7955$RCJqu
                                                     (g$stx->datum$7595$RCJqu
                                                       g$e$10162$RCJqu))
                                                   (g$chi-body*$7906$RCJqu
                                                     (cdr g$e*$10153$RCJqu)
                                                     g$r$10154$RCJqu
                                                     g$mr$10155$RCJqu
                                                     g$lex*$10156$RCJqu
                                                     g$rhs*$10157$RCJqu
                                                     g$mod**$10158$RCJqu
                                                     g$kwd*$10172$RCJqu
                                                     g$rib$10160$RCJqu
                                                     g$top?$10161$RCJqu))
                                                 (if (eqv?
                                                       g$t$10173$RCJqu
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10174$RCJqu
                                                                     (case-lambda
                                                                       ((g$e$10216$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$t$10217$RCJqu)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10218$RCJqu)
                                                                                (if (if g$ls/false$10218$RCJqu
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10219$RCJqu)
                                                                                             (g$id?$7584$RCJqu
                                                                                               g$id$10219$RCJqu)))
                                                                                          g$ls/false$10218$RCJqu))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10220$RCJqu)
                                                                                       '#t))
                                                                                    g$ls/false$10218$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$t$10221$RCJqu)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10222$RCJqu)
                                                                                          (if g$ls/false$10222$RCJqu
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10223$RCJqu)
                                                                                                 '#f))
                                                                                              g$ls/false$10222$RCJqu)
                                                                                            ((case-lambda
                                                                                               ((g$t$10224$RCJqu)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10225$RCJqu)
                                                                                                    (if g$ls/false$10225$RCJqu
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7968$RCJqu
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10216$RCJqu)))
                                                                                                        g$ls/false$10225$RCJqu)
                                                                                                      (g$syntax-violation$7968$RCJqu
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10224$RCJqu))))
                                                                                                 (g$syntax-dispatch$7862$RCJqu
                                                                                                   g$t$10224$RCJqu
                                                                                                   '_))))
                                                                                             g$t$10221$RCJqu))))
                                                                                       (g$syntax-dispatch$7862$RCJqu
                                                                                         g$t$10221$RCJqu
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10217$RCJqu))))
                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                               g$t$10217$RCJqu
                                                                               '(_ any)))))
                                                                         g$e$10216$RCJqu))))
                                                                   (g$module-import$10175$RCJqu
                                                                     (case-lambda
                                                                       ((g$e$10199$RCJqu
                                                                          g$r$10200$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$t$10201$RCJqu)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10202$RCJqu)
                                                                                (if (if g$ls/false$10202$RCJqu
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10203$RCJqu)
                                                                                             (g$id?$7584$RCJqu
                                                                                               g$id$10203$RCJqu)))
                                                                                          g$ls/false$10202$RCJqu))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10204$RCJqu)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7604$RCJqu
                                                                                              g$id$10204$RCJqu
                                                                                              g$r$10200$RCJqu)))
                                                                                         (case-lambda
                                                                                           ((g$type$10208$RCJqu
                                                                                              g$value$10209$RCJqu
                                                                                              g$kwd$10210$RCJqu)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10211$RCJqu
                                                                                                  g$value$10212$RCJqu
                                                                                                  g$type$10213$RCJqu)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10214$RCJqu)
                                                                                                    (if (eqv?
                                                                                                          g$t$10214$RCJqu
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10215$RCJqu)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7904$RCJqu
                                                                                                              g$iface$10215$RCJqu
                                                                                                              g$id$10204$RCJqu)
                                                                                                            (g$module-interface-exp-lab-vec$7900$RCJqu
                                                                                                              g$iface$10215$RCJqu))))
                                                                                                       g$value$10212$RCJqu)
                                                                                                      (g$syntax-violation$7968$RCJqu
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10199$RCJqu))))
                                                                                                 g$type$10213$RCJqu)))
                                                                                             g$kwd$10210$RCJqu
                                                                                             g$value$10209$RCJqu
                                                                                             g$type$10208$RCJqu))))))
                                                                                    g$ls/false$10202$RCJqu)
                                                                                  (g$syntax-violation$7968$RCJqu
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10201$RCJqu))))
                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                               g$t$10201$RCJqu
                                                                               '(_ any)))))
                                                                         g$e$10199$RCJqu))))
                                                                   (g$library-import$10176$RCJqu
                                                                     (case-lambda
                                                                       ((g$e$10185$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$t$10186$RCJqu)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10187$RCJqu)
                                                                                (if g$ls/false$10187$RCJqu
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10188$RCJqu
                                                                                         g$imp*$10189$RCJqu)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7911$RCJqu
                                                                                              (g$syntax->datum$7971$RCJqu
                                                                                                g$imp*$10189$RCJqu))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10192$RCJqu
                                                                                              g$subst-labels$10193$RCJqu)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10194$RCJqu
                                                                                                  g$subst-names$10195$RCJqu)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10196$RCJqu)
                                                                                                       (g$datum->stx$7567$RCJqu
                                                                                                         g$ctxt$10188$RCJqu
                                                                                                         g$name$10196$RCJqu)))
                                                                                                    g$subst-names$10195$RCJqu)
                                                                                                  g$subst-labels$10194$RCJqu)))
                                                                                             g$subst-labels$10193$RCJqu
                                                                                             g$subst-names$10192$RCJqu))))))
                                                                                    g$ls/false$10187$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$t$10197$RCJqu)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10198$RCJqu)
                                                                                          (if g$ls/false$10198$RCJqu
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7968$RCJqu
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10185$RCJqu)))
                                                                                              g$ls/false$10198$RCJqu)
                                                                                            (g$syntax-violation$7968$RCJqu
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10197$RCJqu))))
                                                                                       (g$syntax-dispatch$7862$RCJqu
                                                                                         g$t$10197$RCJqu
                                                                                         '_))))
                                                                                   g$t$10186$RCJqu))))
                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                               g$t$10186$RCJqu
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10185$RCJqu)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10174$RCJqu
                                                                      g$e$10162$RCJqu)
                                                                  (g$module-import$10175$RCJqu
                                                                    g$e$10162$RCJqu
                                                                    g$r$10154$RCJqu)
                                                                  (g$library-import$10176$RCJqu
                                                                    g$e$10162$RCJqu))))
                                                             (case-lambda
                                                               ((g$id*$10179$RCJqu
                                                                  g$lab*$10180$RCJqu)
                                                                ((case-lambda
                                                                   ((g$lab*$10181$RCJqu
                                                                      g$id*$10182$RCJqu)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10183$RCJqu
                                                                           g$lab$10184$RCJqu)
                                                                         (g$extend-rib!$7548$RCJqu
                                                                           g$rib$10160$RCJqu
                                                                           g$id$10183$RCJqu
                                                                           g$lab$10184$RCJqu)))
                                                                      g$id*$10182$RCJqu
                                                                      g$lab*$10181$RCJqu)))
                                                                 g$lab*$10180$RCJqu
                                                                 g$id*$10179$RCJqu))))))))
                                                     (g$chi-body*$7906$RCJqu
                                                       (cdr g$e*$10153$RCJqu)
                                                       g$r$10154$RCJqu
                                                       g$mr$10155$RCJqu
                                                       g$lex*$10156$RCJqu
                                                       g$rhs*$10157$RCJqu
                                                       g$mod**$10158$RCJqu
                                                       g$kwd*$10172$RCJqu
                                                       g$rib$10160$RCJqu
                                                       g$top?$10161$RCJqu))
                                                   (if g$top?$10161$RCJqu
                                                     (g$chi-body*$7906$RCJqu
                                                       (cdr g$e*$10153$RCJqu)
                                                       g$r$10154$RCJqu
                                                       g$mr$10155$RCJqu
                                                       (cons
                                                         (g$gen-lexical$7528$RCJqu
                                                           'dummy)
                                                         g$lex*$10156$RCJqu)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$10162$RCJqu)
                                                         g$rhs*$10157$RCJqu)
                                                       g$mod**$10158$RCJqu
                                                       g$kwd*$10172$RCJqu
                                                       g$rib$10160$RCJqu
                                                       g$top?$10161$RCJqu)
                                                     (values
                                                       g$e*$10153$RCJqu
                                                       g$r$10154$RCJqu
                                                       g$mr$10155$RCJqu
                                                       g$lex*$10156$RCJqu
                                                       g$rhs*$10157$RCJqu
                                                       g$mod**$10158$RCJqu
                                                       g$kwd*$10172$RCJqu))))))))))))))
                            g$type$10171$RCJqu)))
                        (if (g$id?$7584$RCJqu g$kwd$10169$RCJqu)
                          (cons g$kwd$10169$RCJqu g$kwd*$10159$RCJqu)
                          g$kwd*$10159$RCJqu))))
                    g$kwd$10168$RCJqu
                    g$value$10167$RCJqu
                    g$type$10166$RCJqu))))))
           (car g$e*$10153$RCJqu))))))
   (g$expand-transformer$7907$RCJqu
     g$expand-transformer$11357$RCJqu
     (case-lambda
       ((g$expr$10289$RCJqu g$r$10290$RCJqu)
        ((case-lambda
           ((g$rtc$10291$RCJqu)
            ((case-lambda
               ((g$expanded-rhs$10292$RCJqu)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10293$RCJqu)
                        (case-lambda
                          ((g$x$10294$RCJqu)
                           (begin
                             (g$invoke-library$7399$RCJqu g$x$10294$RCJqu)
                             (g$mark-visit$10293$RCJqu g$x$10294$RCJqu))))))
                     (g$vis-collector$7915$RCJqu))
                    (g$rtc$10291$RCJqu))
                  g$expanded-rhs$10292$RCJqu)))
             ((case-lambda
                ((g$inv-collector$10299$RCJqu
                   g$vis-collector$10300$RCJqu
                   g$inv-collector$10301$RCJqu
                   g$vis-collector$10302$RCJqu)
                 ((case-lambda
                    ((g$swap$10303$RCJqu)
                     (dynamic-wind
                       g$swap$10303$RCJqu
                       (case-lambda
                         (()
                          (g$chi-expr$7880$RCJqu
                            g$expr$10289$RCJqu
                            g$r$10290$RCJqu
                            g$r$10290$RCJqu)))
                       g$swap$10303$RCJqu)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10304$RCJqu)
                           (begin
                             (g$inv-collector$10299$RCJqu
                               g$inv-collector$10301$RCJqu)
                             (set! g$inv-collector$10301$RCJqu
                               g$t$10304$RCJqu))))
                        (g$inv-collector$10299$RCJqu))
                       ((case-lambda
                          ((g$t$10305$RCJqu)
                           (begin
                             (g$vis-collector$10300$RCJqu
                               g$vis-collector$10302$RCJqu)
                             (set! g$vis-collector$10302$RCJqu
                               g$t$10305$RCJqu))))
                        (g$vis-collector$10300$RCJqu))))))))
              g$inv-collector$7914$RCJqu
              g$vis-collector$7915$RCJqu
              g$rtc$10291$RCJqu
              (case-lambda ((g$x$10306$RCJqu) (values)))))))
         (g$make-collector$7913$RCJqu)))))
   (g$parse-exports$7908$RCJqu
     g$parse-exports$11358$RCJqu
     (case-lambda
       ((g$exp*$10307$RCJqu)
        (letrec* ((g$idsyn?$10308$RCJqu
                    (case-lambda
                      ((g$x$10323$RCJqu)
                       (symbol?
                         (g$syntax->datum$7971$RCJqu g$x$10323$RCJqu))))))
          ((letrec ((g$f$10309$RCJqu
                      (case-lambda
                        ((g$exp*$10310$RCJqu
                           g$int*$10311$RCJqu
                           g$ext*$10312$RCJqu)
                         (if (null? g$exp*$10310$RCJqu)
                           (begin
                             ((case-lambda
                                ((g$id*$10313$RCJqu)
                                 (if (g$valid-bound-ids?$7589$RCJqu
                                       g$id*$10313$RCJqu)
                                   (void)
                                   (g$syntax-violation$7968$RCJqu
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7890$RCJqu
                                       g$id*$10313$RCJqu)))))
                              (map (case-lambda
                                     ((g$x$10314$RCJqu)
                                      (g$make-stx$7557$RCJqu
                                        g$x$10314$RCJqu
                                        g$top-mark*$7526$RCJqu
                                        '()
                                        '())))
                                   g$ext*$10312$RCJqu))
                             (values
                               (map g$syntax->datum$7971$RCJqu
                                    g$int*$10311$RCJqu)
                               (map g$syntax->datum$7971$RCJqu
                                    g$ext*$10312$RCJqu)))
                           ((case-lambda
                              ((g$t$10315$RCJqu)
                               ((case-lambda
                                  ((g$ls/false$10316$RCJqu)
                                   (if g$ls/false$10316$RCJqu
                                     (apply
                                       (case-lambda
                                         ((g$rename$10317$RCJqu
                                            g$i*$10318$RCJqu
                                            g$e*$10319$RCJqu)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7971$RCJqu
                                                           g$rename$10317$RCJqu)
                                                         'rename)
                                                  (if (g$for-all$6012$RCJqu
                                                        g$idsyn?$10308$RCJqu
                                                        g$i*$10318$RCJqu)
                                                    (begin
                                                      '#f
                                                      (g$for-all$6012$RCJqu
                                                        g$idsyn?$10308$RCJqu
                                                        g$e*$10319$RCJqu))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7968$RCJqu
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10310$RCJqu)))
                                            (g$f$10309$RCJqu
                                              (cdr g$exp*$10310$RCJqu)
                                              (append
                                                g$i*$10318$RCJqu
                                                g$int*$10311$RCJqu)
                                              (append
                                                g$e*$10319$RCJqu
                                                g$ext*$10312$RCJqu)))))
                                       g$ls/false$10316$RCJqu)
                                     ((case-lambda
                                        ((g$t$10320$RCJqu)
                                         ((case-lambda
                                            ((g$ls/false$10321$RCJqu)
                                             (if g$ls/false$10321$RCJqu
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10322$RCJqu)
                                                    (begin
                                                      (if (g$idsyn?$10308$RCJqu
                                                            g$ie$10322$RCJqu)
                                                        (void)
                                                        (g$syntax-violation$7968$RCJqu
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10322$RCJqu))
                                                      (g$f$10309$RCJqu
                                                        (cdr g$exp*$10310$RCJqu)
                                                        (cons
                                                          g$ie$10322$RCJqu
                                                          g$int*$10311$RCJqu)
                                                        (cons
                                                          g$ie$10322$RCJqu
                                                          g$ext*$10312$RCJqu)))))
                                                 g$ls/false$10321$RCJqu)
                                               (g$syntax-violation$7968$RCJqu
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10320$RCJqu))))
                                          (g$syntax-dispatch$7862$RCJqu
                                            g$t$10320$RCJqu
                                            'any))))
                                      g$t$10315$RCJqu))))
                                (g$syntax-dispatch$7862$RCJqu
                                  g$t$10315$RCJqu
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10310$RCJqu)))))))
             g$f$10309$RCJqu)
           g$exp*$10307$RCJqu
           '()
           '())))))
   (g$parse-library-name$7909$RCJqu
     g$parse-library-name$11359$RCJqu
     (case-lambda
       ((g$spec$10324$RCJqu)
        (letrec* ((g$parse$10325$RCJqu
                    (case-lambda
                      ((g$x$10332$RCJqu)
                       ((case-lambda
                          ((g$t$10333$RCJqu)
                           ((case-lambda
                              ((g$ls/false$10334$RCJqu)
                               (if (if g$ls/false$10334$RCJqu
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10335$RCJqu)
                                            (g$for-all$6012$RCJqu
                                              (case-lambda
                                                ((g$x$10336$RCJqu)
                                                 ((case-lambda
                                                    ((g$x$10337$RCJqu)
                                                     (if (integer?
                                                           g$x$10337$RCJqu)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10337$RCJqu))
                                                       '#f)))
                                                  (g$syntax->datum$7971$RCJqu
                                                    g$x$10336$RCJqu))))
                                              g$v*$10335$RCJqu)))
                                         g$ls/false$10334$RCJqu))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10338$RCJqu)
                                      (values
                                        '()
                                        (map g$syntax->datum$7971$RCJqu
                                             g$v*$10338$RCJqu))))
                                   g$ls/false$10334$RCJqu)
                                 ((case-lambda
                                    ((g$t$10339$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$10340$RCJqu)
                                         (if (if g$ls/false$10340$RCJqu
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10341$RCJqu
                                                        g$rest$10342$RCJqu)
                                                      (symbol?
                                                        (g$syntax->datum$7971$RCJqu
                                                          g$x$10341$RCJqu))))
                                                   g$ls/false$10340$RCJqu))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10343$RCJqu
                                                  g$rest$10344$RCJqu)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10325$RCJqu
                                                       g$rest$10344$RCJqu)))
                                                  (case-lambda
                                                    ((g$x*$10347$RCJqu
                                                       g$v*$10348$RCJqu)
                                                     ((case-lambda
                                                        ((g$v*$10349$RCJqu
                                                           g$x*$10350$RCJqu)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7971$RCJqu
                                                               g$x$10343$RCJqu)
                                                             g$x*$10350$RCJqu)
                                                           g$v*$10349$RCJqu)))
                                                      g$v*$10348$RCJqu
                                                      g$x*$10347$RCJqu))))))
                                             g$ls/false$10340$RCJqu)
                                           ((case-lambda
                                              ((g$t$10351$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$10352$RCJqu)
                                                   (if g$ls/false$10352$RCJqu
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10352$RCJqu)
                                                     ((case-lambda
                                                        ((g$t$10353$RCJqu)
                                                         ((case-lambda
                                                            ((g$ls/false$10354$RCJqu)
                                                             (if g$ls/false$10354$RCJqu
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7968$RCJqu
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10324$RCJqu)))
                                                                 g$ls/false$10354$RCJqu)
                                                               (g$syntax-violation$7968$RCJqu
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10353$RCJqu))))
                                                          (g$syntax-dispatch$7862$RCJqu
                                                            g$t$10353$RCJqu
                                                            '_))))
                                                      g$t$10351$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$10351$RCJqu
                                                  '()))))
                                            g$t$10339$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$10339$RCJqu
                                        '(any . any)))))
                                  g$t$10333$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$10333$RCJqu
                              '(each-any)))))
                        g$x$10332$RCJqu)))))
          (call-with-values
            (case-lambda (() (g$parse$10325$RCJqu g$spec$10324$RCJqu)))
            (case-lambda
              ((g$name*$10328$RCJqu g$ver*$10329$RCJqu)
               ((case-lambda
                  ((g$ver*$10330$RCJqu g$name*$10331$RCJqu)
                   (begin
                     (if (null? g$name*$10331$RCJqu)
                       (g$syntax-violation$7968$RCJqu
                         '#f
                         '"empty library name"
                         g$spec$10324$RCJqu)
                       (void))
                     (values g$name*$10331$RCJqu g$ver*$10330$RCJqu))))
                g$ver*$10329$RCJqu
                g$name*$10328$RCJqu))))))))
   (g$parse-library$7910$RCJqu
     g$parse-library$11360$RCJqu
     (case-lambda
       ((g$e$10355$RCJqu)
        ((case-lambda
           ((g$t$10356$RCJqu)
            ((case-lambda
               ((g$ls/false$10357$RCJqu)
                (if (if g$ls/false$10357$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10358$RCJqu
                               g$name*$10359$RCJqu
                               g$export$10360$RCJqu
                               g$exp*$10361$RCJqu
                               g$import$10362$RCJqu
                               g$imp*$10363$RCJqu
                               g$b*$10364$RCJqu)
                             (if (eq? (g$syntax->datum$7971$RCJqu
                                        g$export$10360$RCJqu)
                                      'export)
                               (if (eq? (g$syntax->datum$7971$RCJqu
                                          g$import$10362$RCJqu)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7971$RCJqu
                                          g$library$10358$RCJqu)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10357$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10365$RCJqu
                         g$name*$10366$RCJqu
                         g$export$10367$RCJqu
                         g$exp*$10368$RCJqu
                         g$import$10369$RCJqu
                         g$imp*$10370$RCJqu
                         g$b*$10371$RCJqu)
                       (values
                         g$name*$10366$RCJqu
                         g$exp*$10368$RCJqu
                         g$imp*$10370$RCJqu
                         g$b*$10371$RCJqu)))
                    g$ls/false$10357$RCJqu)
                  ((case-lambda
                     ((g$t$10372$RCJqu)
                      ((case-lambda
                         ((g$ls/false$10373$RCJqu)
                          (if g$ls/false$10373$RCJqu
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7968$RCJqu
                                   '#f
                                   '"malformed library"
                                   g$e$10355$RCJqu)))
                              g$ls/false$10373$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$10372$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu g$t$10372$RCJqu '_))))
                   g$t$10356$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$10356$RCJqu
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10355$RCJqu))))
   (g$parse-import-spec*$7911$RCJqu
     g$parse-import-spec*$11361$RCJqu
     (case-lambda
       ((g$imp*$10374$RCJqu)
        (letrec* ((g$idsyn?$10375$RCJqu
                    (case-lambda
                      ((g$x$10634$RCJqu)
                       (symbol? (g$syntax->datum$7971$RCJqu g$x$10634$RCJqu)))))
                  (g$dup-error$10376$RCJqu
                    (case-lambda
                      ((g$name$10633$RCJqu)
                       (g$syntax-violation$7968$RCJqu
                         'import
                         '"two imports with different bindings"
                         g$name$10633$RCJqu))))
                  (g$merge-substs$10377$RCJqu
                    (case-lambda
                      ((g$s$10624$RCJqu g$subst$10625$RCJqu)
                       (letrec* ((g$insert-to-subst$10626$RCJqu
                                   (case-lambda
                                     ((g$a$10627$RCJqu g$subst$10628$RCJqu)
                                      ((case-lambda
                                         ((g$name$10629$RCJqu
                                            g$label$10630$RCJqu)
                                          ((case-lambda
                                             ((g$t$10631$RCJqu)
                                              (if g$t$10631$RCJqu
                                                ((case-lambda
                                                   ((g$x$10632$RCJqu)
                                                    (if (eq? (cdr g$x$10632$RCJqu)
                                                             g$label$10630$RCJqu)
                                                      g$subst$10628$RCJqu
                                                      (g$dup-error$10376$RCJqu
                                                        g$name$10629$RCJqu))))
                                                 g$t$10631$RCJqu)
                                                (cons
                                                  g$a$10627$RCJqu
                                                  g$subst$10628$RCJqu))))
                                           (assq
                                             g$name$10629$RCJqu
                                             g$subst$10628$RCJqu))))
                                       (car g$a$10627$RCJqu)
                                       (cdr g$a$10627$RCJqu))))))
                         (if (null? g$s$10624$RCJqu)
                           g$subst$10625$RCJqu
                           (g$insert-to-subst$10626$RCJqu
                             (car g$s$10624$RCJqu)
                             (g$merge-substs$10377$RCJqu
                               (cdr g$s$10624$RCJqu)
                               g$subst$10625$RCJqu)))))))
                  (g$exclude*$10378$RCJqu
                    (case-lambda
                      ((g$sym*$10600$RCJqu g$subst$10601$RCJqu)
                       (letrec* ((g$exclude$10602$RCJqu
                                   (case-lambda
                                     ((g$sym$10615$RCJqu g$subst$10616$RCJqu)
                                      (if (null? g$subst$10616$RCJqu)
                                        (g$syntax-violation$7968$RCJqu
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10615$RCJqu)
                                        (if (eq? g$sym$10615$RCJqu
                                                 (g$caar$5542$RCJqu
                                                   g$subst$10616$RCJqu))
                                          (values
                                            (g$cdar$5544$RCJqu
                                              g$subst$10616$RCJqu)
                                            (cdr g$subst$10616$RCJqu))
                                          ((case-lambda
                                             ((g$a$10617$RCJqu)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10602$RCJqu
                                                     g$sym$10615$RCJqu
                                                     (cdr g$subst$10616$RCJqu))))
                                                (case-lambda
                                                  ((g$old$10620$RCJqu
                                                     g$subst$10621$RCJqu)
                                                   ((case-lambda
                                                      ((g$subst$10622$RCJqu
                                                         g$old$10623$RCJqu)
                                                       (values
                                                         g$old$10623$RCJqu
                                                         (cons
                                                           g$a$10617$RCJqu
                                                           g$subst$10622$RCJqu))))
                                                    g$subst$10621$RCJqu
                                                    g$old$10620$RCJqu))))))
                                           (car g$subst$10616$RCJqu))))))))
                         (if (null? g$sym*$10600$RCJqu)
                           (values '() g$subst$10601$RCJqu)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10602$RCJqu
                                  (car g$sym*$10600$RCJqu)
                                  g$subst$10601$RCJqu)))
                             (case-lambda
                               ((g$old$10605$RCJqu g$subst$10606$RCJqu)
                                ((case-lambda
                                   ((g$subst$10607$RCJqu g$old$10608$RCJqu)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10378$RCJqu
                                           (cdr g$sym*$10600$RCJqu)
                                           g$subst$10607$RCJqu)))
                                      (case-lambda
                                        ((g$old*$10611$RCJqu
                                           g$subst$10612$RCJqu)
                                         ((case-lambda
                                            ((g$subst$10613$RCJqu
                                               g$old*$10614$RCJqu)
                                             (values
                                               (cons
                                                 g$old$10608$RCJqu
                                                 g$old*$10614$RCJqu)
                                               g$subst$10613$RCJqu)))
                                          g$subst$10612$RCJqu
                                          g$old*$10611$RCJqu))))))
                                 g$subst$10606$RCJqu
                                 g$old$10605$RCJqu)))))))))
                  (g$find*$10379$RCJqu
                    (case-lambda
                      ((g$sym*$10596$RCJqu g$subst$10597$RCJqu)
                       (map (case-lambda
                              ((g$x$10598$RCJqu)
                               ((case-lambda
                                  ((g$t$10599$RCJqu)
                                   (if g$t$10599$RCJqu
                                     (cdr g$t$10599$RCJqu)
                                     (g$syntax-violation$7968$RCJqu
                                       'import
                                       '"cannot find identifier"
                                       g$x$10598$RCJqu))))
                                (assq g$x$10598$RCJqu g$subst$10597$RCJqu))))
                            g$sym*$10596$RCJqu))))
                  (g$rem*$10380$RCJqu
                    (case-lambda
                      ((g$sym*$10592$RCJqu g$subst$10593$RCJqu)
                       ((letrec ((g$f$10594$RCJqu
                                   (case-lambda
                                     ((g$subst$10595$RCJqu)
                                      (if (null? g$subst$10595$RCJqu)
                                        '()
                                        (if (memq
                                              (g$caar$5542$RCJqu
                                                g$subst$10595$RCJqu)
                                              g$sym*$10592$RCJqu)
                                          (g$f$10594$RCJqu
                                            (cdr g$subst$10595$RCJqu))
                                          (cons
                                            (car g$subst$10595$RCJqu)
                                            (g$f$10594$RCJqu
                                              (cdr g$subst$10595$RCJqu)))))))))
                          g$f$10594$RCJqu)
                        g$subst$10593$RCJqu))))
                  (g$remove-dups$10381$RCJqu
                    (case-lambda
                      ((g$ls$10591$RCJqu)
                       (if (null? g$ls$10591$RCJqu)
                         '()
                         (if (memq
                               (car g$ls$10591$RCJqu)
                               (cdr g$ls$10591$RCJqu))
                           (g$remove-dups$10381$RCJqu (cdr g$ls$10591$RCJqu))
                           (cons
                             (car g$ls$10591$RCJqu)
                             (g$remove-dups$10381$RCJqu
                               (cdr g$ls$10591$RCJqu))))))))
                  (g$parse-library-name$10382$RCJqu
                    (case-lambda
                      ((g$spec$10476$RCJqu)
                       (letrec* ((g$subversion?$10477$RCJqu
                                   (case-lambda
                                     ((g$x$10590$RCJqu)
                                      (if (integer? g$x$10590$RCJqu)
                                        (if (exact? g$x$10590$RCJqu)
                                          (begin '#f (>= g$x$10590$RCJqu '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$10478$RCJqu
                                   (case-lambda
                                     ((g$x*$10542$RCJqu)
                                      ((case-lambda
                                         ((g$t$10543$RCJqu)
                                          ((case-lambda
                                             ((g$ls/false$10544$RCJqu)
                                              (if (if g$ls/false$10544$RCJqu
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10545$RCJqu)
                                                           (g$subversion?$10477$RCJqu
                                                             (g$syntax->datum$7971$RCJqu
                                                               g$n$10545$RCJqu))))
                                                        g$ls/false$10544$RCJqu))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10546$RCJqu)
                                                     (case-lambda
                                                       ((g$x$10547$RCJqu)
                                                        (= g$x$10547$RCJqu
                                                           (g$syntax->datum$7971$RCJqu
                                                             g$n$10546$RCJqu))))))
                                                  g$ls/false$10544$RCJqu)
                                                ((case-lambda
                                                   ((g$t$10548$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$10549$RCJqu)
                                                        (if (if g$ls/false$10549$RCJqu
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10550$RCJqu
                                                                       g$sub*$10551$RCJqu)
                                                                     (eq? (g$syntax->datum$7971$RCJqu
                                                                            g$p?$10550$RCJqu)
                                                                          'and)))
                                                                  g$ls/false$10549$RCJqu))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10552$RCJqu
                                                                 g$sub*$10553$RCJqu)
                                                               ((case-lambda
                                                                  ((g$p*$10554$RCJqu)
                                                                   (case-lambda
                                                                     ((g$x$10555$RCJqu)
                                                                      (g$for-all$6012$RCJqu
                                                                        (case-lambda
                                                                          ((g$p$10556$RCJqu)
                                                                           (g$p$10556$RCJqu
                                                                             g$x$10555$RCJqu)))
                                                                        g$p*$10554$RCJqu)))))
                                                                (map g$subversion-pred$10478$RCJqu
                                                                     g$sub*$10553$RCJqu))))
                                                            g$ls/false$10549$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$10557$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$10558$RCJqu)
                                                                  (if (if g$ls/false$10558$RCJqu
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10559$RCJqu
                                                                                 g$sub*$10560$RCJqu)
                                                                               (eq? (g$syntax->datum$7971$RCJqu
                                                                                      g$p?$10559$RCJqu)
                                                                                    'or)))
                                                                            g$ls/false$10558$RCJqu))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10561$RCJqu
                                                                           g$sub*$10562$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$p*$10563$RCJqu)
                                                                             (case-lambda
                                                                               ((g$x$10564$RCJqu)
                                                                                (g$exists$6013$RCJqu
                                                                                  (case-lambda
                                                                                    ((g$p$10565$RCJqu)
                                                                                     (g$p$10565$RCJqu
                                                                                       g$x$10564$RCJqu)))
                                                                                  g$p*$10563$RCJqu)))))
                                                                          (map g$subversion-pred$10478$RCJqu
                                                                               g$sub*$10562$RCJqu))))
                                                                      g$ls/false$10558$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$t$10566$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10567$RCJqu)
                                                                            (if (if g$ls/false$10567$RCJqu
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10568$RCJqu
                                                                                           g$sub$10569$RCJqu)
                                                                                         (eq? (g$syntax->datum$7971$RCJqu
                                                                                                g$p?$10568$RCJqu)
                                                                                              'not)))
                                                                                      g$ls/false$10567$RCJqu))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10570$RCJqu
                                                                                     g$sub$10571$RCJqu)
                                                                                   ((case-lambda
                                                                                      ((g$p$10572$RCJqu)
                                                                                       (case-lambda
                                                                                         ((g$x$10573$RCJqu)
                                                                                          (not (g$p$10572$RCJqu
                                                                                                 g$x$10573$RCJqu))))))
                                                                                    (g$subversion-pred$10478$RCJqu
                                                                                      g$sub$10571$RCJqu))))
                                                                                g$ls/false$10567$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$t$10574$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10575$RCJqu)
                                                                                      (if (if g$ls/false$10575$RCJqu
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10576$RCJqu
                                                                                                     g$n$10577$RCJqu)
                                                                                                   (if (eq? (g$syntax->datum$7971$RCJqu
                                                                                                              g$p?$10576$RCJqu)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10477$RCJqu
                                                                                                         (g$syntax->datum$7971$RCJqu
                                                                                                           g$n$10577$RCJqu)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10575$RCJqu))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10578$RCJqu
                                                                                               g$n$10579$RCJqu)
                                                                                             (case-lambda
                                                                                               ((g$x$10580$RCJqu)
                                                                                                (<= g$x$10580$RCJqu
                                                                                                    (g$syntax->datum$7971$RCJqu
                                                                                                      g$n$10579$RCJqu))))))
                                                                                          g$ls/false$10575$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$t$10581$RCJqu)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10582$RCJqu)
                                                                                                (if (if g$ls/false$10582$RCJqu
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10583$RCJqu
                                                                                                               g$n$10584$RCJqu)
                                                                                                             (if (eq? (g$syntax->datum$7971$RCJqu
                                                                                                                        g$p?$10583$RCJqu)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10477$RCJqu
                                                                                                                   g$n$10584$RCJqu))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10582$RCJqu))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10585$RCJqu
                                                                                                         g$n$10586$RCJqu)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10587$RCJqu)
                                                                                                          (>= g$x$10587$RCJqu
                                                                                                              (g$syntax->datum$7971$RCJqu
                                                                                                                g$n$10586$RCJqu))))))
                                                                                                    g$ls/false$10582$RCJqu)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10588$RCJqu)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10589$RCJqu)
                                                                                                          (if g$ls/false$10589$RCJqu
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7968$RCJqu
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10476$RCJqu
                                                                                                                   g$x*$10542$RCJqu)))
                                                                                                              g$ls/false$10589$RCJqu)
                                                                                                            (g$syntax-violation$7968$RCJqu
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10588$RCJqu))))
                                                                                                       (g$syntax-dispatch$7862$RCJqu
                                                                                                         g$t$10588$RCJqu
                                                                                                         '_))))
                                                                                                   g$t$10581$RCJqu))))
                                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                                               g$t$10581$RCJqu
                                                                                               '(any any)))))
                                                                                         g$t$10574$RCJqu))))
                                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                                     g$t$10574$RCJqu
                                                                                     '(any any)))))
                                                                               g$t$10566$RCJqu))))
                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                           g$t$10566$RCJqu
                                                                           '(any any)))))
                                                                     g$t$10557$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$10557$RCJqu
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10548$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$10548$RCJqu
                                                       '(any . each-any)))))
                                                 g$t$10543$RCJqu))))
                                           (g$syntax-dispatch$7862$RCJqu
                                             g$t$10543$RCJqu
                                             'any))))
                                       g$x*$10542$RCJqu))))
                                 (g$version-pred$10479$RCJqu
                                   (case-lambda
                                     ((g$x*$10502$RCJqu)
                                      ((case-lambda
                                         ((g$t$10503$RCJqu)
                                          ((case-lambda
                                             ((g$ls/false$10504$RCJqu)
                                              (if g$ls/false$10504$RCJqu
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10505$RCJqu)
                                                        '#t))))
                                                  g$ls/false$10504$RCJqu)
                                                ((case-lambda
                                                   ((g$t$10506$RCJqu)
                                                    ((case-lambda
                                                       ((g$ls/false$10507$RCJqu)
                                                        (if (if g$ls/false$10507$RCJqu
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10508$RCJqu
                                                                       g$ver*$10509$RCJqu)
                                                                     (eq? (g$syntax->datum$7971$RCJqu
                                                                            g$c$10508$RCJqu)
                                                                          'and)))
                                                                  g$ls/false$10507$RCJqu))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10510$RCJqu
                                                                 g$ver*$10511$RCJqu)
                                                               ((case-lambda
                                                                  ((g$p*$10512$RCJqu)
                                                                   (case-lambda
                                                                     ((g$x$10513$RCJqu)
                                                                      (g$for-all$6012$RCJqu
                                                                        (case-lambda
                                                                          ((g$p$10514$RCJqu)
                                                                           (g$p$10514$RCJqu
                                                                             g$x$10513$RCJqu)))
                                                                        g$p*$10512$RCJqu)))))
                                                                (map g$version-pred$10479$RCJqu
                                                                     g$ver*$10511$RCJqu))))
                                                            g$ls/false$10507$RCJqu)
                                                          ((case-lambda
                                                             ((g$t$10515$RCJqu)
                                                              ((case-lambda
                                                                 ((g$ls/false$10516$RCJqu)
                                                                  (if (if g$ls/false$10516$RCJqu
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10517$RCJqu
                                                                                 g$ver*$10518$RCJqu)
                                                                               (eq? (g$syntax->datum$7971$RCJqu
                                                                                      g$c$10517$RCJqu)
                                                                                    'or)))
                                                                            g$ls/false$10516$RCJqu))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10519$RCJqu
                                                                           g$ver*$10520$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$p*$10521$RCJqu)
                                                                             (case-lambda
                                                                               ((g$x$10522$RCJqu)
                                                                                (g$exists$6013$RCJqu
                                                                                  (case-lambda
                                                                                    ((g$p$10523$RCJqu)
                                                                                     (g$p$10523$RCJqu
                                                                                       g$x$10522$RCJqu)))
                                                                                  g$p*$10521$RCJqu)))))
                                                                          (map g$version-pred$10479$RCJqu
                                                                               g$ver*$10520$RCJqu))))
                                                                      g$ls/false$10516$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$t$10524$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10525$RCJqu)
                                                                            (if (if g$ls/false$10525$RCJqu
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10526$RCJqu
                                                                                           g$ver$10527$RCJqu)
                                                                                         (eq? (g$syntax->datum$7971$RCJqu
                                                                                                g$c$10526$RCJqu)
                                                                                              'not)))
                                                                                      g$ls/false$10525$RCJqu))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10528$RCJqu
                                                                                     g$ver$10529$RCJqu)
                                                                                   ((case-lambda
                                                                                      ((g$p$10530$RCJqu)
                                                                                       (case-lambda
                                                                                         ((g$x$10531$RCJqu)
                                                                                          (not (g$p$10530$RCJqu
                                                                                                 g$x$10531$RCJqu))))))
                                                                                    (g$version-pred$10479$RCJqu
                                                                                      g$ver$10529$RCJqu))))
                                                                                g$ls/false$10525$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$t$10532$RCJqu)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10533$RCJqu)
                                                                                      (if g$ls/false$10533$RCJqu
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10534$RCJqu)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10535$RCJqu)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10536$RCJqu)
                                                                                                    ((letrec ((g$f$10537$RCJqu
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10538$RCJqu
                                                                                                                     g$x$10539$RCJqu)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10538$RCJqu)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10539$RCJqu)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10538$RCJqu)
                                                                                                                            (car g$x$10539$RCJqu))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10537$RCJqu
                                                                                                                             (cdr g$p*$10538$RCJqu)
                                                                                                                             (cdr g$x$10539$RCJqu)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10537$RCJqu)
                                                                                                     g$p*$10535$RCJqu
                                                                                                     g$x$10536$RCJqu)))))
                                                                                              (map g$subversion-pred$10478$RCJqu
                                                                                                   g$sub*$10534$RCJqu))))
                                                                                          g$ls/false$10533$RCJqu)
                                                                                        ((case-lambda
                                                                                           ((g$t$10540$RCJqu)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10541$RCJqu)
                                                                                                (if g$ls/false$10541$RCJqu
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7968$RCJqu
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10476$RCJqu
                                                                                                         g$x*$10502$RCJqu)))
                                                                                                    g$ls/false$10541$RCJqu)
                                                                                                  (g$syntax-violation$7968$RCJqu
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10540$RCJqu))))
                                                                                             (g$syntax-dispatch$7862$RCJqu
                                                                                               g$t$10540$RCJqu
                                                                                               '_))))
                                                                                         g$t$10532$RCJqu))))
                                                                                   (g$syntax-dispatch$7862$RCJqu
                                                                                     g$t$10532$RCJqu
                                                                                     'each-any))))
                                                                               g$t$10524$RCJqu))))
                                                                         (g$syntax-dispatch$7862$RCJqu
                                                                           g$t$10524$RCJqu
                                                                           '(any any)))))
                                                                     g$t$10515$RCJqu))))
                                                               (g$syntax-dispatch$7862$RCJqu
                                                                 g$t$10515$RCJqu
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10506$RCJqu))))
                                                     (g$syntax-dispatch$7862$RCJqu
                                                       g$t$10506$RCJqu
                                                       '(any . each-any)))))
                                                 g$t$10503$RCJqu))))
                                           (g$syntax-dispatch$7862$RCJqu
                                             g$t$10503$RCJqu
                                             '()))))
                                       g$x*$10502$RCJqu)))))
                         ((letrec ((g$f$10480$RCJqu
                                     (case-lambda
                                       ((g$x$10481$RCJqu)
                                        ((case-lambda
                                           ((g$t$10482$RCJqu)
                                            ((case-lambda
                                               ((g$ls/false$10483$RCJqu)
                                                (if g$ls/false$10483$RCJqu
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10484$RCJqu)
                                                       (values
                                                         '()
                                                         (g$version-pred$10479$RCJqu
                                                           g$version-spec*$10484$RCJqu))))
                                                    g$ls/false$10483$RCJqu)
                                                  ((case-lambda
                                                     ((g$t$10485$RCJqu)
                                                      ((case-lambda
                                                         ((g$ls/false$10486$RCJqu)
                                                          (if (if g$ls/false$10486$RCJqu
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10487$RCJqu
                                                                         g$x*$10488$RCJqu)
                                                                       (g$idsyn?$10375$RCJqu
                                                                         g$x$10487$RCJqu)))
                                                                    g$ls/false$10486$RCJqu))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10489$RCJqu
                                                                   g$x*$10490$RCJqu)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10480$RCJqu
                                                                        g$x*$10490$RCJqu)))
                                                                   (case-lambda
                                                                     ((g$name$10493$RCJqu
                                                                        g$pred$10494$RCJqu)
                                                                      ((case-lambda
                                                                         ((g$pred$10495$RCJqu
                                                                            g$name$10496$RCJqu)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7971$RCJqu
                                                                                g$x$10489$RCJqu)
                                                                              g$name$10496$RCJqu)
                                                                            g$pred$10495$RCJqu)))
                                                                       g$pred$10494$RCJqu
                                                                       g$name$10493$RCJqu))))))
                                                              g$ls/false$10486$RCJqu)
                                                            ((case-lambda
                                                               ((g$t$10497$RCJqu)
                                                                ((case-lambda
                                                                   ((g$ls/false$10498$RCJqu)
                                                                    (if g$ls/false$10498$RCJqu
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10499$RCJqu)
                                                                                '#t)))))
                                                                        g$ls/false$10498$RCJqu)
                                                                      ((case-lambda
                                                                         ((g$t$10500$RCJqu)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10501$RCJqu)
                                                                              (if g$ls/false$10501$RCJqu
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7968$RCJqu
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10476$RCJqu)))
                                                                                  g$ls/false$10501$RCJqu)
                                                                                (g$syntax-violation$7968$RCJqu
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10500$RCJqu))))
                                                                           (g$syntax-dispatch$7862$RCJqu
                                                                             g$t$10500$RCJqu
                                                                             '_))))
                                                                       g$t$10497$RCJqu))))
                                                                 (g$syntax-dispatch$7862$RCJqu
                                                                   g$t$10497$RCJqu
                                                                   '()))))
                                                             g$t$10485$RCJqu))))
                                                       (g$syntax-dispatch$7862$RCJqu
                                                         g$t$10485$RCJqu
                                                         '(any . any)))))
                                                   g$t$10482$RCJqu))))
                                             (g$syntax-dispatch$7862$RCJqu
                                               g$t$10482$RCJqu
                                               '(each-any)))))
                                         g$x$10481$RCJqu)))))
                            g$f$10480$RCJqu)
                          g$spec$10476$RCJqu)))))
                  (g$import-library$10383$RCJqu
                    (case-lambda
                      ((g$spec*$10468$RCJqu)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10382$RCJqu
                              g$spec*$10468$RCJqu)))
                         (case-lambda
                           ((g$name$10471$RCJqu g$pred$10472$RCJqu)
                            ((case-lambda
                               ((g$pred$10473$RCJqu g$name$10474$RCJqu)
                                (begin
                                  (if (null? g$name$10474$RCJqu)
                                    (g$syntax-violation$7968$RCJqu
                                      'import
                                      '"empty library name"
                                      g$spec*$10468$RCJqu)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10475$RCJqu)
                                      (begin
                                        (if g$lib$10475$RCJqu
                                          (void)
                                          (g$syntax-violation$7968$RCJqu
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10474$RCJqu))
                                        (if (g$pred$10473$RCJqu
                                              (g$library-version$7352$RCJqu
                                                g$lib$10475$RCJqu))
                                          (void)
                                          (g$syntax-violation$7968$RCJqu
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10468$RCJqu
                                            g$lib$10475$RCJqu))
                                        ((g$imp-collector$7916$RCJqu)
                                         g$lib$10475$RCJqu)
                                        (g$library-subst$7356$RCJqu
                                          g$lib$10475$RCJqu))))
                                   (g$find-library-by-name$7392$RCJqu
                                     g$name$10474$RCJqu)))))
                             g$pred$10472$RCJqu
                             g$name$10471$RCJqu)))))))
                  (g$get-import$10384$RCJqu
                    (case-lambda
                      ((g$spec$10397$RCJqu)
                       ((case-lambda
                          ((g$t$10398$RCJqu)
                           ((case-lambda
                              ((g$ls/false$10399$RCJqu)
                               (if (if g$ls/false$10399$RCJqu
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10400$RCJqu g$x*$10401$RCJqu)
                                            (not (memq
                                                   (g$syntax->datum$7971$RCJqu
                                                     g$x$10400$RCJqu)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10399$RCJqu))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10402$RCJqu g$x*$10403$RCJqu)
                                      (g$import-library$10383$RCJqu
                                        (cons
                                          g$x$10402$RCJqu
                                          g$x*$10403$RCJqu))))
                                   g$ls/false$10399$RCJqu)
                                 ((case-lambda
                                    ((g$t$10404$RCJqu)
                                     ((case-lambda
                                        ((g$ls/false$10405$RCJqu)
                                         (if (if g$ls/false$10405$RCJqu
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10406$RCJqu
                                                        g$isp$10407$RCJqu
                                                        g$old*$10408$RCJqu
                                                        g$new*$10409$RCJqu)
                                                      (if (eq? (g$syntax->datum$7971$RCJqu
                                                                 g$rename$10406$RCJqu)
                                                               'rename)
                                                        (if (g$for-all$6012$RCJqu
                                                              g$idsyn?$10375$RCJqu
                                                              g$old*$10408$RCJqu)
                                                          (begin
                                                            '#f
                                                            (g$for-all$6012$RCJqu
                                                              g$idsyn?$10375$RCJqu
                                                              g$new*$10409$RCJqu))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10405$RCJqu))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10410$RCJqu
                                                  g$isp$10411$RCJqu
                                                  g$old*$10412$RCJqu
                                                  g$new*$10413$RCJqu)
                                                ((case-lambda
                                                   ((g$subst$10414$RCJqu
                                                      g$old*$10415$RCJqu
                                                      g$new*$10416$RCJqu)
                                                    ((case-lambda
                                                       ((g$old-label*$10417$RCJqu)
                                                        ((case-lambda
                                                           ((g$subst$10418$RCJqu)
                                                            (g$merge-substs$10377$RCJqu
                                                              (map cons
                                                                   g$new*$10416$RCJqu
                                                                   g$old-label*$10417$RCJqu)
                                                              g$subst$10418$RCJqu)))
                                                         (g$rem*$10380$RCJqu
                                                           g$old*$10415$RCJqu
                                                           g$subst$10414$RCJqu))))
                                                     (g$find*$10379$RCJqu
                                                       g$old*$10415$RCJqu
                                                       g$subst$10414$RCJqu))))
                                                 (g$get-import$10384$RCJqu
                                                   g$isp$10411$RCJqu)
                                                 (map g$syntax->datum$7971$RCJqu
                                                      g$old*$10412$RCJqu)
                                                 (map g$syntax->datum$7971$RCJqu
                                                      g$new*$10413$RCJqu))))
                                             g$ls/false$10405$RCJqu)
                                           ((case-lambda
                                              ((g$t$10419$RCJqu)
                                               ((case-lambda
                                                  ((g$ls/false$10420$RCJqu)
                                                   (if (if g$ls/false$10420$RCJqu
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10421$RCJqu
                                                                  g$isp$10422$RCJqu
                                                                  g$sym*$10423$RCJqu)
                                                                (if (eq? (g$syntax->datum$7971$RCJqu
                                                                           g$except$10421$RCJqu)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$6012$RCJqu
                                                                      g$idsyn?$10375$RCJqu
                                                                      g$sym*$10423$RCJqu))
                                                                  '#f)))
                                                             g$ls/false$10420$RCJqu))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10424$RCJqu
                                                            g$isp$10425$RCJqu
                                                            g$sym*$10426$RCJqu)
                                                          ((case-lambda
                                                             ((g$subst$10427$RCJqu)
                                                              (g$rem*$10380$RCJqu
                                                                (map g$syntax->datum$7971$RCJqu
                                                                     g$sym*$10426$RCJqu)
                                                                g$subst$10427$RCJqu)))
                                                           (g$get-import$10384$RCJqu
                                                             g$isp$10425$RCJqu))))
                                                       g$ls/false$10420$RCJqu)
                                                     ((case-lambda
                                                        ((g$t$10428$RCJqu)
                                                         ((case-lambda
                                                            ((g$ls/false$10429$RCJqu)
                                                             (if (if g$ls/false$10429$RCJqu
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10430$RCJqu
                                                                            g$isp$10431$RCJqu
                                                                            g$sym*$10432$RCJqu)
                                                                          (if (eq? (g$syntax->datum$7971$RCJqu
                                                                                     g$only$10430$RCJqu)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$6012$RCJqu
                                                                                g$idsyn?$10375$RCJqu
                                                                                g$sym*$10432$RCJqu))
                                                                            '#f)))
                                                                       g$ls/false$10429$RCJqu))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10433$RCJqu
                                                                      g$isp$10434$RCJqu
                                                                      g$sym*$10435$RCJqu)
                                                                    ((case-lambda
                                                                       ((g$subst$10436$RCJqu
                                                                          g$sym*$10437$RCJqu)
                                                                        ((case-lambda
                                                                           ((g$sym*$10438$RCJqu)
                                                                            ((case-lambda
                                                                               ((g$lab*$10439$RCJqu)
                                                                                (map cons
                                                                                     g$sym*$10438$RCJqu
                                                                                     g$lab*$10439$RCJqu)))
                                                                             (g$find*$10379$RCJqu
                                                                               g$sym*$10438$RCJqu
                                                                               g$subst$10436$RCJqu))))
                                                                         (g$remove-dups$10381$RCJqu
                                                                           g$sym*$10437$RCJqu))))
                                                                     (g$get-import$10384$RCJqu
                                                                       g$isp$10434$RCJqu)
                                                                     (map g$syntax->datum$7971$RCJqu
                                                                          g$sym*$10435$RCJqu))))
                                                                 g$ls/false$10429$RCJqu)
                                                               ((case-lambda
                                                                  ((g$t$10440$RCJqu)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10441$RCJqu)
                                                                       (if (if g$ls/false$10441$RCJqu
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10442$RCJqu
                                                                                      g$isp$10443$RCJqu
                                                                                      g$p$10444$RCJqu)
                                                                                    (if (eq? (g$syntax->datum$7971$RCJqu
                                                                                               g$prefix$10442$RCJqu)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10375$RCJqu
                                                                                          g$p$10444$RCJqu))
                                                                                      '#f)))
                                                                                 g$ls/false$10441$RCJqu))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10445$RCJqu
                                                                                g$isp$10446$RCJqu
                                                                                g$p$10447$RCJqu)
                                                                              ((case-lambda
                                                                                 ((g$subst$10448$RCJqu
                                                                                    g$prefix$10449$RCJqu)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10450$RCJqu)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10449$RCJqu
                                                                                                (symbol->string
                                                                                                  (car g$x$10450$RCJqu))))
                                                                                            (cdr g$x$10450$RCJqu))))
                                                                                       g$subst$10448$RCJqu)))
                                                                               (g$get-import$10384$RCJqu
                                                                                 g$isp$10446$RCJqu)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7971$RCJqu
                                                                                   g$p$10447$RCJqu)))))
                                                                           g$ls/false$10441$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$t$10451$RCJqu)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10452$RCJqu)
                                                                                 (if (if g$ls/false$10452$RCJqu
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10453$RCJqu
                                                                                                g$spec*$10454$RCJqu)
                                                                                              (eq? (g$syntax->datum$7971$RCJqu
                                                                                                     g$library$10453$RCJqu)
                                                                                                   'library)))
                                                                                           g$ls/false$10452$RCJqu))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10455$RCJqu
                                                                                          g$spec*$10456$RCJqu)
                                                                                        (g$import-library$10383$RCJqu
                                                                                          g$spec*$10456$RCJqu)))
                                                                                     g$ls/false$10452$RCJqu)
                                                                                   ((case-lambda
                                                                                      ((g$t$10457$RCJqu)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10458$RCJqu)
                                                                                           (if (if g$ls/false$10458$RCJqu
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10459$RCJqu
                                                                                                          g$isp$10460$RCJqu
                                                                                                          g$rest$10461$RCJqu)
                                                                                                        (eq? (g$syntax->datum$7971$RCJqu
                                                                                                               g$for$10459$RCJqu)
                                                                                                             'for)))
                                                                                                     g$ls/false$10458$RCJqu))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10462$RCJqu
                                                                                                    g$isp$10463$RCJqu
                                                                                                    g$rest$10464$RCJqu)
                                                                                                  (g$get-import$10384$RCJqu
                                                                                                    g$isp$10463$RCJqu)))
                                                                                               g$ls/false$10458$RCJqu)
                                                                                             ((case-lambda
                                                                                                ((g$t$10465$RCJqu)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10466$RCJqu)
                                                                                                     (if g$ls/false$10466$RCJqu
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10467$RCJqu)
                                                                                                            (g$syntax-violation$7968$RCJqu
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10467$RCJqu)))
                                                                                                         g$ls/false$10466$RCJqu)
                                                                                                       (g$syntax-violation$7968$RCJqu
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10465$RCJqu))))
                                                                                                  (g$syntax-dispatch$7862$RCJqu
                                                                                                    g$t$10465$RCJqu
                                                                                                    'any))))
                                                                                              g$t$10457$RCJqu))))
                                                                                        (g$syntax-dispatch$7862$RCJqu
                                                                                          g$t$10457$RCJqu
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10451$RCJqu))))
                                                                              (g$syntax-dispatch$7862$RCJqu
                                                                                g$t$10451$RCJqu
                                                                                '(any each-any)))))
                                                                          g$t$10440$RCJqu))))
                                                                    (g$syntax-dispatch$7862$RCJqu
                                                                      g$t$10440$RCJqu
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10428$RCJqu))))
                                                          (g$syntax-dispatch$7862$RCJqu
                                                            g$t$10428$RCJqu
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10419$RCJqu))))
                                                (g$syntax-dispatch$7862$RCJqu
                                                  g$t$10419$RCJqu
                                                  '(any any . each-any)))))
                                            g$t$10404$RCJqu))))
                                      (g$syntax-dispatch$7862$RCJqu
                                        g$t$10404$RCJqu
                                        '(any any . #(each (any any)))))))
                                  g$t$10398$RCJqu))))
                            (g$syntax-dispatch$7862$RCJqu
                              g$t$10398$RCJqu
                              '(any . each-any)))))
                        g$spec$10397$RCJqu))))
                  (g$add-imports!$10385$RCJqu
                    (case-lambda
                      ((g$imp$10389$RCJqu g$h$10390$RCJqu)
                       ((case-lambda
                          ((g$subst$10391$RCJqu)
                           (for-each
                             (case-lambda
                               ((g$x$10392$RCJqu)
                                ((case-lambda
                                   ((g$name$10393$RCJqu g$label$10394$RCJqu)
                                    ((case-lambda
                                       ((g$t$10395$RCJqu)
                                        (if g$t$10395$RCJqu
                                          ((case-lambda
                                             ((g$l$10396$RCJqu)
                                              (if (eq? g$l$10396$RCJqu
                                                       g$label$10394$RCJqu)
                                                (void)
                                                (g$dup-error$10376$RCJqu
                                                  g$name$10393$RCJqu))))
                                           g$t$10395$RCJqu)
                                          (g$hashtable-set!$5809$RCJqu
                                            g$h$10390$RCJqu
                                            g$name$10393$RCJqu
                                            g$label$10394$RCJqu))))
                                     (g$hashtable-ref$5808$RCJqu
                                       g$h$10390$RCJqu
                                       g$name$10393$RCJqu
                                       '#f))))
                                 (car g$x$10392$RCJqu)
                                 (cdr g$x$10392$RCJqu))))
                             g$subst$10391$RCJqu)))
                        (g$get-import$10384$RCJqu g$imp$10389$RCJqu))))))
          ((letrec ((g$f$10386$RCJqu
                      (case-lambda
                        ((g$imp*$10387$RCJqu g$h$10388$RCJqu)
                         (if (null? g$imp*$10387$RCJqu)
                           (hashtable-entries g$h$10388$RCJqu)
                           (begin
                             (g$add-imports!$10385$RCJqu
                               (car g$imp*$10387$RCJqu)
                               g$h$10388$RCJqu)
                             (g$f$10386$RCJqu
                               (cdr g$imp*$10387$RCJqu)
                               g$h$10388$RCJqu)))))))
             g$f$10386$RCJqu)
           g$imp*$10374$RCJqu
           (g$make-eq-hashtable$5805$RCJqu))))))
   (g$make-top-rib$7912$RCJqu
     g$make-top-rib$11362$RCJqu
     (case-lambda
       ((g$names$10635$RCJqu g$labels$10636$RCJqu)
        ((case-lambda
           ((g$rib$10637$RCJqu)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10638$RCJqu g$label$10639$RCJqu)
                   (begin
                     (if (symbol? g$name$10638$RCJqu)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10638$RCJqu))
                     (g$extend-rib!$7548$RCJqu
                       g$rib$10637$RCJqu
                       (g$make-stx$7557$RCJqu
                         g$name$10638$RCJqu
                         g$top-mark*$7526$RCJqu
                         '()
                         '())
                       g$label$10639$RCJqu))))
                g$names$10635$RCJqu
                g$labels$10636$RCJqu)
              g$rib$10637$RCJqu)))
         (g$make-empty-rib$7547$RCJqu)))))
   (g$make-collector$7913$RCJqu
     g$make-collector$11363$RCJqu
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10640$RCJqu)
            (case-lambda
              (() g$ls$10640$RCJqu)
              ((g$x$10641$RCJqu)
               (set! g$ls$10640$RCJqu
                 (g$set-cons$7523$RCJqu g$x$10641$RCJqu g$ls$10640$RCJqu))))))
         '()))))
   (g$inv-collector$7914$RCJqu
     g$inv-collector$11364$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda
         (g$args$10642$RCJqu
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10643$RCJqu)
          (begin
            (if (procedure? g$x$10643$RCJqu)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10643$RCJqu))
            g$x$10643$RCJqu)))))
   (g$vis-collector$7915$RCJqu
     g$vis-collector$11365$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda
         (g$args$10644$RCJqu
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10645$RCJqu)
          (begin
            (if (procedure? g$x$10645$RCJqu)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10645$RCJqu))
            g$x$10645$RCJqu)))))
   (g$imp-collector$7916$RCJqu
     g$imp-collector$11366$RCJqu
     (g$make-parameter$6852$RCJqu
       (case-lambda
         (g$args$10646$RCJqu
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10647$RCJqu)
          (begin
            (if (procedure? g$x$10647$RCJqu)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10647$RCJqu))
            g$x$10647$RCJqu)))))
   (g$chi-library-internal$7917$RCJqu
     g$chi-library-internal$11367$RCJqu
     (case-lambda
       ((g$e*$10648$RCJqu g$rib$10649$RCJqu g$top?$10650$RCJqu)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7906$RCJqu
               g$e*$10648$RCJqu
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10649$RCJqu
               g$top?$10650$RCJqu)))
          (case-lambda
            ((g$e*$10658$RCJqu
               g$r$10659$RCJqu
               g$mr$10660$RCJqu
               g$lex*$10661$RCJqu
               g$rhs*$10662$RCJqu
               g$mod**$10663$RCJqu
               g$_kwd*$10664$RCJqu)
             ((case-lambda
                ((g$_kwd*$10665$RCJqu
                   g$mod**$10666$RCJqu
                   g$rhs*$10667$RCJqu
                   g$lex*$10668$RCJqu
                   g$mr$10669$RCJqu
                   g$r$10670$RCJqu
                   g$e*$10671$RCJqu)
                 (values
                   (append
                     (apply append (reverse g$mod**$10666$RCJqu))
                     g$e*$10671$RCJqu)
                   g$r$10670$RCJqu
                   g$mr$10669$RCJqu
                   (reverse g$lex*$10668$RCJqu)
                   (reverse g$rhs*$10667$RCJqu))))
              g$_kwd*$10664$RCJqu
              g$mod**$10663$RCJqu
              g$rhs*$10662$RCJqu
              g$lex*$10661$RCJqu
              g$mr$10660$RCJqu
              g$r$10659$RCJqu
              g$e*$10658$RCJqu)))))))
   (g$chi-interaction-expr$7918$RCJqu
     g$chi-interaction-expr$11368$RCJqu
     (case-lambda
       ((g$e$10672$RCJqu g$rib$10673$RCJqu g$r$10674$RCJqu)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7906$RCJqu
               (list g$e$10672$RCJqu)
               g$r$10674$RCJqu
               g$r$10674$RCJqu
               '()
               '()
               '()
               '()
               g$rib$10673$RCJqu
               '#t)))
          (case-lambda
            ((g$e*$10682$RCJqu
               g$r$10683$RCJqu
               g$mr$10684$RCJqu
               g$lex*$10685$RCJqu
               g$rhs*$10686$RCJqu
               g$mod**$10687$RCJqu
               g$_kwd*$10688$RCJqu)
             ((case-lambda
                ((g$_kwd*$10689$RCJqu
                   g$mod**$10690$RCJqu
                   g$rhs*$10691$RCJqu
                   g$lex*$10692$RCJqu
                   g$mr$10693$RCJqu
                   g$r$10694$RCJqu
                   g$e*$10695$RCJqu)
                 ((case-lambda
                    ((g$e*$10696$RCJqu)
                     ((case-lambda
                        ((g$e$10697$RCJqu)
                         (values g$e$10697$RCJqu g$r$10694$RCJqu)))
                      (if (null? g$e*$10696$RCJqu)
                        (g$build-void$7519$RCJqu)
                        (if (null? (cdr g$e*$10696$RCJqu))
                          (car g$e*$10696$RCJqu)
                          (g$build-sequence$7518$RCJqu
                            '#f
                            g$e*$10696$RCJqu))))))
                  (g$expand-interaction-rhs*/init*$7887$RCJqu
                    (reverse g$lex*$10692$RCJqu)
                    (reverse g$rhs*$10691$RCJqu)
                    (append
                      (apply append (reverse g$mod**$10690$RCJqu))
                      g$e*$10695$RCJqu)
                    g$r$10694$RCJqu
                    g$mr$10693$RCJqu))))
              g$_kwd*$10688$RCJqu
              g$mod**$10687$RCJqu
              g$rhs*$10686$RCJqu
              g$lex*$10685$RCJqu
              g$mr$10684$RCJqu
              g$r$10683$RCJqu
              g$e*$10682$RCJqu)))))))
   (g$library-body-expander$7919$RCJqu
     g$library-body-expander$11369$RCJqu
     (case-lambda
       ((g$name$10698$RCJqu
          g$exp*$10699$RCJqu
          g$imp*$10700$RCJqu
          g$b*$10701$RCJqu
          g$top?$10702$RCJqu)
        (letrec* ((g$itc$10703$RCJqu (g$make-collector$7913$RCJqu)))
          ((case-lambda
             ((g$imp-collector$10708$RCJqu
                g$top-level-context$10709$RCJqu
                g$imp-collector$10710$RCJqu
                g$top-level-context$10711$RCJqu)
              ((case-lambda
                 ((g$swap$10712$RCJqu)
                  (dynamic-wind
                    g$swap$10712$RCJqu
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7908$RCJqu g$exp*$10699$RCJqu)))
                         (case-lambda
                           ((g$exp-int*$10715$RCJqu g$exp-ext*$10716$RCJqu)
                            ((case-lambda
                               ((g$exp-ext*$10717$RCJqu g$exp-int*$10718$RCJqu)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7911$RCJqu
                                       g$imp*$10700$RCJqu)))
                                  (case-lambda
                                    ((g$subst-names$10721$RCJqu
                                       g$subst-labels$10722$RCJqu)
                                     ((case-lambda
                                        ((g$subst-labels$10723$RCJqu
                                           g$subst-names$10724$RCJqu)
                                         ((case-lambda
                                            ((g$rib$10725$RCJqu)
                                             ((case-lambda
                                                ((g$b*$10726$RCJqu
                                                   g$rtc$10727$RCJqu
                                                   g$vtc$10728$RCJqu)
                                                 ((case-lambda
                                                    ((g$inv-collector$10733$RCJqu
                                                       g$vis-collector$10734$RCJqu
                                                       g$inv-collector$10735$RCJqu
                                                       g$vis-collector$10736$RCJqu)
                                                     ((case-lambda
                                                        ((g$swap$10737$RCJqu)
                                                         (dynamic-wind
                                                           g$swap$10737$RCJqu
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7917$RCJqu
                                                                     g$b*$10726$RCJqu
                                                                     g$rib$10725$RCJqu
                                                                     g$top?$10702$RCJqu)))
                                                                (case-lambda
                                                                  ((g$init*$10743$RCJqu
                                                                     g$r$10744$RCJqu
                                                                     g$mr$10745$RCJqu
                                                                     g$lex*$10746$RCJqu
                                                                     g$rhs*$10747$RCJqu)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10748$RCJqu
                                                                         g$lex*$10749$RCJqu
                                                                         g$mr$10750$RCJqu
                                                                         g$r$10751$RCJqu
                                                                         g$init*$10752$RCJqu)
                                                                       (begin
                                                                         (g$seal-rib!$7550$RCJqu
                                                                           g$rib$10725$RCJqu)
                                                                         ((case-lambda
                                                                            ((g$init*$10753$RCJqu)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10754$RCJqu)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7551$RCJqu
                                                                                         g$rib$10725$RCJqu)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10755$RCJqu
                                                                                             g$export-subst$10756$RCJqu)
                                                                                           (letrec* ((g$errstr$10757$RCJqu
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7960$RCJqu
                                                                                                    g$lex*$10749$RCJqu
                                                                                                    g$loc*$10755$RCJqu
                                                                                                    g$r$10751$RCJqu)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10761$RCJqu
                                                                                                    g$global*$10762$RCJqu
                                                                                                    g$macro*$10763$RCJqu)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10764$RCJqu
                                                                                                        g$global*$10765$RCJqu
                                                                                                        g$export-env$10766$RCJqu)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10767$RCJqu)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10768$RCJqu
                                                                                                                   g$label$10769$RCJqu)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10770$RCJqu)
                                                                                                                     (if g$p$10770$RCJqu
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10771$RCJqu)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10772$RCJqu)
                                                                                                                               (if (eq? g$type$10772$RCJqu
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7968$RCJqu
                                                                                                                                   'export
                                                                                                                                   g$errstr$10757$RCJqu
                                                                                                                                   g$name$10768$RCJqu)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10771$RCJqu))))
                                                                                                                        (cdr g$p$10770$RCJqu))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10769$RCJqu
                                                                                                                    g$export-env$10766$RCJqu))))
                                                                                                              (car g$s$10767$RCJqu)
                                                                                                              (cdr g$s$10767$RCJqu))))
                                                                                                          g$export-subst$10756$RCJqu)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10773$RCJqu
                                                                                                              g$invoke-definitions$10774$RCJqu)
                                                                                                            (values
                                                                                                              (g$itc$10703$RCJqu)
                                                                                                              (g$rtc$10727$RCJqu)
                                                                                                              (g$vtc$10728$RCJqu)
                                                                                                              (g$build-sequence$7518$RCJqu
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10774$RCJqu
                                                                                                                  (list
                                                                                                                    g$invoke-body$10773$RCJqu)))
                                                                                                              g$macro*$10764$RCJqu
                                                                                                              g$export-subst$10756$RCJqu
                                                                                                              g$export-env$10766$RCJqu)))
                                                                                                         (g$build-library-letrec*$7522$RCJqu
                                                                                                           '#f
                                                                                                           g$name$10698$RCJqu
                                                                                                           g$lex*$10749$RCJqu
                                                                                                           g$loc*$10755$RCJqu
                                                                                                           g$rhs*$10754$RCJqu
                                                                                                           (if (null?
                                                                                                                 g$init*$10753$RCJqu)
                                                                                                             (g$build-void$7519$RCJqu)
                                                                                                             (g$build-sequence$7518$RCJqu
                                                                                                               '#f
                                                                                                               g$init*$10753$RCJqu)))
                                                                                                         (map g$build-global-define$7514$RCJqu
                                                                                                              (map cdr
                                                                                                                   g$global*$10765$RCJqu))))))
                                                                                                   g$macro*$10763$RCJqu
                                                                                                   g$global*$10762$RCJqu
                                                                                                   g$export-env$10761$RCJqu)))))))
                                                                                        (map g$gen-global$7529$RCJqu
                                                                                             g$lex*$10749$RCJqu)
                                                                                        (g$make-export-subst$7959$RCJqu
                                                                                          g$exp-int*$10718$RCJqu
                                                                                          g$exp-ext*$10717$RCJqu
                                                                                          g$rib$10725$RCJqu))))))))
                                                                              (g$chi-rhs*$7888$RCJqu
                                                                                g$rhs*$10748$RCJqu
                                                                                g$r$10751$RCJqu
                                                                                g$mr$10750$RCJqu))))
                                                                          (g$chi-expr*$7878$RCJqu
                                                                            g$init*$10752$RCJqu
                                                                            g$r$10751$RCJqu
                                                                            g$mr$10750$RCJqu)))))
                                                                    g$rhs*$10747$RCJqu
                                                                    g$lex*$10746$RCJqu
                                                                    g$mr$10745$RCJqu
                                                                    g$r$10744$RCJqu
                                                                    g$init*$10743$RCJqu))))))
                                                           g$swap$10737$RCJqu)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10775$RCJqu)
                                                               (begin
                                                                 (g$inv-collector$10733$RCJqu
                                                                   g$inv-collector$10735$RCJqu)
                                                                 (set! g$inv-collector$10735$RCJqu
                                                                   g$t$10775$RCJqu))))
                                                            (g$inv-collector$10733$RCJqu))
                                                           ((case-lambda
                                                              ((g$t$10776$RCJqu)
                                                               (begin
                                                                 (g$vis-collector$10734$RCJqu
                                                                   g$vis-collector$10736$RCJqu)
                                                                 (set! g$vis-collector$10736$RCJqu
                                                                   g$t$10776$RCJqu))))
                                                            (g$vis-collector$10734$RCJqu))))))))
                                                  g$inv-collector$7914$RCJqu
                                                  g$vis-collector$7915$RCJqu
                                                  g$rtc$10727$RCJqu
                                                  g$vtc$10728$RCJqu)))
                                              (map (case-lambda
                                                     ((g$x$10777$RCJqu)
                                                      (g$make-stx$7557$RCJqu
                                                        g$x$10777$RCJqu
                                                        g$top-mark*$7526$RCJqu
                                                        (list g$rib$10725$RCJqu)
                                                        '())))
                                                   g$b*$10701$RCJqu)
                                              (g$make-collector$7913$RCJqu)
                                              (g$make-collector$7913$RCJqu))))
                                          (g$make-top-rib$7912$RCJqu
                                            g$subst-names$10724$RCJqu
                                            g$subst-labels$10723$RCJqu))))
                                      g$subst-labels$10722$RCJqu
                                      g$subst-names$10721$RCJqu))))))
                             g$exp-ext*$10716$RCJqu
                             g$exp-int*$10715$RCJqu))))))
                    g$swap$10712$RCJqu)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10778$RCJqu)
                        (begin
                          (g$imp-collector$10708$RCJqu
                            g$imp-collector$10710$RCJqu)
                          (set! g$imp-collector$10710$RCJqu g$t$10778$RCJqu))))
                     (g$imp-collector$10708$RCJqu))
                    ((case-lambda
                       ((g$t$10779$RCJqu)
                        (begin
                          (g$top-level-context$10709$RCJqu
                            g$top-level-context$10711$RCJqu)
                          (set! g$top-level-context$10711$RCJqu
                            g$t$10779$RCJqu))))
                     (g$top-level-context$10709$RCJqu))))))))
           g$imp-collector$7916$RCJqu
           g$top-level-context$7975$RCJqu
           g$itc$10703$RCJqu
           '#f)))))
   (g$core-library-expander$7920$RCJqu
     g$core-library-expander$11370$RCJqu
     (case-lambda
       ((g$e$10780$RCJqu g$verify-name$10781$RCJqu)
        (call-with-values
          (case-lambda (() (g$parse-library$7910$RCJqu g$e$10780$RCJqu)))
          (case-lambda
            ((g$name*$10786$RCJqu
               g$exp*$10787$RCJqu
               g$imp*$10788$RCJqu
               g$b*$10789$RCJqu)
             ((case-lambda
                ((g$b*$10790$RCJqu
                   g$imp*$10791$RCJqu
                   g$exp*$10792$RCJqu
                   g$name*$10793$RCJqu)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7909$RCJqu g$name*$10793$RCJqu)))
                   (case-lambda
                     ((g$name$10796$RCJqu g$ver$10797$RCJqu)
                      ((case-lambda
                         ((g$ver$10798$RCJqu g$name$10799$RCJqu)
                          (begin
                            (g$verify-name$10781$RCJqu g$name$10799$RCJqu)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7919$RCJqu
                                   g$name$10799$RCJqu
                                   g$exp*$10792$RCJqu
                                   g$imp*$10791$RCJqu
                                   g$b*$10790$RCJqu
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10807$RCJqu
                                   g$invoke-req*$10808$RCJqu
                                   g$visit-req*$10809$RCJqu
                                   g$invoke-code$10810$RCJqu
                                   g$visit-code$10811$RCJqu
                                   g$export-subst$10812$RCJqu
                                   g$export-env$10813$RCJqu)
                                 ((case-lambda
                                    ((g$export-env$10814$RCJqu
                                       g$export-subst$10815$RCJqu
                                       g$visit-code$10816$RCJqu
                                       g$invoke-code$10817$RCJqu
                                       g$visit-req*$10818$RCJqu
                                       g$invoke-req*$10819$RCJqu
                                       g$imp*$10820$RCJqu)
                                     (values
                                       g$name$10799$RCJqu
                                       g$ver$10798$RCJqu
                                       g$imp*$10820$RCJqu
                                       g$invoke-req*$10819$RCJqu
                                       g$visit-req*$10818$RCJqu
                                       g$invoke-code$10817$RCJqu
                                       g$visit-code$10816$RCJqu
                                       g$export-subst$10815$RCJqu
                                       g$export-env$10814$RCJqu)))
                                  g$export-env$10813$RCJqu
                                  g$export-subst$10812$RCJqu
                                  g$visit-code$10811$RCJqu
                                  g$invoke-code$10810$RCJqu
                                  g$visit-req*$10809$RCJqu
                                  g$invoke-req*$10808$RCJqu
                                  g$imp*$10807$RCJqu)))))))
                       g$ver$10797$RCJqu
                       g$name$10796$RCJqu))))))
              g$b*$10789$RCJqu
              g$imp*$10788$RCJqu
              g$exp*$10787$RCJqu
              g$name*$10786$RCJqu)))))))
   (g$parse-top-level-program$7921$RCJqu
     g$parse-top-level-program$11371$RCJqu
     (case-lambda
       ((g$e*$10821$RCJqu)
        ((case-lambda
           ((g$t$10822$RCJqu)
            ((case-lambda
               ((g$ls/false$10823$RCJqu)
                (if (if g$ls/false$10823$RCJqu
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10824$RCJqu
                               g$imp*$10825$RCJqu
                               g$b*$10826$RCJqu)
                             (eq? (g$syntax->datum$7971$RCJqu
                                    g$import$10824$RCJqu)
                                  'import)))
                          g$ls/false$10823$RCJqu))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10827$RCJqu
                         g$imp*$10828$RCJqu
                         g$b*$10829$RCJqu)
                       (values g$imp*$10828$RCJqu g$b*$10829$RCJqu)))
                    g$ls/false$10823$RCJqu)
                  ((case-lambda
                     ((g$t$10830$RCJqu)
                      ((case-lambda
                         ((g$ls/false$10831$RCJqu)
                          (if (if g$ls/false$10831$RCJqu
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10832$RCJqu
                                         g$x$10833$RCJqu
                                         g$y$10834$RCJqu)
                                       (eq? (g$syntax->datum$7971$RCJqu
                                              g$import$10832$RCJqu)
                                            'import)))
                                    g$ls/false$10831$RCJqu))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10835$RCJqu
                                   g$x$10836$RCJqu
                                   g$y$10837$RCJqu)
                                 (g$syntax-violation$7968$RCJqu
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7581$RCJqu g$e*$10821$RCJqu))))
                              g$ls/false$10831$RCJqu)
                            ((case-lambda
                               ((g$t$10838$RCJqu)
                                ((case-lambda
                                   ((g$ls/false$10839$RCJqu)
                                    (if g$ls/false$10839$RCJqu
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10839$RCJqu)
                                      (g$syntax-violation$7968$RCJqu
                                        '#f
                                        '"invalid syntax"
                                        g$t$10838$RCJqu))))
                                 (g$syntax-dispatch$7862$RCJqu
                                   g$t$10838$RCJqu
                                   '_))))
                             g$t$10830$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu
                         g$t$10830$RCJqu
                         '((any . any) . any)))))
                   g$t$10822$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu
               g$t$10822$RCJqu
               '((any . each-any) . each-any)))))
         g$e*$10821$RCJqu))))
   (g$top-level-expander$7922$RCJqu
     g$top-level-expander$11372$RCJqu
     (case-lambda
       ((g$e*$10840$RCJqu)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7921$RCJqu g$e*$10840$RCJqu)))
          (case-lambda
            ((g$imp*$10843$RCJqu g$b*$10844$RCJqu)
             ((case-lambda
                ((g$b*$10845$RCJqu g$imp*$10846$RCJqu)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7919$RCJqu
                        '()
                        '()
                        g$imp*$10846$RCJqu
                        g$b*$10845$RCJqu
                        '#t)))
                   (case-lambda
                     ((g$imp*$10854$RCJqu
                        g$invoke-req*$10855$RCJqu
                        g$visit-req*$10856$RCJqu
                        g$invoke-code$10857$RCJqu
                        g$visit-code$10858$RCJqu
                        g$export-subst$10859$RCJqu
                        g$export-env$10860$RCJqu)
                      ((case-lambda
                         ((g$export-env$10861$RCJqu
                            g$export-subst$10862$RCJqu
                            g$visit-code$10863$RCJqu
                            g$invoke-code$10864$RCJqu
                            g$visit-req*$10865$RCJqu
                            g$invoke-req*$10866$RCJqu
                            g$imp*$10867$RCJqu)
                          (values
                            g$invoke-req*$10866$RCJqu
                            g$invoke-code$10864$RCJqu)))
                       g$export-env$10860$RCJqu
                       g$export-subst$10859$RCJqu
                       g$visit-code$10858$RCJqu
                       g$invoke-code$10857$RCJqu
                       g$visit-req*$10856$RCJqu
                       g$invoke-req*$10855$RCJqu
                       g$imp*$10854$RCJqu))))))
              g$b*$10844$RCJqu
              g$imp*$10843$RCJqu)))))))
   (g$8767$7923$RCJqu
     g$8767$11373$RCJqu
     (make-record-type-descriptor
       'env
       '#f
       'g$8770$RCJqu
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8769$7924$RCJqu g$8769$11374$RCJqu '#f)
   (g$8768$7925$RCJqu
     g$8768$11375$RCJqu
     (make-record-constructor-descriptor
       g$8767$7923$RCJqu
       '#f
       g$8769$7924$RCJqu))
   (g$env?$7926$RCJqu
     g$env?$11376$RCJqu
     (record-predicate g$8767$7923$RCJqu))
   (g$make-env$7927$RCJqu
     g$make-env$11377$RCJqu
     (record-constructor g$8768$7925$RCJqu))
   (g$env-names$7928$RCJqu
     g$env-names$11378$RCJqu
     (record-accessor g$8767$7923$RCJqu '0))
   (g$env-labels$7929$RCJqu
     g$env-labels$11379$RCJqu
     (record-accessor g$8767$7923$RCJqu '1))
   (g$env-itc$7930$RCJqu
     g$env-itc$11380$RCJqu
     (record-accessor g$8767$7923$RCJqu '2))
   (g$set-env-names!$7931$RCJqu
     g$set-env-names!$11381$RCJqu
     (record-mutator g$8767$7923$RCJqu '0))
   (g$set-env-labels!$7932$RCJqu
     g$set-env-labels!$11382$RCJqu
     (record-mutator g$8767$7923$RCJqu '1))
   (g$set-env-itc!$7933$RCJqu
     g$set-env-itc!$11383$RCJqu
     (record-mutator g$8767$7923$RCJqu '2))
   (g$rp$7934$RCJqu
     g$rp$11384$RCJqu
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10868$RCJqu g$p$10869$RCJqu)
          (display '"#<environment>" g$p$10869$RCJqu)))))
   (g$8786$7935$RCJqu
     g$8786$11385$RCJqu
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8789$RCJqu
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8788$7936$RCJqu g$8788$11386$RCJqu '#f)
   (g$8787$7937$RCJqu
     g$8787$11387$RCJqu
     (make-record-constructor-descriptor
       g$8786$7935$RCJqu
       '#f
       g$8788$7936$RCJqu))
   (g$interaction-env?$7938$RCJqu
     g$interaction-env?$11388$RCJqu
     (record-predicate g$8786$7935$RCJqu))
   (g$make-interaction-env$7939$RCJqu
     g$make-interaction-env$11389$RCJqu
     (record-constructor g$8787$7937$RCJqu))
   (g$interaction-env-rib$7940$RCJqu
     g$interaction-env-rib$11390$RCJqu
     (record-accessor g$8786$7935$RCJqu '0))
   (g$interaction-env-r$7941$RCJqu
     g$interaction-env-r$11391$RCJqu
     (record-accessor g$8786$7935$RCJqu '1))
   (g$interaction-env-locs$7942$RCJqu
     g$interaction-env-locs$11392$RCJqu
     (record-accessor g$8786$7935$RCJqu '2))
   (g$set-interaction-env-rib!$7943$RCJqu
     g$set-interaction-env-rib!$11393$RCJqu
     (record-mutator g$8786$7935$RCJqu '0))
   (g$set-interaction-env-r!$7944$RCJqu
     g$set-interaction-env-r!$11394$RCJqu
     (record-mutator g$8786$7935$RCJqu '1))
   (g$set-interaction-env-locs!$7945$RCJqu
     g$set-interaction-env-locs!$11395$RCJqu
     (record-mutator g$8786$7935$RCJqu '2))
   (g$rp$7946$RCJqu
     g$rp$11396$RCJqu
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10870$RCJqu g$p$10871$RCJqu)
          (display '"#<environment>" g$p$10871$RCJqu)))))
   (g$interaction-environment-symbols$7947$RCJqu
     g$interaction-environment-symbols$11397$RCJqu
     (case-lambda
       (()
        (map (case-lambda ((g$x$10872$RCJqu) g$x$10872$RCJqu))
             (g$rib-sym*$7539$RCJqu
               (g$interaction-env-rib$7940$RCJqu
                 (g$interaction-environment$7974$RCJqu)))))))
   (g$environment-symbols$7948$RCJqu
     g$environment-symbols$11398$RCJqu
     (case-lambda
       ((g$e$10873$RCJqu)
        (vector->list (g$env-names$7928$RCJqu g$e$10873$RCJqu)))))
   (g$environment?$7949$RCJqu
     g$environment?$11399$RCJqu
     (case-lambda
       ((g$x$10874$RCJqu)
        ((case-lambda
           ((g$t$10875$RCJqu)
            (if g$t$10875$RCJqu
              g$t$10875$RCJqu
              (begin '#f (g$interaction-env?$7938$RCJqu g$x$10874$RCJqu)))))
         (g$env?$7926$RCJqu g$x$10874$RCJqu)))))
   (g$environment$7950$RCJqu
     g$environment$11400$RCJqu
     (case-lambda
       (g$imp*$10876$RCJqu
        ((case-lambda
           ((g$itc$10877$RCJqu)
            ((case-lambda
               ((g$imp-collector$10880$RCJqu g$imp-collector$10881$RCJqu)
                ((case-lambda
                   ((g$swap$10882$RCJqu)
                    (dynamic-wind
                      g$swap$10882$RCJqu
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7911$RCJqu
                                g$imp*$10876$RCJqu)))
                           (case-lambda
                             ((g$subst-names$10885$RCJqu
                                g$subst-labels$10886$RCJqu)
                              ((case-lambda
                                 ((g$subst-labels$10887$RCJqu
                                    g$subst-names$10888$RCJqu)
                                  (g$make-env$7927$RCJqu
                                    g$subst-names$10888$RCJqu
                                    g$subst-labels$10887$RCJqu
                                    g$itc$10877$RCJqu)))
                               g$subst-labels$10886$RCJqu
                               g$subst-names$10885$RCJqu))))))
                      g$swap$10882$RCJqu)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10889$RCJqu)
                        (begin
                          (g$imp-collector$10880$RCJqu
                            g$imp-collector$10881$RCJqu)
                          (set! g$imp-collector$10881$RCJqu g$t$10889$RCJqu))))
                     (g$imp-collector$10880$RCJqu)))))))
             g$imp-collector$7916$RCJqu
             g$itc$10877$RCJqu)))
         (g$make-collector$7913$RCJqu)))))
   (g$null-environment$7951$RCJqu
     g$null-environment$11401$RCJqu
     (case-lambda
       ((g$n$10890$RCJqu)
        (begin
          (if (eqv? g$n$10890$RCJqu '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10890$RCJqu))
          (g$environment$7950$RCJqu '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7952$RCJqu
     g$scheme-report-environment$11402$RCJqu
     (case-lambda
       ((g$n$10891$RCJqu)
        (begin
          (if (eqv? g$n$10891$RCJqu '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10891$RCJqu))
          (g$environment$7950$RCJqu '(psyntax scheme-report-environment-5))))))
   (g$expand$7953$RCJqu
     g$expand$11403$RCJqu
     (case-lambda
       ((g$x$10892$RCJqu g$env$10893$RCJqu)
        (if (g$env?$7926$RCJqu g$env$10893$RCJqu)
          ((case-lambda
             ((g$rib$10894$RCJqu)
              ((case-lambda
                 ((g$x$10895$RCJqu
                    g$itc$10896$RCJqu
                    g$rtc$10897$RCJqu
                    g$vtc$10898$RCJqu)
                  ((case-lambda
                     ((g$x$10899$RCJqu)
                      (begin
                        (g$seal-rib!$7550$RCJqu g$rib$10894$RCJqu)
                        (values g$x$10899$RCJqu (g$rtc$10897$RCJqu)))))
                   ((case-lambda
                      ((g$inv-collector$10906$RCJqu
                         g$vis-collector$10907$RCJqu
                         g$imp-collector$10908$RCJqu
                         g$inv-collector$10909$RCJqu
                         g$vis-collector$10910$RCJqu
                         g$imp-collector$10911$RCJqu)
                       ((case-lambda
                          ((g$swap$10912$RCJqu)
                           (dynamic-wind
                             g$swap$10912$RCJqu
                             (case-lambda
                               (()
                                (g$chi-expr$7880$RCJqu
                                  g$x$10895$RCJqu
                                  '()
                                  '())))
                             g$swap$10912$RCJqu)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10913$RCJqu)
                                 (begin
                                   (g$inv-collector$10906$RCJqu
                                     g$inv-collector$10909$RCJqu)
                                   (set! g$inv-collector$10909$RCJqu
                                     g$t$10913$RCJqu))))
                              (g$inv-collector$10906$RCJqu))
                             ((case-lambda
                                ((g$t$10914$RCJqu)
                                 (begin
                                   (g$vis-collector$10907$RCJqu
                                     g$vis-collector$10910$RCJqu)
                                   (set! g$vis-collector$10910$RCJqu
                                     g$t$10914$RCJqu))))
                              (g$vis-collector$10907$RCJqu))
                             ((case-lambda
                                ((g$t$10915$RCJqu)
                                 (begin
                                   (g$imp-collector$10908$RCJqu
                                     g$imp-collector$10911$RCJqu)
                                   (set! g$imp-collector$10911$RCJqu
                                     g$t$10915$RCJqu))))
                              (g$imp-collector$10908$RCJqu))))))))
                    g$inv-collector$7914$RCJqu
                    g$vis-collector$7915$RCJqu
                    g$imp-collector$7916$RCJqu
                    g$rtc$10897$RCJqu
                    g$vtc$10898$RCJqu
                    g$itc$10896$RCJqu))))
               (g$make-stx$7557$RCJqu
                 g$x$10892$RCJqu
                 g$top-mark*$7526$RCJqu
                 (list g$rib$10894$RCJqu)
                 '())
               (g$env-itc$7930$RCJqu g$env$10893$RCJqu)
               (g$make-collector$7913$RCJqu)
               (g$make-collector$7913$RCJqu))))
           (g$make-top-rib$7912$RCJqu
             (g$env-names$7928$RCJqu g$env$10893$RCJqu)
             (g$env-labels$7929$RCJqu g$env$10893$RCJqu)))
          (if (g$interaction-env?$7938$RCJqu g$env$10893$RCJqu)
            ((case-lambda
               ((g$rib$10916$RCJqu g$r$10917$RCJqu g$rtc$10918$RCJqu)
                ((case-lambda
                   ((g$x$10919$RCJqu)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10930$RCJqu
                               g$inv-collector$10931$RCJqu
                               g$vis-collector$10932$RCJqu
                               g$imp-collector$10933$RCJqu
                               g$top-level-context$10934$RCJqu
                               g$inv-collector$10935$RCJqu
                               g$vis-collector$10936$RCJqu
                               g$imp-collector$10937$RCJqu)
                             ((case-lambda
                                ((g$swap$10938$RCJqu)
                                 (dynamic-wind
                                   g$swap$10938$RCJqu
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7918$RCJqu
                                        g$x$10919$RCJqu
                                        g$rib$10916$RCJqu
                                        g$r$10917$RCJqu)))
                                   g$swap$10938$RCJqu)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10939$RCJqu)
                                       (begin
                                         (g$top-level-context$10930$RCJqu
                                           g$top-level-context$10934$RCJqu)
                                         (set! g$top-level-context$10934$RCJqu
                                           g$t$10939$RCJqu))))
                                    (g$top-level-context$10930$RCJqu))
                                   ((case-lambda
                                      ((g$t$10940$RCJqu)
                                       (begin
                                         (g$inv-collector$10931$RCJqu
                                           g$inv-collector$10935$RCJqu)
                                         (set! g$inv-collector$10935$RCJqu
                                           g$t$10940$RCJqu))))
                                    (g$inv-collector$10931$RCJqu))
                                   ((case-lambda
                                      ((g$t$10941$RCJqu)
                                       (begin
                                         (g$vis-collector$10932$RCJqu
                                           g$vis-collector$10936$RCJqu)
                                         (set! g$vis-collector$10936$RCJqu
                                           g$t$10941$RCJqu))))
                                    (g$vis-collector$10932$RCJqu))
                                   ((case-lambda
                                      ((g$t$10942$RCJqu)
                                       (begin
                                         (g$imp-collector$10933$RCJqu
                                           g$imp-collector$10937$RCJqu)
                                         (set! g$imp-collector$10937$RCJqu
                                           g$t$10942$RCJqu))))
                                    (g$imp-collector$10933$RCJqu))))))))
                          g$top-level-context$7975$RCJqu
                          g$inv-collector$7914$RCJqu
                          g$vis-collector$7915$RCJqu
                          g$imp-collector$7916$RCJqu
                          g$env$10893$RCJqu
                          g$rtc$10918$RCJqu
                          (g$make-collector$7913$RCJqu)
                          (g$make-collector$7913$RCJqu))))
                      (case-lambda
                        ((g$e$10943$RCJqu g$r^$10944$RCJqu)
                         ((case-lambda
                            ((g$r^$10945$RCJqu g$e$10946$RCJqu)
                             (begin
                               (g$set-interaction-env-r!$7944$RCJqu
                                 g$env$10893$RCJqu
                                 g$r^$10945$RCJqu)
                               (values g$e$10946$RCJqu (g$rtc$10918$RCJqu)))))
                          g$r^$10944$RCJqu
                          g$e$10943$RCJqu))))))
                 (g$make-stx$7557$RCJqu
                   g$x$10892$RCJqu
                   g$top-mark*$7526$RCJqu
                   (list g$rib$10916$RCJqu)
                   '()))))
             (g$interaction-env-rib$7940$RCJqu g$env$10893$RCJqu)
             (g$interaction-env-r$7941$RCJqu g$env$10893$RCJqu)
             (g$make-collector$7913$RCJqu))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10893$RCJqu))))))
   (g$eval$7954$RCJqu
     g$eval$11404$RCJqu
     (case-lambda
       ((g$x$10947$RCJqu g$env$10948$RCJqu)
        (begin
          (if (g$environment?$7949$RCJqu g$env$10948$RCJqu)
            (void)
            (error 'eval '"not an environment" g$env$10948$RCJqu))
          (call-with-values
            (case-lambda
              (() (g$expand$7953$RCJqu g$x$10947$RCJqu g$env$10948$RCJqu)))
            (case-lambda
              ((g$x$10951$RCJqu g$invoke-req*$10952$RCJqu)
               ((case-lambda
                  ((g$invoke-req*$10953$RCJqu g$x$10954$RCJqu)
                   (begin
                     (for-each
                       g$invoke-library$7399$RCJqu
                       g$invoke-req*$10953$RCJqu)
                     (eval-core
                       (g$expanded->core$7098$RCJqu g$x$10954$RCJqu)))))
                g$invoke-req*$10952$RCJqu
                g$x$10951$RCJqu))))))))
   (g$library-expander$7955$RCJqu
     g$library-expander$11405$RCJqu
     (case-lambda
       ((g$x$10955$RCJqu g$filename$10956$RCJqu g$verify-name$10957$RCJqu)
        (letrec* ((g$build-visit-code$10958$RCJqu
                    (case-lambda
                      ((g$macro*$11001$RCJqu)
                       (if (null? g$macro*$11001$RCJqu)
                         (g$build-void$7519$RCJqu)
                         (g$build-sequence$7518$RCJqu
                           '#f
                           (map (case-lambda
                                  ((g$x$11002$RCJqu)
                                   ((case-lambda
                                      ((g$loc$11003$RCJqu g$src$11004$RCJqu)
                                       (list
                                         'set!
                                         g$loc$11003$RCJqu
                                         g$src$11004$RCJqu)))
                                    (car g$x$11002$RCJqu)
                                    (g$cddr$5545$RCJqu g$x$11002$RCJqu))))
                                g$macro*$11001$RCJqu))))))
                  (g$visit!$10959$RCJqu
                    (case-lambda
                      ((g$macro*$10997$RCJqu)
                       (for-each
                         (case-lambda
                           ((g$x$10998$RCJqu)
                            ((case-lambda
                               ((g$loc$10999$RCJqu g$proc$11000$RCJqu)
                                (set-symbol-value!
                                  g$loc$10999$RCJqu
                                  g$proc$11000$RCJqu)))
                             (car g$x$10998$RCJqu)
                             (g$cadr$5543$RCJqu g$x$10998$RCJqu))))
                         g$macro*$10997$RCJqu)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7920$RCJqu
                 g$x$10955$RCJqu
                 g$verify-name$10957$RCJqu)))
            (case-lambda
              ((g$name$10969$RCJqu
                 g$ver$10970$RCJqu
                 g$imp*$10971$RCJqu
                 g$inv*$10972$RCJqu
                 g$vis*$10973$RCJqu
                 g$invoke-code$10974$RCJqu
                 g$macro*$10975$RCJqu
                 g$export-subst$10976$RCJqu
                 g$export-env$10977$RCJqu)
               ((case-lambda
                  ((g$export-env$10978$RCJqu
                     g$export-subst$10979$RCJqu
                     g$macro*$10980$RCJqu
                     g$invoke-code$10981$RCJqu
                     g$vis*$10982$RCJqu
                     g$inv*$10983$RCJqu
                     g$imp*$10984$RCJqu
                     g$ver$10985$RCJqu
                     g$name$10986$RCJqu)
                   ((case-lambda
                      ((g$id$10987$RCJqu
                         g$name$10988$RCJqu
                         g$ver$10989$RCJqu
                         g$imp*$10990$RCJqu
                         g$vis*$10991$RCJqu
                         g$inv*$10992$RCJqu
                         g$visit-proc$10993$RCJqu
                         g$invoke-proc$10994$RCJqu
                         g$visit-code$10995$RCJqu
                         g$invoke-code$10996$RCJqu)
                       (begin
                         (g$install-library$7397$RCJqu
                           g$id$10987$RCJqu
                           g$name$10988$RCJqu
                           g$ver$10989$RCJqu
                           g$imp*$10990$RCJqu
                           g$vis*$10991$RCJqu
                           g$inv*$10992$RCJqu
                           g$export-subst$10979$RCJqu
                           g$export-env$10978$RCJqu
                           g$visit-proc$10993$RCJqu
                           g$invoke-proc$10994$RCJqu
                           g$visit-code$10995$RCJqu
                           g$invoke-code$10996$RCJqu
                           '#t
                           g$filename$10956$RCJqu)
                         (values
                           g$id$10987$RCJqu
                           g$name$10988$RCJqu
                           g$ver$10989$RCJqu
                           g$imp*$10990$RCJqu
                           g$vis*$10991$RCJqu
                           g$inv*$10992$RCJqu
                           g$invoke-code$10996$RCJqu
                           g$visit-code$10995$RCJqu
                           g$export-subst$10979$RCJqu
                           g$export-env$10978$RCJqu))))
                    (gensym)
                    g$name$10986$RCJqu
                    g$ver$10985$RCJqu
                    (map g$library-spec$7403$RCJqu g$imp*$10984$RCJqu)
                    (map g$library-spec$7403$RCJqu g$vis*$10982$RCJqu)
                    (map g$library-spec$7403$RCJqu g$inv*$10983$RCJqu)
                    (case-lambda
                      (() (g$visit!$10959$RCJqu g$macro*$10980$RCJqu)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7098$RCJqu
                           g$invoke-code$10981$RCJqu))))
                    (g$build-visit-code$10958$RCJqu g$macro*$10980$RCJqu)
                    g$invoke-code$10981$RCJqu)))
                g$export-env$10977$RCJqu
                g$export-subst$10976$RCJqu
                g$macro*$10975$RCJqu
                g$invoke-code$10974$RCJqu
                g$vis*$10973$RCJqu
                g$inv*$10972$RCJqu
                g$imp*$10971$RCJqu
                g$ver$10970$RCJqu
                g$name$10969$RCJqu))))))
       ((g$x$11005$RCJqu g$filename$11006$RCJqu)
        (g$library-expander$7955$RCJqu
          g$x$11005$RCJqu
          g$filename$11006$RCJqu
          (case-lambda ((g$x$11007$RCJqu) (values)))))
       ((g$x$11008$RCJqu)
        (g$library-expander$7955$RCJqu
          g$x$11008$RCJqu
          '#f
          (case-lambda ((g$x$11009$RCJqu) (values)))))))
   (g$boot-library-expand$7956$RCJqu
     g$boot-library-expand$11406$RCJqu
     (case-lambda
       ((g$x$11010$RCJqu)
        (call-with-values
          (case-lambda (() (g$library-expander$7955$RCJqu g$x$11010$RCJqu)))
          (case-lambda
            ((g$id$11021$RCJqu
               g$name$11022$RCJqu
               g$ver$11023$RCJqu
               g$imp*$11024$RCJqu
               g$vis*$11025$RCJqu
               g$inv*$11026$RCJqu
               g$invoke-code$11027$RCJqu
               g$visit-code$11028$RCJqu
               g$export-subst$11029$RCJqu
               g$export-env$11030$RCJqu)
             ((case-lambda
                ((g$export-env$11031$RCJqu
                   g$export-subst$11032$RCJqu
                   g$visit-code$11033$RCJqu
                   g$invoke-code$11034$RCJqu
                   g$inv*$11035$RCJqu
                   g$vis*$11036$RCJqu
                   g$imp*$11037$RCJqu
                   g$ver$11038$RCJqu
                   g$name$11039$RCJqu
                   g$id$11040$RCJqu)
                 (values
                   g$name$11039$RCJqu
                   g$invoke-code$11034$RCJqu
                   g$export-subst$11032$RCJqu
                   g$export-env$11031$RCJqu)))
              g$export-env$11030$RCJqu
              g$export-subst$11029$RCJqu
              g$visit-code$11028$RCJqu
              g$invoke-code$11027$RCJqu
              g$inv*$11026$RCJqu
              g$vis*$11025$RCJqu
              g$imp*$11024$RCJqu
              g$ver$11023$RCJqu
              g$name$11022$RCJqu
              g$id$11021$RCJqu)))))))
   (g$rev-map-append$7957$RCJqu
     g$rev-map-append$11407$RCJqu
     (case-lambda
       ((g$f$11041$RCJqu g$ls$11042$RCJqu g$ac$11043$RCJqu)
        (if (null? g$ls$11042$RCJqu)
          g$ac$11043$RCJqu
          (g$rev-map-append$7957$RCJqu
            g$f$11041$RCJqu
            (cdr g$ls$11042$RCJqu)
            (cons
              (g$f$11041$RCJqu (car g$ls$11042$RCJqu))
              g$ac$11043$RCJqu))))))
   (g$build-exports$7958$RCJqu
     g$build-exports$11408$RCJqu
     (case-lambda
       ((g$lex*+loc*$11044$RCJqu g$init*$11045$RCJqu)
        (g$build-sequence$7518$RCJqu
          '#f
          (cons
            (g$build-void$7519$RCJqu)
            (g$rev-map-append$7957$RCJqu
              (case-lambda
                ((g$x$11046$RCJqu)
                 (list 'set! (cdr g$x$11046$RCJqu) (car g$x$11046$RCJqu))))
              g$lex*+loc*$11044$RCJqu
              g$init*$11045$RCJqu))))))
   (g$make-export-subst$7959$RCJqu
     g$make-export-subst$11409$RCJqu
     (case-lambda
       ((g$int*$11047$RCJqu g$ext*$11048$RCJqu g$rib$11049$RCJqu)
        (map (case-lambda
               ((g$int$11050$RCJqu g$ext$11051$RCJqu)
                ((case-lambda
                   ((g$id$11052$RCJqu)
                    ((case-lambda
                       ((g$label$11053$RCJqu)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$11053$RCJqu
                                (void)
                                (g$syntax-violation$7968$RCJqu
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$11052$RCJqu))
                              (cons g$ext$11051$RCJqu g$label$11053$RCJqu)))))))
                     (g$id->label$7597$RCJqu g$id$11052$RCJqu))))
                 (g$make-stx$7557$RCJqu
                   g$int$11050$RCJqu
                   g$top-mark*$7526$RCJqu
                   (list g$rib$11049$RCJqu)
                   '()))))
             g$int*$11047$RCJqu
             g$ext*$11048$RCJqu))))
   (g$make-export-env/macros$7960$RCJqu
     g$make-export-env/macros$11410$RCJqu
     (case-lambda
       ((g$lex*$11054$RCJqu g$loc*$11055$RCJqu g$r$11056$RCJqu)
        (letrec* ((g$lookup$11057$RCJqu
                    (case-lambda
                      ((g$x$11072$RCJqu)
                       ((letrec ((g$f$11073$RCJqu
                                   (case-lambda
                                     ((g$x$11074$RCJqu
                                        g$lex*$11075$RCJqu
                                        g$loc*$11076$RCJqu)
                                      (if (pair? g$lex*$11075$RCJqu)
                                        (if (eq? g$x$11074$RCJqu
                                                 (car g$lex*$11075$RCJqu))
                                          (car g$loc*$11076$RCJqu)
                                          (g$f$11073$RCJqu
                                            g$x$11074$RCJqu
                                            (cdr g$lex*$11075$RCJqu)
                                            (cdr g$loc*$11076$RCJqu)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11073$RCJqu)
                        g$x$11072$RCJqu
                        g$lex*$11054$RCJqu
                        g$loc*$11055$RCJqu)))))
          ((letrec ((g$f$11058$RCJqu
                      (case-lambda
                        ((g$r$11059$RCJqu
                           g$env$11060$RCJqu
                           g$global*$11061$RCJqu
                           g$macro*$11062$RCJqu)
                         (if (null? g$r$11059$RCJqu)
                           (values
                             g$env$11060$RCJqu
                             g$global*$11061$RCJqu
                             g$macro*$11062$RCJqu)
                           ((case-lambda
                              ((g$x$11063$RCJqu)
                               ((case-lambda
                                  ((g$label$11064$RCJqu g$b$11065$RCJqu)
                                   ((case-lambda
                                      ((g$t$11066$RCJqu)
                                       (if (eqv? g$t$11066$RCJqu 'lexical)
                                         ((case-lambda
                                            ((g$v$11069$RCJqu)
                                             ((case-lambda
                                                ((g$loc$11070$RCJqu
                                                   g$type$11071$RCJqu)
                                                 (g$f$11058$RCJqu
                                                   (cdr g$r$11059$RCJqu)
                                                   (cons
                                                     (g$cons*$6014$RCJqu
                                                       g$label$11064$RCJqu
                                                       g$type$11071$RCJqu
                                                       g$loc$11070$RCJqu)
                                                     g$env$11060$RCJqu)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7806$RCJqu
                                                         g$v$11069$RCJqu)
                                                       g$loc$11070$RCJqu)
                                                     g$global*$11061$RCJqu)
                                                   g$macro*$11062$RCJqu)))
                                              (g$lookup$11057$RCJqu
                                                (g$lexical-var$7806$RCJqu
                                                  g$v$11069$RCJqu))
                                              (if (g$lexical-mutable?$7807$RCJqu
                                                    g$v$11069$RCJqu)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7602$RCJqu
                                            g$b$11065$RCJqu))
                                         (if (eqv? g$t$11066$RCJqu 'local-macro)
                                           ((case-lambda
                                              ((g$loc$11068$RCJqu)
                                               (g$f$11058$RCJqu
                                                 (cdr g$r$11059$RCJqu)
                                                 (cons
                                                   (g$cons*$6014$RCJqu
                                                     g$label$11064$RCJqu
                                                     'global-macro
                                                     g$loc$11068$RCJqu)
                                                   g$env$11060$RCJqu)
                                                 g$global*$11061$RCJqu
                                                 (cons
                                                   (cons
                                                     g$loc$11068$RCJqu
                                                     (g$binding-value$7602$RCJqu
                                                       g$b$11065$RCJqu))
                                                   g$macro*$11062$RCJqu))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$11066$RCJqu
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$11067$RCJqu)
                                                 (g$f$11058$RCJqu
                                                   (cdr g$r$11059$RCJqu)
                                                   (cons
                                                     (g$cons*$6014$RCJqu
                                                       g$label$11064$RCJqu
                                                       'global-macro!
                                                       g$loc$11067$RCJqu)
                                                     g$env$11060$RCJqu)
                                                   g$global*$11061$RCJqu
                                                   (cons
                                                     (cons
                                                       g$loc$11067$RCJqu
                                                       (g$binding-value$7602$RCJqu
                                                         g$b$11065$RCJqu))
                                                     g$macro*$11062$RCJqu))))
                                              (gensym))
                                             (if (memv
                                                   g$t$11066$RCJqu
                                                   '($rtd $module))
                                               (g$f$11058$RCJqu
                                                 (cdr g$r$11059$RCJqu)
                                                 (cons
                                                   g$x$11063$RCJqu
                                                   g$env$11060$RCJqu)
                                                 g$global*$11061$RCJqu
                                                 g$macro*$11062$RCJqu)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7601$RCJqu
                                                   g$b$11065$RCJqu)
                                                 (g$binding-value$7602$RCJqu
                                                   g$b$11065$RCJqu))))))))
                                    (g$binding-type$7601$RCJqu
                                      g$b$11065$RCJqu))))
                                (car g$x$11063$RCJqu)
                                (cdr g$x$11063$RCJqu))))
                            (car g$r$11059$RCJqu)))))))
             g$f$11058$RCJqu)
           g$r$11056$RCJqu
           '()
           '()
           '())))))
   (g$generate-temporaries$7961$RCJqu
     g$generate-temporaries$11411$RCJqu
     (case-lambda
       ((g$ls$11077$RCJqu)
        ((case-lambda
           ((g$t$11078$RCJqu)
            ((case-lambda
               ((g$ls/false$11079$RCJqu)
                (if g$ls/false$11079$RCJqu
                  (apply
                    (case-lambda
                      ((g$ls$11080$RCJqu)
                       (map (case-lambda
                              ((g$x$11081$RCJqu)
                               (g$make-stx$7557$RCJqu
                                 ((case-lambda
                                    ((g$x$11082$RCJqu)
                                     (if ((case-lambda
                                            ((g$t$11083$RCJqu)
                                             (if g$t$11083$RCJqu
                                               g$t$11083$RCJqu
                                               (begin
                                                 '#f
                                                 (string? g$x$11082$RCJqu)))))
                                          (symbol? g$x$11082$RCJqu))
                                       (gensym g$x$11082$RCJqu)
                                       (gensym 't))))
                                  (g$syntax->datum$7971$RCJqu g$x$11081$RCJqu))
                                 g$top-mark*$7526$RCJqu
                                 '()
                                 '())))
                            g$ls$11080$RCJqu)))
                    g$ls/false$11079$RCJqu)
                  ((case-lambda
                     ((g$t$11084$RCJqu)
                      ((case-lambda
                         ((g$ls/false$11085$RCJqu)
                          (if g$ls/false$11085$RCJqu
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11085$RCJqu)
                            (g$syntax-violation$7968$RCJqu
                              '#f
                              '"invalid syntax"
                              g$t$11084$RCJqu))))
                       (g$syntax-dispatch$7862$RCJqu g$t$11084$RCJqu '_))))
                   g$t$11078$RCJqu))))
             (g$syntax-dispatch$7862$RCJqu g$t$11078$RCJqu 'each-any))))
         g$ls$11077$RCJqu))))
   (g$free-identifier=?$7962$RCJqu
     g$free-identifier=?$11412$RCJqu
     (case-lambda
       ((g$x$11086$RCJqu g$y$11087$RCJqu)
        (if (g$id?$7584$RCJqu g$x$11086$RCJqu)
          (if (g$id?$7584$RCJqu g$y$11087$RCJqu)
            (g$free-id=?$7588$RCJqu g$x$11086$RCJqu g$y$11087$RCJqu)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11087$RCJqu))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11086$RCJqu)))))
   (g$bound-identifier=?$7963$RCJqu
     g$bound-identifier=?$11413$RCJqu
     (case-lambda
       ((g$x$11088$RCJqu g$y$11089$RCJqu)
        (if (g$id?$7584$RCJqu g$x$11088$RCJqu)
          (if (g$id?$7584$RCJqu g$y$11089$RCJqu)
            (g$bound-id=?$7587$RCJqu g$x$11088$RCJqu g$y$11089$RCJqu)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11089$RCJqu))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11088$RCJqu)))))
   (g$extract-position-condition$7964$RCJqu
     g$extract-position-condition$11414$RCJqu
     (case-lambda
       ((g$x$11090$RCJqu)
        (letrec* ((g$11668$11091$RCJqu
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11671$RCJqu
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11670$11092$RCJqu '#f)
                  (g$11669$11093$RCJqu
                    (make-record-constructor-descriptor
                      g$11668$11091$RCJqu
                      &condition-rcd
                      g$11670$11092$RCJqu))
                  (g$11667$11094$RCJqu (record-predicate g$11668$11091$RCJqu))
                  (g$make-source-condition$11095$RCJqu
                    (record-constructor g$11669$11093$RCJqu))
                  (g$11665$11096$RCJqu (record-accessor g$11668$11091$RCJqu '0))
                  (g$11666$11097$RCJqu (record-accessor g$11668$11091$RCJqu '1))
                  (g$source-condition?$11098$RCJqu
                    (condition-predicate g$11668$11091$RCJqu))
                  (g$source-filename$11099$RCJqu
                    (condition-accessor
                      g$11668$11091$RCJqu
                      g$11665$11096$RCJqu))
                  (g$source-character$11100$RCJqu
                    (condition-accessor
                      g$11668$11091$RCJqu
                      g$11666$11097$RCJqu)))
          (if (g$stx?$7556$RCJqu g$x$11090$RCJqu)
            ((case-lambda
               ((g$x$11101$RCJqu)
                (if (annotation? g$x$11101$RCJqu)
                  ((case-lambda
                     ((g$src$11102$RCJqu)
                      (if (pair? g$src$11102$RCJqu)
                        (g$make-source-condition$11095$RCJqu
                          (car g$src$11102$RCJqu)
                          (cdr g$src$11102$RCJqu))
                        (condition))))
                   (annotation-source g$x$11101$RCJqu))
                  (condition))))
             (g$stx-expr$7558$RCJqu g$x$11090$RCJqu))
            (condition))))))
   (g$syntax-error$7965$RCJqu
     g$syntax-error$11415$RCJqu
     (case-lambda
       ((g$x$11103$RCJqu . g$args$11104$RCJqu)
        (begin
          (if (g$for-all$6012$RCJqu string? g$args$11104$RCJqu)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11104$RCJqu))
          (raise
            (condition
              (g$make-message-condition$6266$RCJqu
                (if (null? g$args$11104$RCJqu)
                  '"invalid syntax"
                  (apply string-append g$args$11104$RCJqu)))
              (g$make-syntax-violation$6338$RCJqu
                (g$syntax->datum$7971$RCJqu g$x$11103$RCJqu)
                '#f)
              (g$extract-position-condition$7964$RCJqu g$x$11103$RCJqu)
              (g$extract-trace$7966$RCJqu g$x$11103$RCJqu)))))))
   (g$extract-trace$7966$RCJqu
     g$extract-trace$11416$RCJqu
     (case-lambda
       ((g$x$11105$RCJqu)
        (letrec* ((g$11692$11106$RCJqu
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11695$RCJqu
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11694$11107$RCJqu '#f)
                  (g$11693$11108$RCJqu
                    (make-record-constructor-descriptor
                      g$11692$11106$RCJqu
                      &condition-rcd
                      g$11694$11107$RCJqu))
                  (g$11691$11109$RCJqu (record-predicate g$11692$11106$RCJqu))
                  (g$make-trace$11110$RCJqu
                    (record-constructor g$11693$11108$RCJqu))
                  (g$11690$11111$RCJqu (record-accessor g$11692$11106$RCJqu '0))
                  (g$trace?$11112$RCJqu
                    (condition-predicate g$11692$11106$RCJqu))
                  (g$trace-form$11113$RCJqu
                    (condition-accessor
                      g$11692$11106$RCJqu
                      g$11690$11111$RCJqu)))
          ((letrec ((g$f$11114$RCJqu
                      (case-lambda
                        ((g$x$11115$RCJqu)
                         (if (g$stx?$7556$RCJqu g$x$11115$RCJqu)
                           (apply
                             condition
                             (g$make-trace$11110$RCJqu g$x$11115$RCJqu)
                             (map g$f$11114$RCJqu
                                  (g$stx-ae*$7561$RCJqu g$x$11115$RCJqu)))
                           (if (annotation? g$x$11115$RCJqu)
                             (g$make-trace$11110$RCJqu
                               (g$make-stx$7557$RCJqu
                                 g$x$11115$RCJqu
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11114$RCJqu)
           g$x$11105$RCJqu)))))
   (g$syntax-violation*$7967$RCJqu
     g$syntax-violation*$11417$RCJqu
     (case-lambda
       ((g$who$11116$RCJqu
          g$msg$11117$RCJqu
          g$form$11118$RCJqu
          g$condition-object$11119$RCJqu)
        (begin
          (if (string? g$msg$11117$RCJqu)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11117$RCJqu))
          ((case-lambda
             ((g$who$11120$RCJqu)
              (raise
                (condition
                  (if g$who$11120$RCJqu
                    (g$make-who-condition$6312$RCJqu g$who$11120$RCJqu)
                    (condition))
                  (g$make-message-condition$6266$RCJqu g$msg$11117$RCJqu)
                  g$condition-object$11119$RCJqu
                  (g$extract-position-condition$7964$RCJqu g$form$11118$RCJqu)
                  (g$extract-trace$7966$RCJqu g$form$11118$RCJqu)))))
           (if ((case-lambda
                  ((g$t$11121$RCJqu)
                   (if g$t$11121$RCJqu
                     g$t$11121$RCJqu
                     (begin '#f (symbol? g$who$11116$RCJqu)))))
                (string? g$who$11116$RCJqu))
             g$who$11116$RCJqu
             (if (not g$who$11116$RCJqu)
               ((case-lambda
                  ((g$t$11122$RCJqu)
                   ((case-lambda
                      ((g$ls/false$11123$RCJqu)
                       (if (if g$ls/false$11123$RCJqu
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11124$RCJqu)
                                    (g$id?$7584$RCJqu g$id$11124$RCJqu)))
                                 g$ls/false$11123$RCJqu))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11125$RCJqu)
                              (g$syntax->datum$7971$RCJqu g$id$11125$RCJqu)))
                           g$ls/false$11123$RCJqu)
                         ((case-lambda
                            ((g$t$11126$RCJqu)
                             ((case-lambda
                                ((g$ls/false$11127$RCJqu)
                                 (if (if g$ls/false$11127$RCJqu
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11128$RCJqu
                                                g$rest$11129$RCJqu)
                                              (g$id?$7584$RCJqu
                                                g$id$11128$RCJqu)))
                                           g$ls/false$11127$RCJqu))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11130$RCJqu g$rest$11131$RCJqu)
                                        (g$syntax->datum$7971$RCJqu
                                          g$id$11130$RCJqu)))
                                     g$ls/false$11127$RCJqu)
                                   ((case-lambda
                                      ((g$t$11132$RCJqu)
                                       ((case-lambda
                                          ((g$ls/false$11133$RCJqu)
                                           (if g$ls/false$11133$RCJqu
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11133$RCJqu)
                                             (g$syntax-violation$7968$RCJqu
                                               '#f
                                               '"invalid syntax"
                                               g$t$11132$RCJqu))))
                                        (g$syntax-dispatch$7862$RCJqu
                                          g$t$11132$RCJqu
                                          '_))))
                                    g$t$11126$RCJqu))))
                              (g$syntax-dispatch$7862$RCJqu
                                g$t$11126$RCJqu
                                '(any . any)))))
                          g$t$11122$RCJqu))))
                    (g$syntax-dispatch$7862$RCJqu g$t$11122$RCJqu 'any))))
                g$form$11118$RCJqu)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11116$RCJqu))))))))
   (g$syntax-violation$7968$RCJqu
     g$syntax-violation$11418$RCJqu
     (case-lambda
       ((g$who$11134$RCJqu g$msg$11135$RCJqu g$form$11136$RCJqu)
        (g$syntax-violation$7968$RCJqu
          g$who$11134$RCJqu
          g$msg$11135$RCJqu
          g$form$11136$RCJqu
          '#f))
       ((g$who$11137$RCJqu
          g$msg$11138$RCJqu
          g$form$11139$RCJqu
          g$subform$11140$RCJqu)
        (g$syntax-violation*$7967$RCJqu
          g$who$11137$RCJqu
          g$msg$11138$RCJqu
          g$form$11139$RCJqu
          (g$make-syntax-violation$6338$RCJqu
            (g$syntax->datum$7971$RCJqu g$form$11139$RCJqu)
            (g$syntax->datum$7971$RCJqu g$subform$11140$RCJqu))))))
   (g$identifier?$7969$RCJqu
     g$identifier?$11419$RCJqu
     (case-lambda ((g$x$11141$RCJqu) (g$id?$7584$RCJqu g$x$11141$RCJqu))))
   (g$datum->syntax$7970$RCJqu
     g$datum->syntax$11420$RCJqu
     (case-lambda
       ((g$id$11142$RCJqu g$datum$11143$RCJqu)
        (if (g$id?$7584$RCJqu g$id$11142$RCJqu)
          (g$datum->stx$7567$RCJqu g$id$11142$RCJqu g$datum$11143$RCJqu)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11142$RCJqu)))))
   (g$syntax->datum$7971$RCJqu
     g$syntax->datum$11421$RCJqu
     (case-lambda
       ((g$x$11144$RCJqu) (g$stx->datum$7595$RCJqu g$x$11144$RCJqu))))
   (g$compile-r6rs-top-level$7972$RCJqu
     g$compile-r6rs-top-level$11422$RCJqu
     (case-lambda
       ((g$x*$11145$RCJqu)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7922$RCJqu g$x*$11145$RCJqu)))
          (case-lambda
            ((g$lib*$11148$RCJqu g$invoke-code$11149$RCJqu)
             ((case-lambda
                ((g$invoke-code$11150$RCJqu g$lib*$11151$RCJqu)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$7399$RCJqu g$lib*$11151$RCJqu)
                      (eval-core
                        (g$expanded->core$7098$RCJqu
                          g$invoke-code$11150$RCJqu)))))))
              g$invoke-code$11149$RCJqu
              g$lib*$11148$RCJqu)))))))
   (g$pre-compile-r6rs-top-level$7973$RCJqu
     g$pre-compile-r6rs-top-level$11423$RCJqu
     (case-lambda
       ((g$x*$11152$RCJqu)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7922$RCJqu g$x*$11152$RCJqu)))
          (case-lambda
            ((g$lib*$11155$RCJqu g$invoke-code$11156$RCJqu)
             ((case-lambda
                ((g$invoke-code$11157$RCJqu g$lib*$11158$RCJqu)
                 (begin
                   (for-each g$invoke-library$7399$RCJqu g$lib*$11158$RCJqu)
                   (compile-core
                     (g$expanded->core$7098$RCJqu g$invoke-code$11157$RCJqu)))))
              g$invoke-code$11156$RCJqu
              g$lib*$11155$RCJqu)))))))
   (g$interaction-environment$7974$RCJqu
     g$interaction-environment$11424$RCJqu
     ((case-lambda
        ((g$the-env$11159$RCJqu)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11160$RCJqu)
                (if g$t$11160$RCJqu
                  g$t$11160$RCJqu
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11161$RCJqu g$rib$11162$RCJqu)
                        (begin
                          ((case-lambda
                             ((g$subst$11163$RCJqu)
                              (begin
                                (g$set-rib-sym*!$7543$RCJqu
                                  g$rib$11162$RCJqu
                                  (map car g$subst$11163$RCJqu))
                                (g$set-rib-mark**!$7544$RCJqu
                                  g$rib$11162$RCJqu
                                  (map (case-lambda
                                         ((g$x$11164$RCJqu)
                                          g$top-mark*$7526$RCJqu))
                                       g$subst$11163$RCJqu))
                                (g$set-rib-label*!$7545$RCJqu
                                  g$rib$11162$RCJqu
                                  (map cdr g$subst$11163$RCJqu)))))
                           (g$library-subst$7356$RCJqu g$lib$11161$RCJqu))
                          ((case-lambda
                             ((g$env$11165$RCJqu)
                              (begin
                                (set! g$the-env$11159$RCJqu g$env$11165$RCJqu)
                                g$env$11165$RCJqu)))
                           (g$make-interaction-env$7939$RCJqu
                             g$rib$11162$RCJqu
                             '()
                             '())))))
                     (g$find-library-by-name$7392$RCJqu '(ironscheme))
                     (g$make-empty-rib$7547$RCJqu))))))
             g$the-env$11159$RCJqu)))))
      '#f))
   (g$top-level-context$7975$RCJqu
     g$top-level-context$11425$RCJqu
     (g$make-parameter$6852$RCJqu '#f)))
  (g$current-library-expander$7389$RCJqu g$library-expander$7955$RCJqu))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7095$RCJqu
      (case-lambda
        ((g$x$11476$RCJqu)
         ((case-lambda
            ((g$t$11477$RCJqu) (if g$t$11477$RCJqu (cdr g$t$11477$RCJqu) '#f)))
          (assq
            g$x$11476$RCJqu
            '((ellipsis-map . g$ellipsis-map$11317$RCJqu)
              (ironscheme-build . g$ironscheme-build$11470$RCJqu)
              (syntax-error . g$syntax-error$11415$RCJqu)
              (syntax-dispatch . g$syntax-dispatch$11312$RCJqu)
              (compile-system-libraries
                .
                g$compile-system-libraries$11472$RCJqu)
              (compile->closure . g$compile->closure$11474$RCJqu)
              (compile . g$compile$11473$RCJqu)
              (load . g$load$11469$RCJqu)
              (interaction-environment . g$interaction-environment$11424$RCJqu)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11250$RCJqu)
              (variable-transformer? . g$variable-transformer?$11249$RCJqu)
              (make-variable-transformer
                .
                g$make-variable-transformer$11248$RCJqu)
              (identifier? . g$identifier?$11419$RCJqu)
              (generate-temporaries . g$generate-temporaries$11411$RCJqu)
              (free-identifier=? . g$free-identifier=?$11412$RCJqu)
              (syntax->datum . g$syntax->datum$11421$RCJqu)
              (datum->syntax . g$datum->syntax$11420$RCJqu)
              (bound-identifier=? . g$bound-identifier=?$11413$RCJqu)
              (delete-file . g$delete-file$5884$RCJqu)
              (file-exists? . g$file-exists?$5883$RCJqu)
              (list-sort . g$list-sort$6400$RCJqu)
              (make-eqv-hashtable . g$make-eqv-hashtable$5806$RCJqu)
              (make-eq-hashtable . g$make-eq-hashtable$5805$RCJqu)
              (hashtable-update! . g$hashtable-update!$5812$RCJqu)
              (hashtable-size . g$hashtable-size$5807$RCJqu)
              (hashtable-set! . g$hashtable-set!$5809$RCJqu)
              (hashtable-ref . g$hashtable-ref$5808$RCJqu)
              (hashtable-delete! . g$hashtable-delete!$5810$RCJqu)
              (hashtable-contains? . g$hashtable-contains?$5811$RCJqu)
              (hashtable-clear! . g$hashtable-clear!$5813$RCJqu)
              (open-string-output-port . g$open-string-output-port$6742$RCJqu)
              (make-i/o-write-error . g$make-i/o-write-error$6671$RCJqu)
              (make-i/o-read-error . g$make-i/o-read-error$6665$RCJqu)
              (make-i/o-port-error . g$make-i/o-port-error$6717$RCJqu)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6677$RCJqu)
              (make-i/o-filename-error . g$make-i/o-filename-error$6685$RCJqu)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6693$RCJqu)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6699$RCJqu)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6711$RCJqu)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6705$RCJqu)
              (make-i/o-error . g$make-i/o-error$6659$RCJqu)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6731$RCJqu)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6725$RCJqu)
              (i/o-write-error? . g$i/o-write-error?$6672$RCJqu)
              (i/o-read-error? . g$i/o-read-error?$6666$RCJqu)
              (i/o-port-error? . g$i/o-port-error?$6719$RCJqu)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6679$RCJqu)
              (i/o-filename-error? . g$i/o-filename-error?$6687$RCJqu)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6694$RCJqu)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6700$RCJqu)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6712$RCJqu)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6706$RCJqu)
              (i/o-error? . g$i/o-error?$6660$RCJqu)
              (i/o-error-port . g$i/o-error-port$6720$RCJqu)
              (i/o-error-filename . g$i/o-error-filename$6688$RCJqu)
              (i/o-encoding-error? . g$i/o-encoding-error?$6733$RCJqu)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6734$RCJqu)
              (i/o-decoding-error? . g$i/o-decoding-error?$6726$RCJqu)
              (scheme-report-environment
                .
                g$scheme-report-environment$11402$RCJqu)
              (quotient . g$quotient$6369$RCJqu)
              (null-environment . g$null-environment$11401$RCJqu)
              (remainder . g$remainder$6370$RCJqu)
              (modulo . g$modulo$6371$RCJqu)
              (command-line . g$command-line$11466$RCJqu)
              (remove . g$remove$6017$RCJqu)
              (remv . g$remv$6018$RCJqu)
              (remp . g$remp$6003$RCJqu)
              (remq . g$remq$6019$RCJqu)
              (partition . g$partition$6002$RCJqu)
              (memp . g$memp$6009$RCJqu)
              (member . g$member$6008$RCJqu)
              (exists . g$exists$6013$RCJqu)
              (for-all . g$for-all$6012$RCJqu)
              (fold-right . g$fold-right$6016$RCJqu)
              (fold-left . g$fold-left$6015$RCJqu)
              (find . g$find$6001$RCJqu)
              (filter . g$filter$6004$RCJqu)
              (cons* . g$cons*$6014$RCJqu)
              (assv . g$assv$6005$RCJqu)
              (assp . g$assp$6007$RCJqu)
              (assoc . g$assoc$6006$RCJqu)
              (eval . g$eval$11404$RCJqu)
              (environment . g$environment$11400$RCJqu)
              (who-condition? . g$who-condition?$6314$RCJqu)
              (warning? . g$warning?$6275$RCJqu)
              (violation? . g$violation?$6293$RCJqu)
              (undefined-violation? . g$undefined-violation?$6349$RCJqu)
              (syntax-violation? . g$syntax-violation?$6341$RCJqu)
              (syntax-violation-subform . g$syntax-violation-subform$6343$RCJqu)
              (syntax-violation-form . g$syntax-violation-form$6342$RCJqu)
              (syntax-violation . g$syntax-violation$11418$RCJqu)
              (serious-condition? . g$serious-condition?$6281$RCJqu)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6321$RCJqu)
              (message-condition? . g$message-condition?$6268$RCJqu)
              (make-who-condition . g$make-who-condition$6312$RCJqu)
              (make-warning . g$make-warning$6274$RCJqu)
              (make-violation . g$make-violation$6292$RCJqu)
              (make-undefined-violation . g$make-undefined-violation$6348$RCJqu)
              (make-syntax-violation . g$make-syntax-violation$6338$RCJqu)
              (make-serious-condition . g$make-serious-condition$6280$RCJqu)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6320$RCJqu)
              (make-message-condition . g$make-message-condition$6266$RCJqu)
              (make-lexical-violation . g$make-lexical-violation$6332$RCJqu)
              (make-irritants-condition . g$make-irritants-condition$6304$RCJqu)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6326$RCJqu)
              (make-error . g$make-error$6286$RCJqu)
              (make-assertion-violation . g$make-assertion-violation$6298$RCJqu)
              (lexical-violation? . g$lexical-violation?$6333$RCJqu)
              (irritants-condition? . g$irritants-condition?$6306$RCJqu)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6327$RCJqu)
              (error? . g$error?$6287$RCJqu)
              (condition-who . g$condition-who$6315$RCJqu)
              (condition-message . g$condition-message$6269$RCJqu)
              (condition-irritants . g$condition-irritants$6307$RCJqu)
              (assertion-violation? . g$assertion-violation?$6299$RCJqu)
              (native-endianness . g$native-endianness$6131$RCJqu)
              (bytevector-u64-set! . g$bytevector-u64-set!$6152$RCJqu)
              (bytevector-u64-ref . g$bytevector-u64-ref$6148$RCJqu)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6154$RCJqu)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6150$RCJqu)
              (bytevector-u32-set! . g$bytevector-u32-set!$6144$RCJqu)
              (bytevector-u32-ref . g$bytevector-u32-ref$6140$RCJqu)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6146$RCJqu)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6142$RCJqu)
              (bytevector-u16-set! . g$bytevector-u16-set!$6136$RCJqu)
              (bytevector-u16-ref . g$bytevector-u16-ref$6132$RCJqu)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6138$RCJqu)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6134$RCJqu)
              (bytevector-s64-set! . g$bytevector-s64-set!$6153$RCJqu)
              (bytevector-s64-ref . g$bytevector-s64-ref$6149$RCJqu)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6155$RCJqu)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6151$RCJqu)
              (bytevector-s32-set! . g$bytevector-s32-set!$6145$RCJqu)
              (bytevector-s32-ref . g$bytevector-s32-ref$6141$RCJqu)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6147$RCJqu)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6143$RCJqu)
              (bytevector-s16-set! . g$bytevector-s16-set!$6137$RCJqu)
              (bytevector-s16-ref . g$bytevector-s16-ref$6133$RCJqu)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6139$RCJqu)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6135$RCJqu)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6158$RCJqu)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6156$RCJqu)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6159$RCJqu)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6157$RCJqu)
              (no-nans-violation? . g$no-nans-violation?$6574$RCJqu)
              (no-infinities-violation? . g$no-infinities-violation?$6568$RCJqu)
              (make-no-nans-violation . g$make-no-nans-violation$6573$RCJqu)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6567$RCJqu)
              (fxrotate-bit-field . g$fxrotate-bit-field$6550$RCJqu)
              (fxif . g$fxif$6544$RCJqu)
              (fxcopy-bit-field . g$fxcopy-bit-field$6547$RCJqu)
              (fxcopy-bit . g$fxcopy-bit$6545$RCJqu)
              (fxbit-field . g$fxbit-field$6546$RCJqu)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6549$RCJqu)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6548$RCJqu)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6495$RCJqu)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$6496$RCJqu)
              (bitwise-if . g$bitwise-if$6489$RCJqu)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6492$RCJqu)
              (bitwise-copy-bit . g$bitwise-copy-bit$6490$RCJqu)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6494$RCJqu)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6493$RCJqu)
              (rationalize . g$rationalize$5570$RCJqu)
              (cddddr . g$cddddr$5569$RCJqu)
              (cdddar . g$cdddar$5568$RCJqu)
              (cddadr . g$cddadr$5567$RCJqu)
              (cddaar . g$cddaar$5566$RCJqu)
              (cdaddr . g$cdaddr$5565$RCJqu)
              (cdadar . g$cdadar$5564$RCJqu)
              (cdaadr . g$cdaadr$5563$RCJqu)
              (cdaaar . g$cdaaar$5562$RCJqu)
              (cadddr . g$cadddr$5561$RCJqu)
              (caddar . g$caddar$5560$RCJqu)
              (cadadr . g$cadadr$5559$RCJqu)
              (cadaar . g$cadaar$5558$RCJqu)
              (caaddr . g$caaddr$5557$RCJqu)
              (caadar . g$caadar$5556$RCJqu)
              (caaadr . g$caaadr$5555$RCJqu)
              (caaaar . g$caaaar$5554$RCJqu)
              (cdddr . g$cdddr$5553$RCJqu)
              (cddar . g$cddar$5552$RCJqu)
              (cdadr . g$cdadr$5551$RCJqu)
              (cdaar . g$cdaar$5550$RCJqu)
              (caddr . g$caddr$5549$RCJqu)
              (cadar . g$cadar$5548$RCJqu)
              (caadr . g$caadr$5547$RCJqu)
              (caaar . g$caaar$5546$RCJqu)
              (cddr . g$cddr$5545$RCJqu)
              (cdar . g$cdar$5544$RCJqu)
              (cadr . g$cadr$5543$RCJqu)
              (caar . g$caar$5542$RCJqu)
              (load/args . g$load/args$11468$RCJqu)
              (printf . g$printf$6766$RCJqu)
              (fprintf . g$fprintf$6767$RCJqu)
              (format . g$format$6768$RCJqu)
              (trace-printer . g$trace-printer$11465$RCJqu)
              (make-traced-macro . g$make-traced-macro$6772$RCJqu)
              (make-parameter . g$make-parameter$6852$RCJqu)
              (environment-symbols . g$environment-symbols$11398$RCJqu)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11397$RCJqu)
              (library-path . g$library-path$7381$RCJqu)
              (library-extensions . g$library-extensions$7382$RCJqu)
              (installed-libraries . g$installed-libraries$7402$RCJqu)
              (expand . g$expand$11403$RCJqu)))))))
    (g$install-library$7397$RCJqu
      'g$12451$RCJqu
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12388$RCJqu)
        (cosh . g$12387$RCJqu)
        (sinh . g$12386$RCJqu)
        (make-guid . g$12385$RCJqu)
        (unspecified? . g$12384$RCJqu)
        (make-trace . g$12383$RCJqu)
        (make-list . g$12382$RCJqu)
        (last-pair . g$12381$RCJqu)
        (load-r5rs . g$12380$RCJqu)
        (license . g$12379$RCJqu)
        (stacktrace . g$12378$RCJqu)
        (ironscheme-build . g$11764$RCJqu)
        (set-symbol-value! . g$12364$RCJqu)
        (symbol-value . g$12363$RCJqu)
        (ungensym . g$12362$RCJqu)
        (gensym . g$12361$RCJqu)
        (void . g$12360$RCJqu)
        (compile-system-libraries . g$11766$RCJqu)
        (compile->closure . g$11768$RCJqu)
        (compile . g$11767$RCJqu)
        (load . g$11763$RCJqu)
        (interaction-environment . g$8832$RCJqu)
        (string-upcase . g$12356$RCJqu)
        (string-titlecase . g$12355$RCJqu)
        (string-normalize-nfkd . g$12354$RCJqu)
        (string-normalize-nfkc . g$12353$RCJqu)
        (string-normalize-nfd . g$12352$RCJqu)
        (string-normalize-nfc . g$12351$RCJqu)
        (string-foldcase . g$12350$RCJqu)
        (string-downcase . g$12349$RCJqu)
        (string-ci>? . g$12348$RCJqu)
        (string-ci>=? . g$12347$RCJqu)
        (string-ci=? . g$12346$RCJqu)
        (string-ci<? . g$12345$RCJqu)
        (string-ci<=? . g$12344$RCJqu)
        (char-whitespace? . g$12343$RCJqu)
        (char-upper-case? . g$12342$RCJqu)
        (char-title-case? . g$12341$RCJqu)
        (char-numeric? . g$12340$RCJqu)
        (char-lower-case? . g$12339$RCJqu)
        (char-general-category . g$12338$RCJqu)
        (char-upcase . g$12337$RCJqu)
        (char-titlecase . g$12336$RCJqu)
        (char-foldcase . g$12335$RCJqu)
        (char-downcase . g$12334$RCJqu)
        (char-ci>? . g$12333$RCJqu)
        (char-ci>=? . g$12332$RCJqu)
        (char-ci=? . g$12331$RCJqu)
        (char-ci<? . g$12330$RCJqu)
        (char-ci<=? . g$12329$RCJqu)
        (char-alphabetic? . g$12328$RCJqu)
        (variable-transformer-procedure . g$8436$RCJqu)
        (variable-transformer? . g$8435$RCJqu)
        (make-variable-transformer . g$8434$RCJqu)
        (identifier? . g$8827$RCJqu)
        (generate-temporaries . g$8819$RCJqu)
        (free-identifier=? . g$8820$RCJqu)
        (syntax->datum . g$8829$RCJqu)
        (datum->syntax . g$8828$RCJqu)
        (bound-identifier=? . g$8821$RCJqu)
        (record-type-descriptor? . g$12327$RCJqu)
        (record-predicate . g$12326$RCJqu)
        (record-mutator . g$12325$RCJqu)
        (record-constructor . g$12324$RCJqu)
        (record-accessor . g$12323$RCJqu)
        (make-record-type-descriptor . g$12322$RCJqu)
        (make-record-constructor-descriptor . g$12321$RCJqu)
        (record? . g$12320$RCJqu)
        (record-type-uid . g$12319$RCJqu)
        (record-type-sealed? . g$12318$RCJqu)
        (record-type-parent . g$12317$RCJqu)
        (record-type-opaque? . g$12316$RCJqu)
        (record-type-name . g$12315$RCJqu)
        (record-type-generative? . g$12314$RCJqu)
        (record-type-field-names . g$12313$RCJqu)
        (record-rtd . g$12312$RCJqu)
        (record-field-mutable? . g$12311$RCJqu)
        (delete-file . g$6617$RCJqu)
        (file-exists? . g$6616$RCJqu)
        (vector-sort! . g$12310$RCJqu)
        (vector-sort . g$12309$RCJqu)
        (list-sort . g$7124$RCJqu)
        (symbol-hash . g$12308$RCJqu)
        (string-ci-hash . g$12307$RCJqu)
        (string-hash . g$12306$RCJqu)
        (equal-hash . g$12305$RCJqu)
        (hashtable-equivalence-function . g$12304$RCJqu)
        (make-hashtable . g$12303$RCJqu)
        (hashtable-hash-function . g$12302$RCJqu)
        (make-eqv-hashtable . g$6584$RCJqu)
        (make-eq-hashtable . g$6583$RCJqu)
        (hashtable? . g$12301$RCJqu)
        (hashtable-update! . g$6590$RCJqu)
        (hashtable-size . g$6585$RCJqu)
        (hashtable-set! . g$6587$RCJqu)
        (hashtable-ref . g$6586$RCJqu)
        (hashtable-mutable? . g$12300$RCJqu)
        (hashtable-keys . g$12299$RCJqu)
        (hashtable-entries . g$12298$RCJqu)
        (hashtable-delete! . g$6588$RCJqu)
        (hashtable-copy . g$12297$RCJqu)
        (hashtable-contains? . g$6589$RCJqu)
        (hashtable-clear! . g$6591$RCJqu)
        (call-with-output-file . g$12296$RCJqu)
        (call-with-input-file . g$12295$RCJqu)
        (write-char . g$12294$RCJqu)
        (write . g$12293$RCJqu)
        (with-output-to-file . g$12292$RCJqu)
        (with-input-from-file . g$12291$RCJqu)
        (read-char . g$12290$RCJqu)
        (read . g$12289$RCJqu)
        (peek-char . g$12288$RCJqu)
        (open-output-file . g$12287$RCJqu)
        (open-input-file . g$12286$RCJqu)
        (newline . g$12285$RCJqu)
        (display . g$12284$RCJqu)
        (close-output-port . g$12283$RCJqu)
        (close-input-port . g$12282$RCJqu)
        (eof-object? . g$12281$RCJqu)
        (eof-object . g$12280$RCJqu)
        (current-error-port . g$12279$RCJqu)
        (current-output-port . g$12278$RCJqu)
        (current-input-port . g$12277$RCJqu)
        (output-port? . g$12276$RCJqu)
        (input-port? . g$12275$RCJqu)
        (utf-8-codec . g$12274$RCJqu)
        (utf-16-codec . g$12273$RCJqu)
        (transcoder-error-handling-mode . g$12272$RCJqu)
        (transcoder-eol-style . g$12271$RCJqu)
        (transcoder-codec . g$12270$RCJqu)
        (transcoded-port . g$12269$RCJqu)
        (textual-port? . g$12268$RCJqu)
        (string->bytevector . g$12267$RCJqu)
        (standard-output-port . g$12266$RCJqu)
        (standard-input-port . g$12265$RCJqu)
        (standard-error-port . g$12264$RCJqu)
        (set-port-position! . g$12263$RCJqu)
        (put-u8 . g$12262$RCJqu)
        (put-string . g$12261$RCJqu)
        (put-datum . g$12260$RCJqu)
        (put-char . g$12259$RCJqu)
        (put-bytevector . g$12258$RCJqu)
        (port? . g$12257$RCJqu)
        (port-transcoder . g$12256$RCJqu)
        (port-position . g$12255$RCJqu)
        (port-has-set-port-position!? . g$12254$RCJqu)
        (port-has-port-position? . g$12253$RCJqu)
        (port-eof? . g$12252$RCJqu)
        (output-port-buffer-mode . g$12251$RCJqu)
        (open-string-output-port . g$7515$RCJqu)
        (open-string-input-port . g$12250$RCJqu)
        (open-file-output-port . g$12249$RCJqu)
        (open-file-input/output-port . g$12248$RCJqu)
        (open-file-input-port . g$12247$RCJqu)
        (open-bytevector-output-port . g$12246$RCJqu)
        (open-bytevector-input-port . g$12245$RCJqu)
        (native-transcoder . g$12244$RCJqu)
        (native-eol-style . g$12243$RCJqu)
        (make-transcoder . g$12242$RCJqu)
        (latin-1-codec . g$12241$RCJqu)
        (make-i/o-write-error . g$7372$RCJqu)
        (make-i/o-read-error . g$7358$RCJqu)
        (make-i/o-port-error . g$7477$RCJqu)
        (make-i/o-invalid-position-error . g$7387$RCJqu)
        (make-i/o-filename-error . g$7404$RCJqu)
        (make-i/o-file-protection-error . g$7420$RCJqu)
        (make-i/o-file-is-read-only-error . g$7434$RCJqu)
        (make-i/o-file-does-not-exist-error . g$7462$RCJqu)
        (make-i/o-file-already-exists-error . g$7448$RCJqu)
        (make-i/o-error . g$7344$RCJqu)
        (make-i/o-encoding-error . g$7508$RCJqu)
        (make-i/o-decoding-error . g$7493$RCJqu)
        (make-custom-textual-output-port . g$12240$RCJqu)
        (make-custom-textual-input/output-port . g$12239$RCJqu)
        (make-custom-textual-input-port . g$12238$RCJqu)
        (make-custom-binary-output-port . g$12237$RCJqu)
        (make-custom-binary-input/output-port . g$12236$RCJqu)
        (make-custom-binary-input-port . g$12235$RCJqu)
        (make-bytevector . g$12234$RCJqu)
        (lookahead-u8 . g$12233$RCJqu)
        (lookahead-char . g$12232$RCJqu)
        (i/o-write-error? . g$7373$RCJqu)
        (i/o-read-error? . g$7359$RCJqu)
        (i/o-port-error? . g$7479$RCJqu)
        (i/o-invalid-position-error? . g$7389$RCJqu)
        (i/o-filename-error? . g$7406$RCJqu)
        (i/o-file-protection-error? . g$7421$RCJqu)
        (i/o-file-is-read-only-error? . g$7435$RCJqu)
        (i/o-file-does-not-exist-error? . g$7463$RCJqu)
        (i/o-file-already-exists-error? . g$7449$RCJqu)
        (i/o-error? . g$7345$RCJqu)
        (i/o-error-port . g$7480$RCJqu)
        (i/o-error-filename . g$7407$RCJqu)
        (i/o-encoding-error? . g$7510$RCJqu)
        (i/o-encoding-error-char . g$7511$RCJqu)
        (i/o-decoding-error? . g$7494$RCJqu)
        (get-u8 . g$12231$RCJqu)
        (get-string-n! . g$12230$RCJqu)
        (get-string-n . g$12229$RCJqu)
        (get-string-all . g$12228$RCJqu)
        (get-line . g$12227$RCJqu)
        (get-datum . g$12226$RCJqu)
        (get-char . g$12225$RCJqu)
        (get-bytevector-some . g$12224$RCJqu)
        (get-bytevector-n! . g$12223$RCJqu)
        (get-bytevector-n . g$12222$RCJqu)
        (get-bytevector-all . g$12221$RCJqu)
        (flush-output-port . g$12220$RCJqu)
        (close-port . g$12219$RCJqu)
        (call-with-string-output-port . g$12218$RCJqu)
        (call-with-port . g$12217$RCJqu)
        (call-with-bytevector-output-port . g$12216$RCJqu)
        (bytevector->string . g$12215$RCJqu)
        (buffer-mode? . g$12214$RCJqu)
        (binary-port? . g$12213$RCJqu)
        (scheme-report-environment . g$8810$RCJqu)
        (quotient . g$7111$RCJqu)
        (null-environment . g$8809$RCJqu)
        (remainder . g$7112$RCJqu)
        (modulo . g$7113$RCJqu)
        (inexact->exact . g$12212$RCJqu)
        (force . g$12211$RCJqu)
        (exact->inexact . g$12210$RCJqu)
        (exit . g$12209$RCJqu)
        (command-line . g$11760$RCJqu)
        (string-fill! . g$12208$RCJqu)
        (string-set! . g$12207$RCJqu)
        (set-cdr! . g$12206$RCJqu)
        (set-car! . g$12205$RCJqu)
        (remove . g$6697$RCJqu)
        (remv . g$6698$RCJqu)
        (remp . g$6683$RCJqu)
        (remq . g$6699$RCJqu)
        (partition . g$6682$RCJqu)
        (memv . g$12204$RCJqu)
        (memq . g$12203$RCJqu)
        (memp . g$6689$RCJqu)
        (member . g$6688$RCJqu)
        (exists . g$6693$RCJqu)
        (for-all . g$6692$RCJqu)
        (fold-right . g$6696$RCJqu)
        (fold-left . g$6695$RCJqu)
        (find . g$6681$RCJqu)
        (filter . g$6684$RCJqu)
        (cons* . g$6694$RCJqu)
        (assv . g$6685$RCJqu)
        (assq . g$12202$RCJqu)
        (assp . g$6687$RCJqu)
        (assoc . g$6686$RCJqu)
        (with-exception-handler . g$12201$RCJqu)
        (raise-continuable . g$12200$RCJqu)
        (raise . g$12199$RCJqu)
        (eval . g$8812$RCJqu)
        (environment . g$8808$RCJqu)
        (make-enumeration . g$12198$RCJqu)
        (enum-set=? . g$12197$RCJqu)
        (enum-set-universe . g$12196$RCJqu)
        (enum-set-union . g$12195$RCJqu)
        (enum-set-subset? . g$12194$RCJqu)
        (enum-set-projection . g$12193$RCJqu)
        (enum-set-member? . g$12192$RCJqu)
        (enum-set-intersection . g$12191$RCJqu)
        (enum-set-indexer . g$12190$RCJqu)
        (enum-set-difference . g$12189$RCJqu)
        (enum-set-constructor . g$12188$RCJqu)
        (enum-set-complement . g$12187$RCJqu)
        (enum-set->list . g$12186$RCJqu)
        (who-condition? . g$7022$RCJqu)
        (warning? . g$6933$RCJqu)
        (violation? . g$6975$RCJqu)
        (undefined-violation? . g$7099$RCJqu)
        (syntax-violation? . g$7083$RCJqu)
        (syntax-violation-subform . g$7085$RCJqu)
        (syntax-violation-form . g$7084$RCJqu)
        (syntax-violation . g$8826$RCJqu)
        (simple-conditions . g$12185$RCJqu)
        (serious-condition? . g$6947$RCJqu)
        (non-continuable-violation? . g$7037$RCJqu)
        (message-condition? . g$6918$RCJqu)
        (make-who-condition . g$7020$RCJqu)
        (make-warning . g$6932$RCJqu)
        (make-violation . g$6974$RCJqu)
        (make-undefined-violation . g$7098$RCJqu)
        (make-syntax-violation . g$7080$RCJqu)
        (make-serious-condition . g$6946$RCJqu)
        (make-non-continuable-violation . g$7036$RCJqu)
        (make-message-condition . g$6916$RCJqu)
        (make-lexical-violation . g$7064$RCJqu)
        (make-irritants-condition . g$7003$RCJqu)
        (make-implementation-restriction-violation . g$7050$RCJqu)
        (make-error . g$6960$RCJqu)
        (make-assertion-violation . g$6988$RCJqu)
        (lexical-violation? . g$7065$RCJqu)
        (irritants-condition? . g$7005$RCJqu)
        (implementation-restriction-violation? . g$7051$RCJqu)
        (error? . g$6961$RCJqu)
        (condition-who . g$7023$RCJqu)
        (condition-predicate . g$12184$RCJqu)
        (condition-message . g$6919$RCJqu)
        (condition-irritants . g$7006$RCJqu)
        (condition-accessor . g$12183$RCJqu)
        (condition . g$12182$RCJqu)
        (assertion-violation? . g$6989$RCJqu)
        (condition? . g$12181$RCJqu)
        (utf32->string . g$12180$RCJqu)
        (utf16->string . g$12179$RCJqu)
        (utf8->string . g$12178$RCJqu)
        (uint-list->bytevector . g$12177$RCJqu)
        (u8-list->bytevector . g$12176$RCJqu)
        (string->utf8 . g$12175$RCJqu)
        (string->utf32 . g$12174$RCJqu)
        (string->utf16 . g$12173$RCJqu)
        (sint-list->bytevector . g$12172$RCJqu)
        (native-endianness . g$6773$RCJqu)
        (bytevector? . g$12171$RCJqu)
        (bytevector=? . g$12170$RCJqu)
        (bytevector-uint-set! . g$12169$RCJqu)
        (bytevector-uint-ref . g$12168$RCJqu)
        (bytevector-u8-set! . g$12167$RCJqu)
        (bytevector-u8-ref . g$12166$RCJqu)
        (bytevector-u64-set! . g$6794$RCJqu)
        (bytevector-u64-ref . g$6790$RCJqu)
        (bytevector-u64-native-set! . g$6796$RCJqu)
        (bytevector-u64-native-ref . g$6792$RCJqu)
        (bytevector-u32-set! . g$6786$RCJqu)
        (bytevector-u32-ref . g$6782$RCJqu)
        (bytevector-u32-native-set! . g$6788$RCJqu)
        (bytevector-u32-native-ref . g$6784$RCJqu)
        (bytevector-u16-set! . g$6778$RCJqu)
        (bytevector-u16-ref . g$6774$RCJqu)
        (bytevector-u16-native-set! . g$6780$RCJqu)
        (bytevector-u16-native-ref . g$6776$RCJqu)
        (bytevector-sint-set! . g$12165$RCJqu)
        (bytevector-sint-ref . g$12164$RCJqu)
        (bytevector-s8-set! . g$12163$RCJqu)
        (bytevector-s8-ref . g$12162$RCJqu)
        (bytevector-s64-set! . g$6795$RCJqu)
        (bytevector-s64-ref . g$6791$RCJqu)
        (bytevector-s64-native-set! . g$6797$RCJqu)
        (bytevector-s64-native-ref . g$6793$RCJqu)
        (bytevector-s32-set! . g$6787$RCJqu)
        (bytevector-s32-ref . g$6783$RCJqu)
        (bytevector-s32-native-set! . g$6789$RCJqu)
        (bytevector-s32-native-ref . g$6785$RCJqu)
        (bytevector-s16-set! . g$6779$RCJqu)
        (bytevector-s16-ref . g$6775$RCJqu)
        (bytevector-s16-native-set! . g$6781$RCJqu)
        (bytevector-s16-native-ref . g$6777$RCJqu)
        (bytevector-length . g$12161$RCJqu)
        (bytevector-ieee-single-set! . g$12160$RCJqu)
        (bytevector-ieee-single-ref . g$12159$RCJqu)
        (bytevector-ieee-single-native-set! . g$6800$RCJqu)
        (bytevector-ieee-single-native-ref . g$6798$RCJqu)
        (bytevector-ieee-double-set! . g$12158$RCJqu)
        (bytevector-ieee-double-ref . g$12157$RCJqu)
        (bytevector-ieee-double-native-set! . g$6801$RCJqu)
        (bytevector-ieee-double-native-ref . g$6799$RCJqu)
        (bytevector-fill! . g$12156$RCJqu)
        (bytevector-copy! . g$12155$RCJqu)
        (bytevector-copy . g$12154$RCJqu)
        (bytevector->uint-list . g$12153$RCJqu)
        (bytevector->u8-list . g$12152$RCJqu)
        (bytevector->sint-list . g$12151$RCJqu)
        (no-nans-violation? . g$7330$RCJqu)
        (no-infinities-violation? . g$7316$RCJqu)
        (make-no-nans-violation . g$7329$RCJqu)
        (make-no-infinities-violation . g$7315$RCJqu)
        (real->flonum . g$12150$RCJqu)
        (flzero? . g$12149$RCJqu)
        (fltruncate . g$12148$RCJqu)
        (fltan . g$12147$RCJqu)
        (flsqrt . g$12146$RCJqu)
        (flsin . g$12145$RCJqu)
        (flround . g$12144$RCJqu)
        (flpositive? . g$12143$RCJqu)
        (flonum? . g$12142$RCJqu)
        (flodd? . g$12141$RCJqu)
        (flnumerator . g$12140$RCJqu)
        (flnegative? . g$12139$RCJqu)
        (flnan? . g$12138$RCJqu)
        (flmod0 . g$12137$RCJqu)
        (flmod . g$12136$RCJqu)
        (flmin . g$12135$RCJqu)
        (flmax . g$12134$RCJqu)
        (fllog . g$12133$RCJqu)
        (flinteger? . g$12132$RCJqu)
        (flinfinite? . g$12131$RCJqu)
        (flfloor . g$12130$RCJqu)
        (flfinite? . g$12129$RCJqu)
        (flexpt . g$12128$RCJqu)
        (flexp . g$12127$RCJqu)
        (fleven? . g$12126$RCJqu)
        (fldiv0-and-mod0 . g$12125$RCJqu)
        (fldiv0 . g$12124$RCJqu)
        (fldiv-and-mod . g$12123$RCJqu)
        (fldiv . g$12122$RCJqu)
        (fldenominator . g$12121$RCJqu)
        (flcos . g$12120$RCJqu)
        (flceiling . g$12119$RCJqu)
        (flatan . g$12118$RCJqu)
        (flasin . g$12117$RCJqu)
        (flacos . g$12116$RCJqu)
        (flabs . g$12115$RCJqu)
        (fl>? . g$12114$RCJqu)
        (fl>=? . g$12113$RCJqu)
        (fl=? . g$12112$RCJqu)
        (fl<? . g$12111$RCJqu)
        (fl<=? . g$12110$RCJqu)
        (fl/ . g$12109$RCJqu)
        (fl- . g$12108$RCJqu)
        (fl+ . g$12107$RCJqu)
        (fl* . g$12106$RCJqu)
        (fixnum->flonum . g$12105$RCJqu)
        (fxzero? . g$12104$RCJqu)
        (fxxor . g$12103$RCJqu)
        (fxrotate-bit-field . g$7261$RCJqu)
        (fxreverse-bit-field . g$12102$RCJqu)
        (fxpositive? . g$12101$RCJqu)
        (fxodd? . g$12100$RCJqu)
        (fxnot . g$12099$RCJqu)
        (fxnegative? . g$12098$RCJqu)
        (fxmod0 . g$12097$RCJqu)
        (fxmod . g$12096$RCJqu)
        (fxmin . g$12095$RCJqu)
        (fxmax . g$12094$RCJqu)
        (fxlength . g$12093$RCJqu)
        (fxior . g$12092$RCJqu)
        (fxif . g$7255$RCJqu)
        (fxfirst-bit-set . g$12091$RCJqu)
        (fxeven? . g$12090$RCJqu)
        (fxdiv0-and-mod0 . g$12089$RCJqu)
        (fxdiv0 . g$12088$RCJqu)
        (fxdiv-and-mod . g$12087$RCJqu)
        (fxdiv . g$12086$RCJqu)
        (fxcopy-bit-field . g$7258$RCJqu)
        (fxcopy-bit . g$7256$RCJqu)
        (fxbit-set? . g$12085$RCJqu)
        (fxbit-field . g$7257$RCJqu)
        (fxbit-count . g$12084$RCJqu)
        (fxarithmetic-shift-right . g$7260$RCJqu)
        (fxarithmetic-shift-left . g$7259$RCJqu)
        (fxarithmetic-shift . g$12083$RCJqu)
        (fxand . g$12082$RCJqu)
        (fx>? . g$12081$RCJqu)
        (fx>=? . g$12080$RCJqu)
        (fx=? . g$12079$RCJqu)
        (fx<? . g$12078$RCJqu)
        (fx<=? . g$12077$RCJqu)
        (fx-/carry . g$12076$RCJqu)
        (fx- . g$12075$RCJqu)
        (fx+/carry . g$12074$RCJqu)
        (fx+ . g$12073$RCJqu)
        (fx*/carry . g$12072$RCJqu)
        (fx* . g$12071$RCJqu)
        (greatest-fixnum . g$12070$RCJqu)
        (least-fixnum . g$12069$RCJqu)
        (fixnum-width . g$12068$RCJqu)
        (fixnum? . g$12067$RCJqu)
        (bitwise-rotate-bit-field . g$7209$RCJqu)
        (bitwise-reverse-bit-field . g$7210$RCJqu)
        (bitwise-length . g$12066$RCJqu)
        (bitwise-if . g$7203$RCJqu)
        (bitwise-first-bit-set . g$12065$RCJqu)
        (bitwise-copy-bit-field . g$7206$RCJqu)
        (bitwise-copy-bit . g$7204$RCJqu)
        (bitwise-bit-set? . g$12064$RCJqu)
        (bitwise-bit-field . g$12063$RCJqu)
        (bitwise-bit-count . g$12062$RCJqu)
        (bitwise-xor . g$12061$RCJqu)
        (bitwise-ior . g$12060$RCJqu)
        (bitwise-and . g$12059$RCJqu)
        (bitwise-not . g$12058$RCJqu)
        (bitwise-arithmetic-shift-right . g$7208$RCJqu)
        (bitwise-arithmetic-shift-left . g$7207$RCJqu)
        (bitwise-arithmetic-shift . g$12057$RCJqu)
        (zero? . g$12056$RCJqu)
        (vector? . g$12055$RCJqu)
        (vector-set! . g$12054$RCJqu)
        (vector-ref . g$12053$RCJqu)
        (vector-map . g$12052$RCJqu)
        (vector-length . g$12051$RCJqu)
        (vector-for-each . g$12050$RCJqu)
        (vector-fill! . g$12049$RCJqu)
        (vector->list . g$12048$RCJqu)
        (vector . g$12047$RCJqu)
        (values . g$12046$RCJqu)
        (truncate . g$12045$RCJqu)
        (tan . g$12044$RCJqu)
        (symbol? . g$12043$RCJqu)
        (symbol=? . g$12042$RCJqu)
        (symbol->string . g$12041$RCJqu)
        (substring . g$12040$RCJqu)
        (string? . g$12039$RCJqu)
        (string>? . g$12038$RCJqu)
        (string>=? . g$12037$RCJqu)
        (string=? . g$12036$RCJqu)
        (string<? . g$12035$RCJqu)
        (string<=? . g$12034$RCJqu)
        (string-ref . g$12033$RCJqu)
        (string-length . g$12032$RCJqu)
        (string-for-each . g$12031$RCJqu)
        (string-copy . g$12030$RCJqu)
        (string-append . g$12029$RCJqu)
        (string->symbol . g$12028$RCJqu)
        (string->number . g$12027$RCJqu)
        (string->list . g$12026$RCJqu)
        (string . g$12025$RCJqu)
        (sqrt . g$12024$RCJqu)
        (sin . g$12023$RCJqu)
        (round . g$12022$RCJqu)
        (reverse . g$12021$RCJqu)
        (real? . g$12020$RCJqu)
        (real-valued? . g$12019$RCJqu)
        (real-part . g$12018$RCJqu)
        (rationalize . g$6234$RCJqu)
        (rational? . g$12017$RCJqu)
        (rational-valued? . g$12016$RCJqu)
        (procedure? . g$12015$RCJqu)
        (positive? . g$12014$RCJqu)
        (pair? . g$12013$RCJqu)
        (odd? . g$12012$RCJqu)
        (numerator . g$12011$RCJqu)
        (number? . g$12010$RCJqu)
        (number->string . g$12009$RCJqu)
        (null? . g$12008$RCJqu)
        (not . g$12007$RCJqu)
        (negative? . g$12006$RCJqu)
        (nan? . g$12005$RCJqu)
        (min . g$12004$RCJqu)
        (max . g$12003$RCJqu)
        (map . g$12002$RCJqu)
        (make-vector . g$12001$RCJqu)
        (make-string . g$12000$RCJqu)
        (make-rectangular . g$11999$RCJqu)
        (make-polar . g$11998$RCJqu)
        (magnitude . g$11997$RCJqu)
        (log . g$11996$RCJqu)
        (list? . g$11995$RCJqu)
        (list-tail . g$11994$RCJqu)
        (list-ref . g$11993$RCJqu)
        (list->vector . g$11992$RCJqu)
        (list->string . g$11991$RCJqu)
        (list . g$11990$RCJqu)
        (length . g$11989$RCJqu)
        (lcm . g$11988$RCJqu)
        (integer? . g$11987$RCJqu)
        (integer-valued? . g$11986$RCJqu)
        (integer->char . g$11985$RCJqu)
        (infinite? . g$11984$RCJqu)
        (inexact? . g$11983$RCJqu)
        (inexact . g$11982$RCJqu)
        (imag-part . g$11981$RCJqu)
        (gcd . g$11980$RCJqu)
        (for-each . g$11979$RCJqu)
        (floor . g$11978$RCJqu)
        (finite? . g$11977$RCJqu)
        (expt . g$11976$RCJqu)
        (exp . g$11975$RCJqu)
        (exact? . g$11974$RCJqu)
        (exact-integer-sqrt . g$11973$RCJqu)
        (exact . g$11972$RCJqu)
        (even? . g$11971$RCJqu)
        (error . g$11970$RCJqu)
        (eqv? . g$11969$RCJqu)
        (equal? . g$11968$RCJqu)
        (eq? . g$11967$RCJqu)
        (dynamic-wind . g$11966$RCJqu)
        (div0-and-mod0 . g$11965$RCJqu)
        (mod0 . g$11964$RCJqu)
        (div0 . g$11963$RCJqu)
        (div-and-mod . g$11962$RCJqu)
        (mod . g$11961$RCJqu)
        (div . g$11960$RCJqu)
        (denominator . g$11959$RCJqu)
        (cos . g$11958$RCJqu)
        (cons . g$11957$RCJqu)
        (complex? . g$11956$RCJqu)
        (char? . g$11955$RCJqu)
        (char>? . g$11954$RCJqu)
        (char>=? . g$11953$RCJqu)
        (char=? . g$11952$RCJqu)
        (char<? . g$11951$RCJqu)
        (char<=? . g$11950$RCJqu)
        (char->integer . g$11949$RCJqu)
        (ceiling . g$11948$RCJqu)
        (call-with-values . g$11947$RCJqu)
        (call/cc . g$11946$RCJqu)
        (call-with-current-continuation . g$11945$RCJqu)
        (cddddr . g$6233$RCJqu)
        (cdddar . g$6232$RCJqu)
        (cddadr . g$6231$RCJqu)
        (cddaar . g$6230$RCJqu)
        (cdaddr . g$6229$RCJqu)
        (cdadar . g$6228$RCJqu)
        (cdaadr . g$6227$RCJqu)
        (cdaaar . g$6226$RCJqu)
        (cadddr . g$6225$RCJqu)
        (caddar . g$6224$RCJqu)
        (cadadr . g$6223$RCJqu)
        (cadaar . g$6222$RCJqu)
        (caaddr . g$6221$RCJqu)
        (caadar . g$6220$RCJqu)
        (caaadr . g$6219$RCJqu)
        (caaaar . g$6218$RCJqu)
        (cdddr . g$6217$RCJqu)
        (cddar . g$6216$RCJqu)
        (cdadr . g$6215$RCJqu)
        (cdaar . g$6214$RCJqu)
        (caddr . g$6213$RCJqu)
        (cadar . g$6212$RCJqu)
        (caadr . g$6211$RCJqu)
        (caaar . g$6210$RCJqu)
        (cddr . g$6209$RCJqu)
        (cdar . g$6208$RCJqu)
        (cadr . g$6207$RCJqu)
        (caar . g$6206$RCJqu)
        (cdr . g$11944$RCJqu)
        (car . g$11943$RCJqu)
        (boolean? . g$11942$RCJqu)
        (boolean=? . g$11941$RCJqu)
        (atan . g$11940$RCJqu)
        (assertion-violation . g$11939$RCJqu)
        (asin . g$11938$RCJqu)
        (apply . g$11937$RCJqu)
        (append . g$11936$RCJqu)
        (angle . g$11935$RCJqu)
        (acos . g$11934$RCJqu)
        (abs . g$11933$RCJqu)
        (/ . g$11932$RCJqu)
        (* . g$11931$RCJqu)
        (- . g$11930$RCJqu)
        (+ . g$11929$RCJqu)
        (>= . g$11928$RCJqu)
        (> . g$11927$RCJqu)
        (= . g$11926$RCJqu)
        (<= . g$11925$RCJqu)
        (< . g$11924$RCJqu)
        (load/args . g$11762$RCJqu)
        (printf . g$7524$RCJqu)
        (fprintf . g$7525$RCJqu)
        (format . g$7526$RCJqu)
        (get-arity . g$11919$RCJqu)
        (gc-collect . g$11918$RCJqu)
        (clr-type? . g$11917$RCJqu)
        (get-clr-type . g$11916$RCJqu)
        (vector-append . g$11914$RCJqu)
        (vector-filter . g$11913$RCJqu)
        (vector-reverse! . g$11912$RCJqu)
        (vector-contains? . g$11911$RCJqu)
        (vector-index-of . g$11910$RCJqu)
        (vector-copy . g$11909$RCJqu)
        (vector-binary-search . g$11908$RCJqu)
        (get-output-string . g$11907$RCJqu)
        (open-output-string . g$11906$RCJqu)
        (open-input-string . g$11905$RCJqu)
        (string-format . g$11904$RCJqu)
        (trace-printer . g$11759$RCJqu)
        (make-traced-procedure . g$11903$RCJqu)
        (make-traced-macro . g$7545$RCJqu)
        (pmap . g$11902$RCJqu)
        (time-it . g$11901$RCJqu)
        (make-parameter . g$7550$RCJqu)
        (library-locator . g$11900$RCJqu)
        (get-library-paths . g$11899$RCJqu)
        (environment-symbols . g$8806$RCJqu)
        (interaction-environment-symbols . g$8805$RCJqu)
        (library-path . g$7975$RCJqu)
        (library-extensions . g$7976$RCJqu)
        (installed-libraries . g$7996$RCJqu)
        (expand . g$8811$RCJqu)
        (&no-nans . g$11898$RCJqu)
        (&no-infinities . g$11897$RCJqu)
        (&i/o-encoding . g$11896$RCJqu)
        (&i/o-decoding . g$11895$RCJqu)
        (&i/o-port . g$11894$RCJqu)
        (&i/o-file-does-not-exist . g$11893$RCJqu)
        (&i/o-file-already-exists . g$11892$RCJqu)
        (&i/o-file-is-read-only . g$11891$RCJqu)
        (&i/o-file-protection . g$11890$RCJqu)
        (&i/o-filename . g$11889$RCJqu)
        (&i/o-invalid-position . g$11888$RCJqu)
        (&i/o-write . g$11887$RCJqu)
        (&i/o-read . g$11886$RCJqu)
        (&i/o . g$11885$RCJqu)
        (&non-continuable . g$11884$RCJqu)
        (&undefined . g$11883$RCJqu)
        (&syntax . g$11882$RCJqu)
        (&lexical . g$11881$RCJqu)
        (&implementation-restriction . g$11880$RCJqu)
        (&who . g$11878$RCJqu)
        (&irritants . g$11877$RCJqu)
        (&assertion . g$11876$RCJqu)
        (&violation . g$11875$RCJqu)
        (&error . g$11874$RCJqu)
        (&serious . g$11873$RCJqu)
        (&warning . g$11872$RCJqu)
        (&message . g$11871$RCJqu)
        (&condition . g$11870$RCJqu)
        (define-condition-type . g$11869$RCJqu)
        (define-enumeration . g$11868$RCJqu)
        (define-record-type . g$11867$RCJqu)
        (parent-rtd . g$11866$RCJqu)
        (nongenerative . g$11865$RCJqu)
        (opaque . g$11864$RCJqu)
        (sealed . g$11863$RCJqu)
        (protocol . g$11862$RCJqu)
        (parent . g$11861$RCJqu)
        (immutable . g$11860$RCJqu)
        (mutable . g$11859$RCJqu)
        (fields . g$11858$RCJqu)
        (error-handling-mode . g$11857$RCJqu)
        (file-options . g$11856$RCJqu)
        (buffer-mode . g$11855$RCJqu)
        (eol-style . g$11854$RCJqu)
        (guard . g$11853$RCJqu)
        (trace-letrec-syntax . g$11852$RCJqu)
        (trace-let-syntax . g$11851$RCJqu)
        (trace-define-syntax . g$11850$RCJqu)
        (trace-define . g$11849$RCJqu)
        (trace-lambda . g$11848$RCJqu)
        (unsyntax-splicing . g$11847$RCJqu)
        (unsyntax . g$11846$RCJqu)
        (unquote-splicing . g$11845$RCJqu)
        (unquote . g$11844$RCJqu)
        (_ . g$11843$RCJqu)
        (else . g$11842$RCJqu)
        (=> . g$11841$RCJqu)
        (... . g$11840$RCJqu)
        (assert . g$11839$RCJqu)
        (endianness . g$11838$RCJqu)
        (delay . g$11837$RCJqu)
        (time . g$11836$RCJqu)
        (or . g$11835$RCJqu)
        (and . g$11834$RCJqu)
        (do . g$11833$RCJqu)
        (cond . g$11832$RCJqu)
        (let* . g$11831$RCJqu)
        (let . g$11830$RCJqu)
        (identifier-syntax . g$11829$RCJqu)
        (with-syntax . g$11828$RCJqu)
        (quasisyntax . g$11827$RCJqu)
        (quasiquote . g$11826$RCJqu)
        (syntax-rules . g$11825$RCJqu)
        (include-into . g$11824$RCJqu)
        (include . g$11823$RCJqu)
        (let-values . g$11821$RCJqu)
        (let*-values . g$11820$RCJqu)
        (record-constructor-descriptor . g$11819$RCJqu)
        (record-type-descriptor . g$11818$RCJqu)
        (fluid-let-syntax . g$11817$RCJqu)
        (case . g$11816$RCJqu)
        (parameterize . g$11815$RCJqu)
        (unless . g$11814$RCJqu)
        (when . g$11813$RCJqu)
        (if . g$11812$RCJqu)
        (letrec* . g$11811$RCJqu)
        (letrec . g$11810$RCJqu)
        (case-lambda . g$11808$RCJqu)
        (lambda . g$11807$RCJqu)
        (syntax . g$11806$RCJqu)
        (syntax-case . g$11805$RCJqu)
        (quote . g$11804$RCJqu)
        (letrec-syntax . g$11802$RCJqu)
        (let-syntax . g$11801$RCJqu)
        (set! . g$11800$RCJqu)
        (import . g$11799$RCJqu)
        (library . g$11798$RCJqu)
        (begin . g$11797$RCJqu)
        (module . g$11796$RCJqu)
        (define-syntax . g$11795$RCJqu)
        (define . g$11794$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12452$RCJqu
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11899$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12453$RCJqu
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12393$RCJqu)
        (annotation-source . g$12392$RCJqu)
        (annotation-expression . g$12391$RCJqu)
        (annotation? . g$12390$RCJqu)
        (read-annotated . g$12389$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12454$RCJqu
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12359$RCJqu)
        (serialize-library . g$12358$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12455$RCJqu
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8436$RCJqu)
        (variable-transformer? . g$8435$RCJqu)
        (eqv-hash . g$11922$RCJqu)
        (eq-hash . g$11921$RCJqu)
        (reverse! . g$11920$RCJqu)
        (format . g$7526$RCJqu)
        (get-command-line . g$11915$RCJqu)
        (make-traced-procedure . g$11903$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12456$RCJqu
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11923$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12457$RCJqu
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12377$RCJqu)
        (clr-field-set!-internal . g$12376$RCJqu)
        (clr-field-get-internal . g$12375$RCJqu)
        (clr-cast-internal . g$12374$RCJqu)
        (clr-call-internal . g$12373$RCJqu)
        (clr-new-internal . g$12372$RCJqu)
        (clr-new-array-internal . g$12371$RCJqu)
        (clr-is-internal . g$12370$RCJqu)
        (clr-reference-internal . g$12369$RCJqu)
        (clr-using-internal . g$12368$RCJqu)
        (clr-clear-usings-internal . g$12367$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12458$RCJqu
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11845$RCJqu)
        (unquote . g$11844$RCJqu)
        (delay . g$11837$RCJqu)
        (or . g$11835$RCJqu)
        (and . g$11834$RCJqu)
        (do . g$11833$RCJqu)
        (cond . g$11832$RCJqu)
        (let* . g$11831$RCJqu)
        (let . g$11830$RCJqu)
        (quasiquote . g$11826$RCJqu)
        (syntax-rules . g$11825$RCJqu)
        (case . g$11816$RCJqu)
        (if . g$11812$RCJqu)
        (letrec . g$11810$RCJqu)
        (lambda . g$11807$RCJqu)
        (quote . g$11804$RCJqu)
        (letrec-syntax . g$11802$RCJqu)
        (let-syntax . g$11801$RCJqu)
        (set! . g$11800$RCJqu)
        (begin . g$11797$RCJqu)
        (define-syntax . g$11795$RCJqu)
        (define . g$11794$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12459$RCJqu
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8832$RCJqu)
        (char-ready? . g$12357$RCJqu)
        (string-ci>? . g$12348$RCJqu)
        (string-ci>=? . g$12347$RCJqu)
        (string-ci=? . g$12346$RCJqu)
        (string-ci<? . g$12345$RCJqu)
        (string-ci<=? . g$12344$RCJqu)
        (char-whitespace? . g$12343$RCJqu)
        (char-upper-case? . g$12342$RCJqu)
        (char-numeric? . g$12340$RCJqu)
        (char-lower-case? . g$12339$RCJqu)
        (char-upcase . g$12337$RCJqu)
        (char-downcase . g$12334$RCJqu)
        (char-ci>? . g$12333$RCJqu)
        (char-ci>=? . g$12332$RCJqu)
        (char-ci=? . g$12331$RCJqu)
        (char-ci<? . g$12330$RCJqu)
        (char-ci<=? . g$12329$RCJqu)
        (char-alphabetic? . g$12328$RCJqu)
        (call-with-output-file . g$12296$RCJqu)
        (call-with-input-file . g$12295$RCJqu)
        (write-char . g$12294$RCJqu)
        (write . g$12293$RCJqu)
        (with-output-to-file . g$12292$RCJqu)
        (with-input-from-file . g$12291$RCJqu)
        (read-char . g$12290$RCJqu)
        (read . g$12289$RCJqu)
        (peek-char . g$12288$RCJqu)
        (open-output-file . g$12287$RCJqu)
        (open-input-file . g$12286$RCJqu)
        (newline . g$12285$RCJqu)
        (display . g$12284$RCJqu)
        (close-output-port . g$12283$RCJqu)
        (close-input-port . g$12282$RCJqu)
        (eof-object? . g$12281$RCJqu)
        (eof-object . g$12280$RCJqu)
        (current-error-port . g$12279$RCJqu)
        (current-output-port . g$12278$RCJqu)
        (current-input-port . g$12277$RCJqu)
        (output-port? . g$12276$RCJqu)
        (input-port? . g$12275$RCJqu)
        (scheme-report-environment . g$8810$RCJqu)
        (quotient . g$7111$RCJqu)
        (null-environment . g$8809$RCJqu)
        (remainder . g$7112$RCJqu)
        (modulo . g$7113$RCJqu)
        (inexact->exact . g$12212$RCJqu)
        (force . g$12211$RCJqu)
        (exact->inexact . g$12210$RCJqu)
        (string-fill! . g$12208$RCJqu)
        (string-set! . g$12207$RCJqu)
        (set-cdr! . g$12206$RCJqu)
        (set-car! . g$12205$RCJqu)
        (memv . g$12204$RCJqu)
        (memq . g$12203$RCJqu)
        (member . g$6688$RCJqu)
        (assv . g$6685$RCJqu)
        (assq . g$12202$RCJqu)
        (assoc . g$6686$RCJqu)
        (eval . g$8812$RCJqu)
        (zero? . g$12056$RCJqu)
        (vector? . g$12055$RCJqu)
        (vector-set! . g$12054$RCJqu)
        (vector-ref . g$12053$RCJqu)
        (vector-length . g$12051$RCJqu)
        (vector-fill! . g$12049$RCJqu)
        (vector->list . g$12048$RCJqu)
        (vector . g$12047$RCJqu)
        (values . g$12046$RCJqu)
        (truncate . g$12045$RCJqu)
        (tan . g$12044$RCJqu)
        (symbol? . g$12043$RCJqu)
        (symbol->string . g$12041$RCJqu)
        (substring . g$12040$RCJqu)
        (string? . g$12039$RCJqu)
        (string>? . g$12038$RCJqu)
        (string>=? . g$12037$RCJqu)
        (string=? . g$12036$RCJqu)
        (string<? . g$12035$RCJqu)
        (string<=? . g$12034$RCJqu)
        (string-ref . g$12033$RCJqu)
        (string-length . g$12032$RCJqu)
        (string-copy . g$12030$RCJqu)
        (string-append . g$12029$RCJqu)
        (string->symbol . g$12028$RCJqu)
        (string->number . g$12027$RCJqu)
        (string->list . g$12026$RCJqu)
        (string . g$12025$RCJqu)
        (sqrt . g$12024$RCJqu)
        (sin . g$12023$RCJqu)
        (round . g$12022$RCJqu)
        (reverse . g$12021$RCJqu)
        (real? . g$12020$RCJqu)
        (real-part . g$12018$RCJqu)
        (rationalize . g$6234$RCJqu)
        (rational? . g$12017$RCJqu)
        (procedure? . g$12015$RCJqu)
        (positive? . g$12014$RCJqu)
        (pair? . g$12013$RCJqu)
        (odd? . g$12012$RCJqu)
        (numerator . g$12011$RCJqu)
        (number? . g$12010$RCJqu)
        (number->string . g$12009$RCJqu)
        (null? . g$12008$RCJqu)
        (not . g$12007$RCJqu)
        (negative? . g$12006$RCJqu)
        (min . g$12004$RCJqu)
        (max . g$12003$RCJqu)
        (map . g$12002$RCJqu)
        (make-vector . g$12001$RCJqu)
        (make-string . g$12000$RCJqu)
        (make-rectangular . g$11999$RCJqu)
        (make-polar . g$11998$RCJqu)
        (magnitude . g$11997$RCJqu)
        (log . g$11996$RCJqu)
        (list? . g$11995$RCJqu)
        (list-tail . g$11994$RCJqu)
        (list-ref . g$11993$RCJqu)
        (list->vector . g$11992$RCJqu)
        (list->string . g$11991$RCJqu)
        (list . g$11990$RCJqu)
        (length . g$11989$RCJqu)
        (lcm . g$11988$RCJqu)
        (integer? . g$11987$RCJqu)
        (integer->char . g$11985$RCJqu)
        (inexact? . g$11983$RCJqu)
        (imag-part . g$11981$RCJqu)
        (gcd . g$11980$RCJqu)
        (for-each . g$11979$RCJqu)
        (floor . g$11978$RCJqu)
        (expt . g$11976$RCJqu)
        (exp . g$11975$RCJqu)
        (exact? . g$11974$RCJqu)
        (even? . g$11971$RCJqu)
        (eqv? . g$11969$RCJqu)
        (equal? . g$11968$RCJqu)
        (eq? . g$11967$RCJqu)
        (dynamic-wind . g$11966$RCJqu)
        (denominator . g$11959$RCJqu)
        (cos . g$11958$RCJqu)
        (cons . g$11957$RCJqu)
        (complex? . g$11956$RCJqu)
        (char? . g$11955$RCJqu)
        (char>? . g$11954$RCJqu)
        (char>=? . g$11953$RCJqu)
        (char=? . g$11952$RCJqu)
        (char<? . g$11951$RCJqu)
        (char<=? . g$11950$RCJqu)
        (char->integer . g$11949$RCJqu)
        (ceiling . g$11948$RCJqu)
        (call-with-values . g$11947$RCJqu)
        (call-with-current-continuation . g$11945$RCJqu)
        (cddddr . g$6233$RCJqu)
        (cdddar . g$6232$RCJqu)
        (cddadr . g$6231$RCJqu)
        (cddaar . g$6230$RCJqu)
        (cdaddr . g$6229$RCJqu)
        (cdadar . g$6228$RCJqu)
        (cdaadr . g$6227$RCJqu)
        (cdaaar . g$6226$RCJqu)
        (cadddr . g$6225$RCJqu)
        (caddar . g$6224$RCJqu)
        (cadadr . g$6223$RCJqu)
        (cadaar . g$6222$RCJqu)
        (caaddr . g$6221$RCJqu)
        (caadar . g$6220$RCJqu)
        (caaadr . g$6219$RCJqu)
        (caaaar . g$6218$RCJqu)
        (cdddr . g$6217$RCJqu)
        (cddar . g$6216$RCJqu)
        (cdadr . g$6215$RCJqu)
        (cdaar . g$6214$RCJqu)
        (caddr . g$6213$RCJqu)
        (cadar . g$6212$RCJqu)
        (caadr . g$6211$RCJqu)
        (caaar . g$6210$RCJqu)
        (cddr . g$6209$RCJqu)
        (cdar . g$6208$RCJqu)
        (cadr . g$6207$RCJqu)
        (caar . g$6206$RCJqu)
        (cdr . g$11944$RCJqu)
        (car . g$11943$RCJqu)
        (boolean? . g$11942$RCJqu)
        (atan . g$11940$RCJqu)
        (asin . g$11938$RCJqu)
        (apply . g$11937$RCJqu)
        (append . g$11936$RCJqu)
        (angle . g$11935$RCJqu)
        (acos . g$11934$RCJqu)
        (abs . g$11933$RCJqu)
        (/ . g$11932$RCJqu)
        (* . g$11931$RCJqu)
        (- . g$11930$RCJqu)
        (+ . g$11929$RCJqu)
        (>= . g$11928$RCJqu)
        (> . g$11927$RCJqu)
        (= . g$11926$RCJqu)
        (<= . g$11925$RCJqu)
        (< . g$11924$RCJqu)
        (unquote-splicing . g$11845$RCJqu)
        (unquote . g$11844$RCJqu)
        (else . g$11842$RCJqu)
        (=> . g$11841$RCJqu)
        (... . g$11840$RCJqu)
        (delay . g$11837$RCJqu)
        (or . g$11835$RCJqu)
        (and . g$11834$RCJqu)
        (do . g$11833$RCJqu)
        (cond . g$11832$RCJqu)
        (let* . g$11831$RCJqu)
        (let . g$11830$RCJqu)
        (quasiquote . g$11826$RCJqu)
        (syntax-rules . g$11825$RCJqu)
        (case . g$11816$RCJqu)
        (if . g$11812$RCJqu)
        (letrec . g$11810$RCJqu)
        (lambda . g$11807$RCJqu)
        (quote . g$11804$RCJqu)
        (letrec-syntax . g$11802$RCJqu)
        (let-syntax . g$11801$RCJqu)
        (set! . g$11800$RCJqu)
        (begin . g$11797$RCJqu)
        (define-syntax . g$11795$RCJqu)
        (define . g$11794$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12460$RCJqu
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12356$RCJqu)
        (string-titlecase . g$12355$RCJqu)
        (string-normalize-nfkd . g$12354$RCJqu)
        (string-normalize-nfkc . g$12353$RCJqu)
        (string-normalize-nfd . g$12352$RCJqu)
        (string-normalize-nfc . g$12351$RCJqu)
        (string-foldcase . g$12350$RCJqu)
        (string-downcase . g$12349$RCJqu)
        (string-ci>? . g$12348$RCJqu)
        (string-ci>=? . g$12347$RCJqu)
        (string-ci=? . g$12346$RCJqu)
        (string-ci<? . g$12345$RCJqu)
        (string-ci<=? . g$12344$RCJqu)
        (char-whitespace? . g$12343$RCJqu)
        (char-upper-case? . g$12342$RCJqu)
        (char-title-case? . g$12341$RCJqu)
        (char-numeric? . g$12340$RCJqu)
        (char-lower-case? . g$12339$RCJqu)
        (char-general-category . g$12338$RCJqu)
        (char-upcase . g$12337$RCJqu)
        (char-titlecase . g$12336$RCJqu)
        (char-foldcase . g$12335$RCJqu)
        (char-downcase . g$12334$RCJqu)
        (char-ci>? . g$12333$RCJqu)
        (char-ci>=? . g$12332$RCJqu)
        (char-ci=? . g$12331$RCJqu)
        (char-ci<? . g$12330$RCJqu)
        (char-ci<=? . g$12329$RCJqu)
        (char-alphabetic? . g$12328$RCJqu)
        (make-variable-transformer . g$8434$RCJqu)
        (identifier? . g$8827$RCJqu)
        (generate-temporaries . g$8819$RCJqu)
        (free-identifier=? . g$8820$RCJqu)
        (syntax->datum . g$8829$RCJqu)
        (datum->syntax . g$8828$RCJqu)
        (bound-identifier=? . g$8821$RCJqu)
        (record-type-descriptor? . g$12327$RCJqu)
        (record-predicate . g$12326$RCJqu)
        (record-mutator . g$12325$RCJqu)
        (record-constructor . g$12324$RCJqu)
        (record-accessor . g$12323$RCJqu)
        (make-record-type-descriptor . g$12322$RCJqu)
        (make-record-constructor-descriptor . g$12321$RCJqu)
        (record? . g$12320$RCJqu)
        (record-type-uid . g$12319$RCJqu)
        (record-type-sealed? . g$12318$RCJqu)
        (record-type-parent . g$12317$RCJqu)
        (record-type-opaque? . g$12316$RCJqu)
        (record-type-name . g$12315$RCJqu)
        (record-type-generative? . g$12314$RCJqu)
        (record-type-field-names . g$12313$RCJqu)
        (record-rtd . g$12312$RCJqu)
        (record-field-mutable? . g$12311$RCJqu)
        (delete-file . g$6617$RCJqu)
        (file-exists? . g$6616$RCJqu)
        (vector-sort! . g$12310$RCJqu)
        (vector-sort . g$12309$RCJqu)
        (list-sort . g$7124$RCJqu)
        (symbol-hash . g$12308$RCJqu)
        (string-ci-hash . g$12307$RCJqu)
        (string-hash . g$12306$RCJqu)
        (equal-hash . g$12305$RCJqu)
        (hashtable-equivalence-function . g$12304$RCJqu)
        (make-hashtable . g$12303$RCJqu)
        (hashtable-hash-function . g$12302$RCJqu)
        (make-eqv-hashtable . g$6584$RCJqu)
        (make-eq-hashtable . g$6583$RCJqu)
        (hashtable? . g$12301$RCJqu)
        (hashtable-update! . g$6590$RCJqu)
        (hashtable-size . g$6585$RCJqu)
        (hashtable-set! . g$6587$RCJqu)
        (hashtable-ref . g$6586$RCJqu)
        (hashtable-mutable? . g$12300$RCJqu)
        (hashtable-keys . g$12299$RCJqu)
        (hashtable-entries . g$12298$RCJqu)
        (hashtable-delete! . g$6588$RCJqu)
        (hashtable-copy . g$12297$RCJqu)
        (hashtable-contains? . g$6589$RCJqu)
        (hashtable-clear! . g$6591$RCJqu)
        (call-with-output-file . g$12296$RCJqu)
        (call-with-input-file . g$12295$RCJqu)
        (write-char . g$12294$RCJqu)
        (write . g$12293$RCJqu)
        (with-output-to-file . g$12292$RCJqu)
        (with-input-from-file . g$12291$RCJqu)
        (read-char . g$12290$RCJqu)
        (read . g$12289$RCJqu)
        (peek-char . g$12288$RCJqu)
        (open-output-file . g$12287$RCJqu)
        (open-input-file . g$12286$RCJqu)
        (newline . g$12285$RCJqu)
        (display . g$12284$RCJqu)
        (close-output-port . g$12283$RCJqu)
        (close-input-port . g$12282$RCJqu)
        (eof-object? . g$12281$RCJqu)
        (eof-object . g$12280$RCJqu)
        (current-error-port . g$12279$RCJqu)
        (current-output-port . g$12278$RCJqu)
        (current-input-port . g$12277$RCJqu)
        (output-port? . g$12276$RCJqu)
        (input-port? . g$12275$RCJqu)
        (utf-8-codec . g$12274$RCJqu)
        (utf-16-codec . g$12273$RCJqu)
        (transcoder-error-handling-mode . g$12272$RCJqu)
        (transcoder-eol-style . g$12271$RCJqu)
        (transcoder-codec . g$12270$RCJqu)
        (transcoded-port . g$12269$RCJqu)
        (textual-port? . g$12268$RCJqu)
        (string->bytevector . g$12267$RCJqu)
        (standard-output-port . g$12266$RCJqu)
        (standard-input-port . g$12265$RCJqu)
        (standard-error-port . g$12264$RCJqu)
        (set-port-position! . g$12263$RCJqu)
        (put-u8 . g$12262$RCJqu)
        (put-string . g$12261$RCJqu)
        (put-datum . g$12260$RCJqu)
        (put-char . g$12259$RCJqu)
        (put-bytevector . g$12258$RCJqu)
        (port? . g$12257$RCJqu)
        (port-transcoder . g$12256$RCJqu)
        (port-position . g$12255$RCJqu)
        (port-has-set-port-position!? . g$12254$RCJqu)
        (port-has-port-position? . g$12253$RCJqu)
        (port-eof? . g$12252$RCJqu)
        (output-port-buffer-mode . g$12251$RCJqu)
        (open-string-output-port . g$7515$RCJqu)
        (open-string-input-port . g$12250$RCJqu)
        (open-file-output-port . g$12249$RCJqu)
        (open-file-input/output-port . g$12248$RCJqu)
        (open-file-input-port . g$12247$RCJqu)
        (open-bytevector-output-port . g$12246$RCJqu)
        (open-bytevector-input-port . g$12245$RCJqu)
        (native-transcoder . g$12244$RCJqu)
        (native-eol-style . g$12243$RCJqu)
        (make-transcoder . g$12242$RCJqu)
        (latin-1-codec . g$12241$RCJqu)
        (make-i/o-write-error . g$7372$RCJqu)
        (make-i/o-read-error . g$7358$RCJqu)
        (make-i/o-port-error . g$7477$RCJqu)
        (make-i/o-invalid-position-error . g$7387$RCJqu)
        (make-i/o-filename-error . g$7404$RCJqu)
        (make-i/o-file-protection-error . g$7420$RCJqu)
        (make-i/o-file-is-read-only-error . g$7434$RCJqu)
        (make-i/o-file-does-not-exist-error . g$7462$RCJqu)
        (make-i/o-file-already-exists-error . g$7448$RCJqu)
        (make-i/o-error . g$7344$RCJqu)
        (make-i/o-encoding-error . g$7508$RCJqu)
        (make-i/o-decoding-error . g$7493$RCJqu)
        (make-custom-textual-output-port . g$12240$RCJqu)
        (make-custom-textual-input/output-port . g$12239$RCJqu)
        (make-custom-textual-input-port . g$12238$RCJqu)
        (make-custom-binary-output-port . g$12237$RCJqu)
        (make-custom-binary-input/output-port . g$12236$RCJqu)
        (make-custom-binary-input-port . g$12235$RCJqu)
        (make-bytevector . g$12234$RCJqu)
        (lookahead-u8 . g$12233$RCJqu)
        (lookahead-char . g$12232$RCJqu)
        (i/o-write-error? . g$7373$RCJqu)
        (i/o-read-error? . g$7359$RCJqu)
        (i/o-port-error? . g$7479$RCJqu)
        (i/o-invalid-position-error? . g$7389$RCJqu)
        (i/o-filename-error? . g$7406$RCJqu)
        (i/o-file-protection-error? . g$7421$RCJqu)
        (i/o-file-is-read-only-error? . g$7435$RCJqu)
        (i/o-file-does-not-exist-error? . g$7463$RCJqu)
        (i/o-file-already-exists-error? . g$7449$RCJqu)
        (i/o-error? . g$7345$RCJqu)
        (i/o-error-port . g$7480$RCJqu)
        (i/o-error-filename . g$7407$RCJqu)
        (i/o-encoding-error? . g$7510$RCJqu)
        (i/o-encoding-error-char . g$7511$RCJqu)
        (i/o-decoding-error? . g$7494$RCJqu)
        (get-u8 . g$12231$RCJqu)
        (get-string-n! . g$12230$RCJqu)
        (get-string-n . g$12229$RCJqu)
        (get-string-all . g$12228$RCJqu)
        (get-line . g$12227$RCJqu)
        (get-datum . g$12226$RCJqu)
        (get-char . g$12225$RCJqu)
        (get-bytevector-some . g$12224$RCJqu)
        (get-bytevector-n! . g$12223$RCJqu)
        (get-bytevector-n . g$12222$RCJqu)
        (get-bytevector-all . g$12221$RCJqu)
        (flush-output-port . g$12220$RCJqu)
        (close-port . g$12219$RCJqu)
        (call-with-string-output-port . g$12218$RCJqu)
        (call-with-port . g$12217$RCJqu)
        (call-with-bytevector-output-port . g$12216$RCJqu)
        (bytevector->string . g$12215$RCJqu)
        (buffer-mode? . g$12214$RCJqu)
        (binary-port? . g$12213$RCJqu)
        (exit . g$12209$RCJqu)
        (command-line . g$11760$RCJqu)
        (remove . g$6697$RCJqu)
        (remv . g$6698$RCJqu)
        (remp . g$6683$RCJqu)
        (remq . g$6699$RCJqu)
        (partition . g$6682$RCJqu)
        (memv . g$12204$RCJqu)
        (memq . g$12203$RCJqu)
        (memp . g$6689$RCJqu)
        (member . g$6688$RCJqu)
        (exists . g$6693$RCJqu)
        (for-all . g$6692$RCJqu)
        (fold-right . g$6696$RCJqu)
        (fold-left . g$6695$RCJqu)
        (find . g$6681$RCJqu)
        (filter . g$6684$RCJqu)
        (cons* . g$6694$RCJqu)
        (assv . g$6685$RCJqu)
        (assq . g$12202$RCJqu)
        (assp . g$6687$RCJqu)
        (assoc . g$6686$RCJqu)
        (with-exception-handler . g$12201$RCJqu)
        (raise-continuable . g$12200$RCJqu)
        (raise . g$12199$RCJqu)
        (make-enumeration . g$12198$RCJqu)
        (enum-set=? . g$12197$RCJqu)
        (enum-set-universe . g$12196$RCJqu)
        (enum-set-union . g$12195$RCJqu)
        (enum-set-subset? . g$12194$RCJqu)
        (enum-set-projection . g$12193$RCJqu)
        (enum-set-member? . g$12192$RCJqu)
        (enum-set-intersection . g$12191$RCJqu)
        (enum-set-indexer . g$12190$RCJqu)
        (enum-set-difference . g$12189$RCJqu)
        (enum-set-constructor . g$12188$RCJqu)
        (enum-set-complement . g$12187$RCJqu)
        (enum-set->list . g$12186$RCJqu)
        (who-condition? . g$7022$RCJqu)
        (warning? . g$6933$RCJqu)
        (violation? . g$6975$RCJqu)
        (undefined-violation? . g$7099$RCJqu)
        (syntax-violation? . g$7083$RCJqu)
        (syntax-violation-subform . g$7085$RCJqu)
        (syntax-violation-form . g$7084$RCJqu)
        (syntax-violation . g$8826$RCJqu)
        (simple-conditions . g$12185$RCJqu)
        (serious-condition? . g$6947$RCJqu)
        (non-continuable-violation? . g$7037$RCJqu)
        (message-condition? . g$6918$RCJqu)
        (make-who-condition . g$7020$RCJqu)
        (make-warning . g$6932$RCJqu)
        (make-violation . g$6974$RCJqu)
        (make-undefined-violation . g$7098$RCJqu)
        (make-syntax-violation . g$7080$RCJqu)
        (make-serious-condition . g$6946$RCJqu)
        (make-non-continuable-violation . g$7036$RCJqu)
        (make-message-condition . g$6916$RCJqu)
        (make-lexical-violation . g$7064$RCJqu)
        (make-irritants-condition . g$7003$RCJqu)
        (make-implementation-restriction-violation . g$7050$RCJqu)
        (make-error . g$6960$RCJqu)
        (make-assertion-violation . g$6988$RCJqu)
        (lexical-violation? . g$7065$RCJqu)
        (irritants-condition? . g$7005$RCJqu)
        (implementation-restriction-violation? . g$7051$RCJqu)
        (error? . g$6961$RCJqu)
        (condition-who . g$7023$RCJqu)
        (condition-predicate . g$12184$RCJqu)
        (condition-message . g$6919$RCJqu)
        (condition-irritants . g$7006$RCJqu)
        (condition-accessor . g$12183$RCJqu)
        (condition . g$12182$RCJqu)
        (assertion-violation? . g$6989$RCJqu)
        (condition? . g$12181$RCJqu)
        (utf32->string . g$12180$RCJqu)
        (utf16->string . g$12179$RCJqu)
        (utf8->string . g$12178$RCJqu)
        (uint-list->bytevector . g$12177$RCJqu)
        (u8-list->bytevector . g$12176$RCJqu)
        (string->utf8 . g$12175$RCJqu)
        (string->utf32 . g$12174$RCJqu)
        (string->utf16 . g$12173$RCJqu)
        (sint-list->bytevector . g$12172$RCJqu)
        (native-endianness . g$6773$RCJqu)
        (bytevector? . g$12171$RCJqu)
        (bytevector=? . g$12170$RCJqu)
        (bytevector-uint-set! . g$12169$RCJqu)
        (bytevector-uint-ref . g$12168$RCJqu)
        (bytevector-u8-set! . g$12167$RCJqu)
        (bytevector-u8-ref . g$12166$RCJqu)
        (bytevector-u64-set! . g$6794$RCJqu)
        (bytevector-u64-ref . g$6790$RCJqu)
        (bytevector-u64-native-set! . g$6796$RCJqu)
        (bytevector-u64-native-ref . g$6792$RCJqu)
        (bytevector-u32-set! . g$6786$RCJqu)
        (bytevector-u32-ref . g$6782$RCJqu)
        (bytevector-u32-native-set! . g$6788$RCJqu)
        (bytevector-u32-native-ref . g$6784$RCJqu)
        (bytevector-u16-set! . g$6778$RCJqu)
        (bytevector-u16-ref . g$6774$RCJqu)
        (bytevector-u16-native-set! . g$6780$RCJqu)
        (bytevector-u16-native-ref . g$6776$RCJqu)
        (bytevector-sint-set! . g$12165$RCJqu)
        (bytevector-sint-ref . g$12164$RCJqu)
        (bytevector-s8-set! . g$12163$RCJqu)
        (bytevector-s8-ref . g$12162$RCJqu)
        (bytevector-s64-set! . g$6795$RCJqu)
        (bytevector-s64-ref . g$6791$RCJqu)
        (bytevector-s64-native-set! . g$6797$RCJqu)
        (bytevector-s64-native-ref . g$6793$RCJqu)
        (bytevector-s32-set! . g$6787$RCJqu)
        (bytevector-s32-ref . g$6783$RCJqu)
        (bytevector-s32-native-set! . g$6789$RCJqu)
        (bytevector-s32-native-ref . g$6785$RCJqu)
        (bytevector-s16-set! . g$6779$RCJqu)
        (bytevector-s16-ref . g$6775$RCJqu)
        (bytevector-s16-native-set! . g$6781$RCJqu)
        (bytevector-s16-native-ref . g$6777$RCJqu)
        (bytevector-length . g$12161$RCJqu)
        (bytevector-ieee-single-set! . g$12160$RCJqu)
        (bytevector-ieee-single-ref . g$12159$RCJqu)
        (bytevector-ieee-single-native-set! . g$6800$RCJqu)
        (bytevector-ieee-single-native-ref . g$6798$RCJqu)
        (bytevector-ieee-double-set! . g$12158$RCJqu)
        (bytevector-ieee-double-ref . g$12157$RCJqu)
        (bytevector-ieee-double-native-set! . g$6801$RCJqu)
        (bytevector-ieee-double-native-ref . g$6799$RCJqu)
        (bytevector-fill! . g$12156$RCJqu)
        (bytevector-copy! . g$12155$RCJqu)
        (bytevector-copy . g$12154$RCJqu)
        (bytevector->uint-list . g$12153$RCJqu)
        (bytevector->u8-list . g$12152$RCJqu)
        (bytevector->sint-list . g$12151$RCJqu)
        (no-nans-violation? . g$7330$RCJqu)
        (no-infinities-violation? . g$7316$RCJqu)
        (make-no-nans-violation . g$7329$RCJqu)
        (make-no-infinities-violation . g$7315$RCJqu)
        (real->flonum . g$12150$RCJqu)
        (flzero? . g$12149$RCJqu)
        (fltruncate . g$12148$RCJqu)
        (fltan . g$12147$RCJqu)
        (flsqrt . g$12146$RCJqu)
        (flsin . g$12145$RCJqu)
        (flround . g$12144$RCJqu)
        (flpositive? . g$12143$RCJqu)
        (flonum? . g$12142$RCJqu)
        (flodd? . g$12141$RCJqu)
        (flnumerator . g$12140$RCJqu)
        (flnegative? . g$12139$RCJqu)
        (flnan? . g$12138$RCJqu)
        (flmod0 . g$12137$RCJqu)
        (flmod . g$12136$RCJqu)
        (flmin . g$12135$RCJqu)
        (flmax . g$12134$RCJqu)
        (fllog . g$12133$RCJqu)
        (flinteger? . g$12132$RCJqu)
        (flinfinite? . g$12131$RCJqu)
        (flfloor . g$12130$RCJqu)
        (flfinite? . g$12129$RCJqu)
        (flexpt . g$12128$RCJqu)
        (flexp . g$12127$RCJqu)
        (fleven? . g$12126$RCJqu)
        (fldiv0-and-mod0 . g$12125$RCJqu)
        (fldiv0 . g$12124$RCJqu)
        (fldiv-and-mod . g$12123$RCJqu)
        (fldiv . g$12122$RCJqu)
        (fldenominator . g$12121$RCJqu)
        (flcos . g$12120$RCJqu)
        (flceiling . g$12119$RCJqu)
        (flatan . g$12118$RCJqu)
        (flasin . g$12117$RCJqu)
        (flacos . g$12116$RCJqu)
        (flabs . g$12115$RCJqu)
        (fl>? . g$12114$RCJqu)
        (fl>=? . g$12113$RCJqu)
        (fl=? . g$12112$RCJqu)
        (fl<? . g$12111$RCJqu)
        (fl<=? . g$12110$RCJqu)
        (fl/ . g$12109$RCJqu)
        (fl- . g$12108$RCJqu)
        (fl+ . g$12107$RCJqu)
        (fl* . g$12106$RCJqu)
        (fixnum->flonum . g$12105$RCJqu)
        (fxzero? . g$12104$RCJqu)
        (fxxor . g$12103$RCJqu)
        (fxrotate-bit-field . g$7261$RCJqu)
        (fxreverse-bit-field . g$12102$RCJqu)
        (fxpositive? . g$12101$RCJqu)
        (fxodd? . g$12100$RCJqu)
        (fxnot . g$12099$RCJqu)
        (fxnegative? . g$12098$RCJqu)
        (fxmod0 . g$12097$RCJqu)
        (fxmod . g$12096$RCJqu)
        (fxmin . g$12095$RCJqu)
        (fxmax . g$12094$RCJqu)
        (fxlength . g$12093$RCJqu)
        (fxior . g$12092$RCJqu)
        (fxif . g$7255$RCJqu)
        (fxfirst-bit-set . g$12091$RCJqu)
        (fxeven? . g$12090$RCJqu)
        (fxdiv0-and-mod0 . g$12089$RCJqu)
        (fxdiv0 . g$12088$RCJqu)
        (fxdiv-and-mod . g$12087$RCJqu)
        (fxdiv . g$12086$RCJqu)
        (fxcopy-bit-field . g$7258$RCJqu)
        (fxcopy-bit . g$7256$RCJqu)
        (fxbit-set? . g$12085$RCJqu)
        (fxbit-field . g$7257$RCJqu)
        (fxbit-count . g$12084$RCJqu)
        (fxarithmetic-shift-right . g$7260$RCJqu)
        (fxarithmetic-shift-left . g$7259$RCJqu)
        (fxarithmetic-shift . g$12083$RCJqu)
        (fxand . g$12082$RCJqu)
        (fx>? . g$12081$RCJqu)
        (fx>=? . g$12080$RCJqu)
        (fx=? . g$12079$RCJqu)
        (fx<? . g$12078$RCJqu)
        (fx<=? . g$12077$RCJqu)
        (fx-/carry . g$12076$RCJqu)
        (fx- . g$12075$RCJqu)
        (fx+/carry . g$12074$RCJqu)
        (fx+ . g$12073$RCJqu)
        (fx*/carry . g$12072$RCJqu)
        (fx* . g$12071$RCJqu)
        (greatest-fixnum . g$12070$RCJqu)
        (least-fixnum . g$12069$RCJqu)
        (fixnum-width . g$12068$RCJqu)
        (fixnum? . g$12067$RCJqu)
        (bitwise-rotate-bit-field . g$7209$RCJqu)
        (bitwise-reverse-bit-field . g$7210$RCJqu)
        (bitwise-length . g$12066$RCJqu)
        (bitwise-if . g$7203$RCJqu)
        (bitwise-first-bit-set . g$12065$RCJqu)
        (bitwise-copy-bit-field . g$7206$RCJqu)
        (bitwise-copy-bit . g$7204$RCJqu)
        (bitwise-bit-set? . g$12064$RCJqu)
        (bitwise-bit-field . g$12063$RCJqu)
        (bitwise-bit-count . g$12062$RCJqu)
        (bitwise-xor . g$12061$RCJqu)
        (bitwise-ior . g$12060$RCJqu)
        (bitwise-and . g$12059$RCJqu)
        (bitwise-not . g$12058$RCJqu)
        (bitwise-arithmetic-shift-right . g$7208$RCJqu)
        (bitwise-arithmetic-shift-left . g$7207$RCJqu)
        (bitwise-arithmetic-shift . g$12057$RCJqu)
        (zero? . g$12056$RCJqu)
        (vector? . g$12055$RCJqu)
        (vector-set! . g$12054$RCJqu)
        (vector-ref . g$12053$RCJqu)
        (vector-map . g$12052$RCJqu)
        (vector-length . g$12051$RCJqu)
        (vector-for-each . g$12050$RCJqu)
        (vector-fill! . g$12049$RCJqu)
        (vector->list . g$12048$RCJqu)
        (vector . g$12047$RCJqu)
        (values . g$12046$RCJqu)
        (truncate . g$12045$RCJqu)
        (tan . g$12044$RCJqu)
        (symbol? . g$12043$RCJqu)
        (symbol=? . g$12042$RCJqu)
        (symbol->string . g$12041$RCJqu)
        (substring . g$12040$RCJqu)
        (string? . g$12039$RCJqu)
        (string>? . g$12038$RCJqu)
        (string>=? . g$12037$RCJqu)
        (string=? . g$12036$RCJqu)
        (string<? . g$12035$RCJqu)
        (string<=? . g$12034$RCJqu)
        (string-ref . g$12033$RCJqu)
        (string-length . g$12032$RCJqu)
        (string-for-each . g$12031$RCJqu)
        (string-copy . g$12030$RCJqu)
        (string-append . g$12029$RCJqu)
        (string->symbol . g$12028$RCJqu)
        (string->number . g$12027$RCJqu)
        (string->list . g$12026$RCJqu)
        (string . g$12025$RCJqu)
        (sqrt . g$12024$RCJqu)
        (sin . g$12023$RCJqu)
        (round . g$12022$RCJqu)
        (reverse . g$12021$RCJqu)
        (real? . g$12020$RCJqu)
        (real-valued? . g$12019$RCJqu)
        (real-part . g$12018$RCJqu)
        (rationalize . g$6234$RCJqu)
        (rational? . g$12017$RCJqu)
        (rational-valued? . g$12016$RCJqu)
        (procedure? . g$12015$RCJqu)
        (positive? . g$12014$RCJqu)
        (pair? . g$12013$RCJqu)
        (odd? . g$12012$RCJqu)
        (numerator . g$12011$RCJqu)
        (number? . g$12010$RCJqu)
        (number->string . g$12009$RCJqu)
        (null? . g$12008$RCJqu)
        (not . g$12007$RCJqu)
        (negative? . g$12006$RCJqu)
        (nan? . g$12005$RCJqu)
        (min . g$12004$RCJqu)
        (max . g$12003$RCJqu)
        (map . g$12002$RCJqu)
        (make-vector . g$12001$RCJqu)
        (make-string . g$12000$RCJqu)
        (make-rectangular . g$11999$RCJqu)
        (make-polar . g$11998$RCJqu)
        (magnitude . g$11997$RCJqu)
        (log . g$11996$RCJqu)
        (list? . g$11995$RCJqu)
        (list-tail . g$11994$RCJqu)
        (list-ref . g$11993$RCJqu)
        (list->vector . g$11992$RCJqu)
        (list->string . g$11991$RCJqu)
        (list . g$11990$RCJqu)
        (length . g$11989$RCJqu)
        (lcm . g$11988$RCJqu)
        (integer? . g$11987$RCJqu)
        (integer-valued? . g$11986$RCJqu)
        (integer->char . g$11985$RCJqu)
        (infinite? . g$11984$RCJqu)
        (inexact? . g$11983$RCJqu)
        (inexact . g$11982$RCJqu)
        (imag-part . g$11981$RCJqu)
        (gcd . g$11980$RCJqu)
        (for-each . g$11979$RCJqu)
        (floor . g$11978$RCJqu)
        (finite? . g$11977$RCJqu)
        (expt . g$11976$RCJqu)
        (exp . g$11975$RCJqu)
        (exact? . g$11974$RCJqu)
        (exact-integer-sqrt . g$11973$RCJqu)
        (exact . g$11972$RCJqu)
        (even? . g$11971$RCJqu)
        (error . g$11970$RCJqu)
        (eqv? . g$11969$RCJqu)
        (equal? . g$11968$RCJqu)
        (eq? . g$11967$RCJqu)
        (dynamic-wind . g$11966$RCJqu)
        (div0-and-mod0 . g$11965$RCJqu)
        (mod0 . g$11964$RCJqu)
        (div0 . g$11963$RCJqu)
        (div-and-mod . g$11962$RCJqu)
        (mod . g$11961$RCJqu)
        (div . g$11960$RCJqu)
        (denominator . g$11959$RCJqu)
        (cos . g$11958$RCJqu)
        (cons . g$11957$RCJqu)
        (complex? . g$11956$RCJqu)
        (char? . g$11955$RCJqu)
        (char>? . g$11954$RCJqu)
        (char>=? . g$11953$RCJqu)
        (char=? . g$11952$RCJqu)
        (char<? . g$11951$RCJqu)
        (char<=? . g$11950$RCJqu)
        (char->integer . g$11949$RCJqu)
        (ceiling . g$11948$RCJqu)
        (call-with-values . g$11947$RCJqu)
        (call/cc . g$11946$RCJqu)
        (call-with-current-continuation . g$11945$RCJqu)
        (cddddr . g$6233$RCJqu)
        (cdddar . g$6232$RCJqu)
        (cddadr . g$6231$RCJqu)
        (cddaar . g$6230$RCJqu)
        (cdaddr . g$6229$RCJqu)
        (cdadar . g$6228$RCJqu)
        (cdaadr . g$6227$RCJqu)
        (cdaaar . g$6226$RCJqu)
        (cadddr . g$6225$RCJqu)
        (caddar . g$6224$RCJqu)
        (cadadr . g$6223$RCJqu)
        (cadaar . g$6222$RCJqu)
        (caaddr . g$6221$RCJqu)
        (caadar . g$6220$RCJqu)
        (caaadr . g$6219$RCJqu)
        (caaaar . g$6218$RCJqu)
        (cdddr . g$6217$RCJqu)
        (cddar . g$6216$RCJqu)
        (cdadr . g$6215$RCJqu)
        (cdaar . g$6214$RCJqu)
        (caddr . g$6213$RCJqu)
        (cadar . g$6212$RCJqu)
        (caadr . g$6211$RCJqu)
        (caaar . g$6210$RCJqu)
        (cddr . g$6209$RCJqu)
        (cdar . g$6208$RCJqu)
        (cadr . g$6207$RCJqu)
        (caar . g$6206$RCJqu)
        (cdr . g$11944$RCJqu)
        (car . g$11943$RCJqu)
        (boolean? . g$11942$RCJqu)
        (boolean=? . g$11941$RCJqu)
        (atan . g$11940$RCJqu)
        (assertion-violation . g$11939$RCJqu)
        (asin . g$11938$RCJqu)
        (apply . g$11937$RCJqu)
        (append . g$11936$RCJqu)
        (angle . g$11935$RCJqu)
        (acos . g$11934$RCJqu)
        (abs . g$11933$RCJqu)
        (/ . g$11932$RCJqu)
        (* . g$11931$RCJqu)
        (- . g$11930$RCJqu)
        (+ . g$11929$RCJqu)
        (>= . g$11928$RCJqu)
        (> . g$11927$RCJqu)
        (= . g$11926$RCJqu)
        (<= . g$11925$RCJqu)
        (< . g$11924$RCJqu)
        (&no-nans . g$11898$RCJqu)
        (&no-infinities . g$11897$RCJqu)
        (&i/o-encoding . g$11896$RCJqu)
        (&i/o-decoding . g$11895$RCJqu)
        (&i/o-port . g$11894$RCJqu)
        (&i/o-file-does-not-exist . g$11893$RCJqu)
        (&i/o-file-already-exists . g$11892$RCJqu)
        (&i/o-file-is-read-only . g$11891$RCJqu)
        (&i/o-file-protection . g$11890$RCJqu)
        (&i/o-filename . g$11889$RCJqu)
        (&i/o-invalid-position . g$11888$RCJqu)
        (&i/o-write . g$11887$RCJqu)
        (&i/o-read . g$11886$RCJqu)
        (&i/o . g$11885$RCJqu)
        (&non-continuable . g$11884$RCJqu)
        (&undefined . g$11883$RCJqu)
        (&syntax . g$11882$RCJqu)
        (&lexical . g$11881$RCJqu)
        (&implementation-restriction . g$11880$RCJqu)
        (&who . g$11878$RCJqu)
        (&irritants . g$11877$RCJqu)
        (&assertion . g$11876$RCJqu)
        (&violation . g$11875$RCJqu)
        (&error . g$11874$RCJqu)
        (&serious . g$11873$RCJqu)
        (&warning . g$11872$RCJqu)
        (&message . g$11871$RCJqu)
        (&condition . g$11870$RCJqu)
        (define-condition-type . g$11869$RCJqu)
        (define-enumeration . g$11868$RCJqu)
        (define-record-type . g$11867$RCJqu)
        (parent-rtd . g$11866$RCJqu)
        (nongenerative . g$11865$RCJqu)
        (opaque . g$11864$RCJqu)
        (sealed . g$11863$RCJqu)
        (protocol . g$11862$RCJqu)
        (parent . g$11861$RCJqu)
        (immutable . g$11860$RCJqu)
        (mutable . g$11859$RCJqu)
        (fields . g$11858$RCJqu)
        (error-handling-mode . g$11857$RCJqu)
        (file-options . g$11856$RCJqu)
        (buffer-mode . g$11855$RCJqu)
        (eol-style . g$11854$RCJqu)
        (guard . g$11853$RCJqu)
        (unsyntax-splicing . g$11847$RCJqu)
        (unsyntax . g$11846$RCJqu)
        (unquote-splicing . g$11845$RCJqu)
        (unquote . g$11844$RCJqu)
        (_ . g$11843$RCJqu)
        (else . g$11842$RCJqu)
        (=> . g$11841$RCJqu)
        (... . g$11840$RCJqu)
        (assert . g$11839$RCJqu)
        (endianness . g$11838$RCJqu)
        (or . g$11835$RCJqu)
        (and . g$11834$RCJqu)
        (do . g$11833$RCJqu)
        (cond . g$11832$RCJqu)
        (let* . g$11831$RCJqu)
        (let . g$11830$RCJqu)
        (identifier-syntax . g$11829$RCJqu)
        (with-syntax . g$11828$RCJqu)
        (quasisyntax . g$11827$RCJqu)
        (quasiquote . g$11826$RCJqu)
        (syntax-rules . g$11825$RCJqu)
        (let-values . g$11821$RCJqu)
        (let*-values . g$11820$RCJqu)
        (record-constructor-descriptor . g$11819$RCJqu)
        (record-type-descriptor . g$11818$RCJqu)
        (case . g$11816$RCJqu)
        (unless . g$11814$RCJqu)
        (when . g$11813$RCJqu)
        (if . g$11812$RCJqu)
        (letrec* . g$11811$RCJqu)
        (letrec . g$11810$RCJqu)
        (case-lambda . g$11808$RCJqu)
        (lambda . g$11807$RCJqu)
        (syntax . g$11806$RCJqu)
        (syntax-case . g$11805$RCJqu)
        (quote . g$11804$RCJqu)
        (letrec-syntax . g$11802$RCJqu)
        (let-syntax . g$11801$RCJqu)
        (set! . g$11800$RCJqu)
        (import . g$11799$RCJqu)
        (library . g$11798$RCJqu)
        (begin . g$11797$RCJqu)
        (define-syntax . g$11795$RCJqu)
        (define . g$11794$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12461$RCJqu
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8832$RCJqu)
        (scheme-report-environment . g$8810$RCJqu)
        (quotient . g$7111$RCJqu)
        (null-environment . g$8809$RCJqu)
        (remainder . g$7112$RCJqu)
        (modulo . g$7113$RCJqu)
        (inexact->exact . g$12212$RCJqu)
        (force . g$12211$RCJqu)
        (exact->inexact . g$12210$RCJqu)
        (delay . g$11837$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12462$RCJqu
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11833$RCJqu)
        (unless . g$11814$RCJqu)
        (when . g$11813$RCJqu)
        (case-lambda . g$11808$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12463$RCJqu
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8812$RCJqu) (environment . g$8808$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12464$RCJqu
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12206$RCJqu) (set-car! . g$12205$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12465$RCJqu
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12208$RCJqu) (string-set! . g$12207$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12466$RCJqu
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12209$RCJqu) (command-line . g$11760$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12467$RCJqu
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8434$RCJqu)
        (identifier? . g$8827$RCJqu)
        (generate-temporaries . g$8819$RCJqu)
        (free-identifier=? . g$8820$RCJqu)
        (syntax->datum . g$8829$RCJqu)
        (datum->syntax . g$8828$RCJqu)
        (bound-identifier=? . g$8821$RCJqu)
        (syntax-violation . g$8826$RCJqu)
        (unsyntax-splicing . g$11847$RCJqu)
        (unsyntax . g$11846$RCJqu)
        (_ . g$11843$RCJqu)
        (... . g$11840$RCJqu)
        (with-syntax . g$11828$RCJqu)
        (quasisyntax . g$11827$RCJqu)
        (syntax . g$11806$RCJqu)
        (syntax-case . g$11805$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12468$RCJqu
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6617$RCJqu)
        (file-exists? . g$6616$RCJqu)
        (make-i/o-write-error . g$7372$RCJqu)
        (make-i/o-read-error . g$7358$RCJqu)
        (make-i/o-port-error . g$7477$RCJqu)
        (make-i/o-invalid-position-error . g$7387$RCJqu)
        (make-i/o-filename-error . g$7404$RCJqu)
        (make-i/o-file-protection-error . g$7420$RCJqu)
        (make-i/o-file-is-read-only-error . g$7434$RCJqu)
        (make-i/o-file-does-not-exist-error . g$7462$RCJqu)
        (make-i/o-file-already-exists-error . g$7448$RCJqu)
        (make-i/o-error . g$7344$RCJqu)
        (i/o-write-error? . g$7373$RCJqu)
        (i/o-read-error? . g$7359$RCJqu)
        (i/o-port-error? . g$7479$RCJqu)
        (i/o-invalid-position-error? . g$7389$RCJqu)
        (i/o-filename-error? . g$7406$RCJqu)
        (i/o-file-protection-error? . g$7421$RCJqu)
        (i/o-file-is-read-only-error? . g$7435$RCJqu)
        (i/o-file-does-not-exist-error? . g$7463$RCJqu)
        (i/o-file-already-exists-error? . g$7449$RCJqu)
        (i/o-error? . g$7345$RCJqu)
        (i/o-error-port . g$7480$RCJqu)
        (i/o-error-filename . g$7407$RCJqu)
        (&i/o-port . g$11894$RCJqu)
        (&i/o-file-does-not-exist . g$11893$RCJqu)
        (&i/o-file-already-exists . g$11892$RCJqu)
        (&i/o-file-is-read-only . g$11891$RCJqu)
        (&i/o-file-protection . g$11890$RCJqu)
        (&i/o-filename . g$11889$RCJqu)
        (&i/o-invalid-position . g$11888$RCJqu)
        (&i/o-write . g$11887$RCJqu)
        (&i/o-read . g$11886$RCJqu)
        (&i/o . g$11885$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12469$RCJqu
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12310$RCJqu)
        (vector-sort . g$12309$RCJqu)
        (list-sort . g$7124$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12470$RCJqu
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12056$RCJqu)
        (vector? . g$12055$RCJqu)
        (vector-set! . g$12054$RCJqu)
        (vector-ref . g$12053$RCJqu)
        (vector-map . g$12052$RCJqu)
        (vector-length . g$12051$RCJqu)
        (vector-for-each . g$12050$RCJqu)
        (vector-fill! . g$12049$RCJqu)
        (vector->list . g$12048$RCJqu)
        (vector . g$12047$RCJqu)
        (values . g$12046$RCJqu)
        (truncate . g$12045$RCJqu)
        (tan . g$12044$RCJqu)
        (symbol? . g$12043$RCJqu)
        (symbol=? . g$12042$RCJqu)
        (symbol->string . g$12041$RCJqu)
        (substring . g$12040$RCJqu)
        (string? . g$12039$RCJqu)
        (string>? . g$12038$RCJqu)
        (string>=? . g$12037$RCJqu)
        (string=? . g$12036$RCJqu)
        (string<? . g$12035$RCJqu)
        (string<=? . g$12034$RCJqu)
        (string-ref . g$12033$RCJqu)
        (string-length . g$12032$RCJqu)
        (string-for-each . g$12031$RCJqu)
        (string-copy . g$12030$RCJqu)
        (string-append . g$12029$RCJqu)
        (string->symbol . g$12028$RCJqu)
        (string->number . g$12027$RCJqu)
        (string->list . g$12026$RCJqu)
        (string . g$12025$RCJqu)
        (sqrt . g$12024$RCJqu)
        (sin . g$12023$RCJqu)
        (round . g$12022$RCJqu)
        (reverse . g$12021$RCJqu)
        (real? . g$12020$RCJqu)
        (real-valued? . g$12019$RCJqu)
        (real-part . g$12018$RCJqu)
        (rationalize . g$6234$RCJqu)
        (rational? . g$12017$RCJqu)
        (rational-valued? . g$12016$RCJqu)
        (procedure? . g$12015$RCJqu)
        (positive? . g$12014$RCJqu)
        (pair? . g$12013$RCJqu)
        (odd? . g$12012$RCJqu)
        (numerator . g$12011$RCJqu)
        (number? . g$12010$RCJqu)
        (number->string . g$12009$RCJqu)
        (null? . g$12008$RCJqu)
        (not . g$12007$RCJqu)
        (negative? . g$12006$RCJqu)
        (nan? . g$12005$RCJqu)
        (min . g$12004$RCJqu)
        (max . g$12003$RCJqu)
        (map . g$12002$RCJqu)
        (make-vector . g$12001$RCJqu)
        (make-string . g$12000$RCJqu)
        (make-rectangular . g$11999$RCJqu)
        (make-polar . g$11998$RCJqu)
        (magnitude . g$11997$RCJqu)
        (log . g$11996$RCJqu)
        (list? . g$11995$RCJqu)
        (list-tail . g$11994$RCJqu)
        (list-ref . g$11993$RCJqu)
        (list->vector . g$11992$RCJqu)
        (list->string . g$11991$RCJqu)
        (list . g$11990$RCJqu)
        (length . g$11989$RCJqu)
        (lcm . g$11988$RCJqu)
        (integer? . g$11987$RCJqu)
        (integer-valued? . g$11986$RCJqu)
        (integer->char . g$11985$RCJqu)
        (infinite? . g$11984$RCJqu)
        (inexact? . g$11983$RCJqu)
        (inexact . g$11982$RCJqu)
        (imag-part . g$11981$RCJqu)
        (gcd . g$11980$RCJqu)
        (for-each . g$11979$RCJqu)
        (floor . g$11978$RCJqu)
        (finite? . g$11977$RCJqu)
        (expt . g$11976$RCJqu)
        (exp . g$11975$RCJqu)
        (exact? . g$11974$RCJqu)
        (exact-integer-sqrt . g$11973$RCJqu)
        (exact . g$11972$RCJqu)
        (even? . g$11971$RCJqu)
        (error . g$11970$RCJqu)
        (eqv? . g$11969$RCJqu)
        (equal? . g$11968$RCJqu)
        (eq? . g$11967$RCJqu)
        (dynamic-wind . g$11966$RCJqu)
        (div0-and-mod0 . g$11965$RCJqu)
        (mod0 . g$11964$RCJqu)
        (div0 . g$11963$RCJqu)
        (div-and-mod . g$11962$RCJqu)
        (mod . g$11961$RCJqu)
        (div . g$11960$RCJqu)
        (denominator . g$11959$RCJqu)
        (cos . g$11958$RCJqu)
        (cons . g$11957$RCJqu)
        (complex? . g$11956$RCJqu)
        (char? . g$11955$RCJqu)
        (char>? . g$11954$RCJqu)
        (char>=? . g$11953$RCJqu)
        (char=? . g$11952$RCJqu)
        (char<? . g$11951$RCJqu)
        (char<=? . g$11950$RCJqu)
        (char->integer . g$11949$RCJqu)
        (ceiling . g$11948$RCJqu)
        (call-with-values . g$11947$RCJqu)
        (call/cc . g$11946$RCJqu)
        (call-with-current-continuation . g$11945$RCJqu)
        (cddddr . g$6233$RCJqu)
        (cdddar . g$6232$RCJqu)
        (cddadr . g$6231$RCJqu)
        (cddaar . g$6230$RCJqu)
        (cdaddr . g$6229$RCJqu)
        (cdadar . g$6228$RCJqu)
        (cdaadr . g$6227$RCJqu)
        (cdaaar . g$6226$RCJqu)
        (cadddr . g$6225$RCJqu)
        (caddar . g$6224$RCJqu)
        (cadadr . g$6223$RCJqu)
        (cadaar . g$6222$RCJqu)
        (caaddr . g$6221$RCJqu)
        (caadar . g$6220$RCJqu)
        (caaadr . g$6219$RCJqu)
        (caaaar . g$6218$RCJqu)
        (cdddr . g$6217$RCJqu)
        (cddar . g$6216$RCJqu)
        (cdadr . g$6215$RCJqu)
        (cdaar . g$6214$RCJqu)
        (caddr . g$6213$RCJqu)
        (cadar . g$6212$RCJqu)
        (caadr . g$6211$RCJqu)
        (caaar . g$6210$RCJqu)
        (cddr . g$6209$RCJqu)
        (cdar . g$6208$RCJqu)
        (cadr . g$6207$RCJqu)
        (caar . g$6206$RCJqu)
        (cdr . g$11944$RCJqu)
        (car . g$11943$RCJqu)
        (boolean? . g$11942$RCJqu)
        (boolean=? . g$11941$RCJqu)
        (atan . g$11940$RCJqu)
        (assertion-violation . g$11939$RCJqu)
        (asin . g$11938$RCJqu)
        (apply . g$11937$RCJqu)
        (append . g$11936$RCJqu)
        (angle . g$11935$RCJqu)
        (acos . g$11934$RCJqu)
        (abs . g$11933$RCJqu)
        (/ . g$11932$RCJqu)
        (* . g$11931$RCJqu)
        (- . g$11930$RCJqu)
        (+ . g$11929$RCJqu)
        (>= . g$11928$RCJqu)
        (> . g$11927$RCJqu)
        (= . g$11926$RCJqu)
        (<= . g$11925$RCJqu)
        (< . g$11924$RCJqu)
        (unquote-splicing . g$11845$RCJqu)
        (unquote . g$11844$RCJqu)
        (_ . g$11843$RCJqu)
        (else . g$11842$RCJqu)
        (=> . g$11841$RCJqu)
        (... . g$11840$RCJqu)
        (assert . g$11839$RCJqu)
        (or . g$11835$RCJqu)
        (and . g$11834$RCJqu)
        (cond . g$11832$RCJqu)
        (let* . g$11831$RCJqu)
        (let . g$11830$RCJqu)
        (identifier-syntax . g$11829$RCJqu)
        (quasiquote . g$11826$RCJqu)
        (syntax-rules . g$11825$RCJqu)
        (let-values . g$11821$RCJqu)
        (let*-values . g$11820$RCJqu)
        (case . g$11816$RCJqu)
        (if . g$11812$RCJqu)
        (letrec* . g$11811$RCJqu)
        (letrec . g$11810$RCJqu)
        (lambda . g$11807$RCJqu)
        (quote . g$11804$RCJqu)
        (letrec-syntax . g$11802$RCJqu)
        (let-syntax . g$11801$RCJqu)
        (set! . g$11800$RCJqu)
        (begin . g$11797$RCJqu)
        (define-syntax . g$11795$RCJqu)
        (define . g$11794$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12471$RCJqu
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6697$RCJqu)
        (remv . g$6698$RCJqu)
        (remp . g$6683$RCJqu)
        (remq . g$6699$RCJqu)
        (partition . g$6682$RCJqu)
        (memv . g$12204$RCJqu)
        (memq . g$12203$RCJqu)
        (memp . g$6689$RCJqu)
        (member . g$6688$RCJqu)
        (exists . g$6693$RCJqu)
        (for-all . g$6692$RCJqu)
        (fold-right . g$6696$RCJqu)
        (fold-left . g$6695$RCJqu)
        (find . g$6681$RCJqu)
        (filter . g$6684$RCJqu)
        (cons* . g$6694$RCJqu)
        (assv . g$6685$RCJqu)
        (assq . g$12202$RCJqu)
        (assp . g$6687$RCJqu)
        (assoc . g$6686$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12472$RCJqu
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$12296$RCJqu)
        (call-with-input-file . g$12295$RCJqu)
        (write-char . g$12294$RCJqu)
        (write . g$12293$RCJqu)
        (with-output-to-file . g$12292$RCJqu)
        (with-input-from-file . g$12291$RCJqu)
        (read-char . g$12290$RCJqu)
        (read . g$12289$RCJqu)
        (peek-char . g$12288$RCJqu)
        (open-output-file . g$12287$RCJqu)
        (open-input-file . g$12286$RCJqu)
        (newline . g$12285$RCJqu)
        (display . g$12284$RCJqu)
        (close-output-port . g$12283$RCJqu)
        (close-input-port . g$12282$RCJqu)
        (eof-object? . g$12281$RCJqu)
        (eof-object . g$12280$RCJqu)
        (current-error-port . g$12279$RCJqu)
        (current-output-port . g$12278$RCJqu)
        (current-input-port . g$12277$RCJqu)
        (output-port? . g$12276$RCJqu)
        (input-port? . g$12275$RCJqu)
        (make-i/o-write-error . g$7372$RCJqu)
        (make-i/o-read-error . g$7358$RCJqu)
        (make-i/o-port-error . g$7477$RCJqu)
        (make-i/o-invalid-position-error . g$7387$RCJqu)
        (make-i/o-filename-error . g$7404$RCJqu)
        (make-i/o-file-protection-error . g$7420$RCJqu)
        (make-i/o-file-is-read-only-error . g$7434$RCJqu)
        (make-i/o-file-does-not-exist-error . g$7462$RCJqu)
        (make-i/o-file-already-exists-error . g$7448$RCJqu)
        (make-i/o-error . g$7344$RCJqu)
        (i/o-write-error? . g$7373$RCJqu)
        (i/o-read-error? . g$7359$RCJqu)
        (i/o-port-error? . g$7479$RCJqu)
        (i/o-invalid-position-error? . g$7389$RCJqu)
        (i/o-filename-error? . g$7406$RCJqu)
        (i/o-file-protection-error? . g$7421$RCJqu)
        (i/o-file-is-read-only-error? . g$7435$RCJqu)
        (i/o-file-does-not-exist-error? . g$7463$RCJqu)
        (i/o-file-already-exists-error? . g$7449$RCJqu)
        (i/o-error? . g$7345$RCJqu)
        (i/o-error-port . g$7480$RCJqu)
        (i/o-error-filename . g$7407$RCJqu)
        (&i/o-port . g$11894$RCJqu)
        (&i/o-file-does-not-exist . g$11893$RCJqu)
        (&i/o-file-already-exists . g$11892$RCJqu)
        (&i/o-file-is-read-only . g$11891$RCJqu)
        (&i/o-file-protection . g$11890$RCJqu)
        (&i/o-filename . g$11889$RCJqu)
        (&i/o-invalid-position . g$11888$RCJqu)
        (&i/o-write . g$11887$RCJqu)
        (&i/o-read . g$11886$RCJqu)
        (&i/o . g$11885$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12473$RCJqu
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12234$RCJqu)
        (utf32->string . g$12180$RCJqu)
        (utf16->string . g$12179$RCJqu)
        (utf8->string . g$12178$RCJqu)
        (uint-list->bytevector . g$12177$RCJqu)
        (u8-list->bytevector . g$12176$RCJqu)
        (string->utf8 . g$12175$RCJqu)
        (string->utf32 . g$12174$RCJqu)
        (string->utf16 . g$12173$RCJqu)
        (sint-list->bytevector . g$12172$RCJqu)
        (native-endianness . g$6773$RCJqu)
        (bytevector? . g$12171$RCJqu)
        (bytevector=? . g$12170$RCJqu)
        (bytevector-uint-set! . g$12169$RCJqu)
        (bytevector-uint-ref . g$12168$RCJqu)
        (bytevector-u8-set! . g$12167$RCJqu)
        (bytevector-u8-ref . g$12166$RCJqu)
        (bytevector-u64-set! . g$6794$RCJqu)
        (bytevector-u64-ref . g$6790$RCJqu)
        (bytevector-u64-native-set! . g$6796$RCJqu)
        (bytevector-u64-native-ref . g$6792$RCJqu)
        (bytevector-u32-set! . g$6786$RCJqu)
        (bytevector-u32-ref . g$6782$RCJqu)
        (bytevector-u32-native-set! . g$6788$RCJqu)
        (bytevector-u32-native-ref . g$6784$RCJqu)
        (bytevector-u16-set! . g$6778$RCJqu)
        (bytevector-u16-ref . g$6774$RCJqu)
        (bytevector-u16-native-set! . g$6780$RCJqu)
        (bytevector-u16-native-ref . g$6776$RCJqu)
        (bytevector-sint-set! . g$12165$RCJqu)
        (bytevector-sint-ref . g$12164$RCJqu)
        (bytevector-s8-set! . g$12163$RCJqu)
        (bytevector-s8-ref . g$12162$RCJqu)
        (bytevector-s64-set! . g$6795$RCJqu)
        (bytevector-s64-ref . g$6791$RCJqu)
        (bytevector-s64-native-set! . g$6797$RCJqu)
        (bytevector-s64-native-ref . g$6793$RCJqu)
        (bytevector-s32-set! . g$6787$RCJqu)
        (bytevector-s32-ref . g$6783$RCJqu)
        (bytevector-s32-native-set! . g$6789$RCJqu)
        (bytevector-s32-native-ref . g$6785$RCJqu)
        (bytevector-s16-set! . g$6779$RCJqu)
        (bytevector-s16-ref . g$6775$RCJqu)
        (bytevector-s16-native-set! . g$6781$RCJqu)
        (bytevector-s16-native-ref . g$6777$RCJqu)
        (bytevector-length . g$12161$RCJqu)
        (bytevector-ieee-single-set! . g$12160$RCJqu)
        (bytevector-ieee-single-ref . g$12159$RCJqu)
        (bytevector-ieee-single-native-set! . g$6800$RCJqu)
        (bytevector-ieee-single-native-ref . g$6798$RCJqu)
        (bytevector-ieee-double-set! . g$12158$RCJqu)
        (bytevector-ieee-double-ref . g$12157$RCJqu)
        (bytevector-ieee-double-native-set! . g$6801$RCJqu)
        (bytevector-ieee-double-native-ref . g$6799$RCJqu)
        (bytevector-fill! . g$12156$RCJqu)
        (bytevector-copy! . g$12155$RCJqu)
        (bytevector-copy . g$12154$RCJqu)
        (bytevector->uint-list . g$12153$RCJqu)
        (bytevector->u8-list . g$12152$RCJqu)
        (bytevector->sint-list . g$12151$RCJqu)
        (endianness . g$11838$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12474$RCJqu
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12356$RCJqu)
        (string-titlecase . g$12355$RCJqu)
        (string-normalize-nfkd . g$12354$RCJqu)
        (string-normalize-nfkc . g$12353$RCJqu)
        (string-normalize-nfd . g$12352$RCJqu)
        (string-normalize-nfc . g$12351$RCJqu)
        (string-foldcase . g$12350$RCJqu)
        (string-downcase . g$12349$RCJqu)
        (string-ci>? . g$12348$RCJqu)
        (string-ci>=? . g$12347$RCJqu)
        (string-ci=? . g$12346$RCJqu)
        (string-ci<? . g$12345$RCJqu)
        (string-ci<=? . g$12344$RCJqu)
        (char-whitespace? . g$12343$RCJqu)
        (char-upper-case? . g$12342$RCJqu)
        (char-title-case? . g$12341$RCJqu)
        (char-numeric? . g$12340$RCJqu)
        (char-lower-case? . g$12339$RCJqu)
        (char-general-category . g$12338$RCJqu)
        (char-upcase . g$12337$RCJqu)
        (char-titlecase . g$12336$RCJqu)
        (char-foldcase . g$12335$RCJqu)
        (char-downcase . g$12334$RCJqu)
        (char-ci>? . g$12333$RCJqu)
        (char-ci>=? . g$12332$RCJqu)
        (char-ci=? . g$12331$RCJqu)
        (char-ci<? . g$12330$RCJqu)
        (char-ci<=? . g$12329$RCJqu)
        (char-alphabetic? . g$12328$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12475$RCJqu
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12201$RCJqu)
        (raise-continuable . g$12200$RCJqu)
        (raise . g$12199$RCJqu)
        (guard . g$11853$RCJqu)
        (else . g$11842$RCJqu)
        (=> . g$11841$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12476$RCJqu
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7209$RCJqu)
        (bitwise-reverse-bit-field . g$7210$RCJqu)
        (bitwise-length . g$12066$RCJqu)
        (bitwise-if . g$7203$RCJqu)
        (bitwise-first-bit-set . g$12065$RCJqu)
        (bitwise-copy-bit-field . g$7206$RCJqu)
        (bitwise-copy-bit . g$7204$RCJqu)
        (bitwise-bit-set? . g$12064$RCJqu)
        (bitwise-bit-field . g$12063$RCJqu)
        (bitwise-bit-count . g$12062$RCJqu)
        (bitwise-xor . g$12061$RCJqu)
        (bitwise-ior . g$12060$RCJqu)
        (bitwise-and . g$12059$RCJqu)
        (bitwise-not . g$12058$RCJqu)
        (bitwise-arithmetic-shift-right . g$7208$RCJqu)
        (bitwise-arithmetic-shift-left . g$7207$RCJqu)
        (bitwise-arithmetic-shift . g$12057$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12477$RCJqu
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12104$RCJqu)
        (fxxor . g$12103$RCJqu)
        (fxrotate-bit-field . g$7261$RCJqu)
        (fxreverse-bit-field . g$12102$RCJqu)
        (fxpositive? . g$12101$RCJqu)
        (fxodd? . g$12100$RCJqu)
        (fxnot . g$12099$RCJqu)
        (fxnegative? . g$12098$RCJqu)
        (fxmod0 . g$12097$RCJqu)
        (fxmod . g$12096$RCJqu)
        (fxmin . g$12095$RCJqu)
        (fxmax . g$12094$RCJqu)
        (fxlength . g$12093$RCJqu)
        (fxior . g$12092$RCJqu)
        (fxif . g$7255$RCJqu)
        (fxfirst-bit-set . g$12091$RCJqu)
        (fxeven? . g$12090$RCJqu)
        (fxdiv0-and-mod0 . g$12089$RCJqu)
        (fxdiv0 . g$12088$RCJqu)
        (fxdiv-and-mod . g$12087$RCJqu)
        (fxdiv . g$12086$RCJqu)
        (fxcopy-bit-field . g$7258$RCJqu)
        (fxcopy-bit . g$7256$RCJqu)
        (fxbit-set? . g$12085$RCJqu)
        (fxbit-field . g$7257$RCJqu)
        (fxbit-count . g$12084$RCJqu)
        (fxarithmetic-shift-right . g$7260$RCJqu)
        (fxarithmetic-shift-left . g$7259$RCJqu)
        (fxarithmetic-shift . g$12083$RCJqu)
        (fxand . g$12082$RCJqu)
        (fx>? . g$12081$RCJqu)
        (fx>=? . g$12080$RCJqu)
        (fx=? . g$12079$RCJqu)
        (fx<? . g$12078$RCJqu)
        (fx<=? . g$12077$RCJqu)
        (fx-/carry . g$12076$RCJqu)
        (fx- . g$12075$RCJqu)
        (fx+/carry . g$12074$RCJqu)
        (fx+ . g$12073$RCJqu)
        (fx*/carry . g$12072$RCJqu)
        (fx* . g$12071$RCJqu)
        (greatest-fixnum . g$12070$RCJqu)
        (least-fixnum . g$12069$RCJqu)
        (fixnum-width . g$12068$RCJqu)
        (fixnum? . g$12067$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12478$RCJqu
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7330$RCJqu)
        (no-infinities-violation? . g$7316$RCJqu)
        (make-no-nans-violation . g$7329$RCJqu)
        (make-no-infinities-violation . g$7315$RCJqu)
        (real->flonum . g$12150$RCJqu)
        (flzero? . g$12149$RCJqu)
        (fltruncate . g$12148$RCJqu)
        (fltan . g$12147$RCJqu)
        (flsqrt . g$12146$RCJqu)
        (flsin . g$12145$RCJqu)
        (flround . g$12144$RCJqu)
        (flpositive? . g$12143$RCJqu)
        (flonum? . g$12142$RCJqu)
        (flodd? . g$12141$RCJqu)
        (flnumerator . g$12140$RCJqu)
        (flnegative? . g$12139$RCJqu)
        (flnan? . g$12138$RCJqu)
        (flmod0 . g$12137$RCJqu)
        (flmod . g$12136$RCJqu)
        (flmin . g$12135$RCJqu)
        (flmax . g$12134$RCJqu)
        (fllog . g$12133$RCJqu)
        (flinteger? . g$12132$RCJqu)
        (flinfinite? . g$12131$RCJqu)
        (flfloor . g$12130$RCJqu)
        (flfinite? . g$12129$RCJqu)
        (flexpt . g$12128$RCJqu)
        (flexp . g$12127$RCJqu)
        (fleven? . g$12126$RCJqu)
        (fldiv0-and-mod0 . g$12125$RCJqu)
        (fldiv0 . g$12124$RCJqu)
        (fldiv-and-mod . g$12123$RCJqu)
        (fldiv . g$12122$RCJqu)
        (fldenominator . g$12121$RCJqu)
        (flcos . g$12120$RCJqu)
        (flceiling . g$12119$RCJqu)
        (flatan . g$12118$RCJqu)
        (flasin . g$12117$RCJqu)
        (flacos . g$12116$RCJqu)
        (flabs . g$12115$RCJqu)
        (fl>? . g$12114$RCJqu)
        (fl>=? . g$12113$RCJqu)
        (fl=? . g$12112$RCJqu)
        (fl<? . g$12111$RCJqu)
        (fl<=? . g$12110$RCJqu)
        (fl/ . g$12109$RCJqu)
        (fl- . g$12108$RCJqu)
        (fl+ . g$12107$RCJqu)
        (fl* . g$12106$RCJqu)
        (fixnum->flonum . g$12105$RCJqu)
        (&no-nans . g$11898$RCJqu)
        (&no-infinities . g$11897$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12479$RCJqu
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12308$RCJqu)
        (string-ci-hash . g$12307$RCJqu)
        (string-hash . g$12306$RCJqu)
        (equal-hash . g$12305$RCJqu)
        (hashtable-equivalence-function . g$12304$RCJqu)
        (make-hashtable . g$12303$RCJqu)
        (hashtable-hash-function . g$12302$RCJqu)
        (make-eqv-hashtable . g$6584$RCJqu)
        (make-eq-hashtable . g$6583$RCJqu)
        (hashtable? . g$12301$RCJqu)
        (hashtable-update! . g$6590$RCJqu)
        (hashtable-size . g$6585$RCJqu)
        (hashtable-set! . g$6587$RCJqu)
        (hashtable-ref . g$6586$RCJqu)
        (hashtable-mutable? . g$12300$RCJqu)
        (hashtable-keys . g$12299$RCJqu)
        (hashtable-entries . g$12298$RCJqu)
        (hashtable-delete! . g$6588$RCJqu)
        (hashtable-copy . g$12297$RCJqu)
        (hashtable-contains? . g$6589$RCJqu)
        (hashtable-clear! . g$6591$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12480$RCJqu
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12281$RCJqu)
        (eof-object . g$12280$RCJqu)
        (current-error-port . g$12279$RCJqu)
        (current-output-port . g$12278$RCJqu)
        (current-input-port . g$12277$RCJqu)
        (output-port? . g$12276$RCJqu)
        (input-port? . g$12275$RCJqu)
        (utf-8-codec . g$12274$RCJqu)
        (utf-16-codec . g$12273$RCJqu)
        (transcoder-error-handling-mode . g$12272$RCJqu)
        (transcoder-eol-style . g$12271$RCJqu)
        (transcoder-codec . g$12270$RCJqu)
        (transcoded-port . g$12269$RCJqu)
        (textual-port? . g$12268$RCJqu)
        (string->bytevector . g$12267$RCJqu)
        (standard-output-port . g$12266$RCJqu)
        (standard-input-port . g$12265$RCJqu)
        (standard-error-port . g$12264$RCJqu)
        (set-port-position! . g$12263$RCJqu)
        (put-u8 . g$12262$RCJqu)
        (put-string . g$12261$RCJqu)
        (put-datum . g$12260$RCJqu)
        (put-char . g$12259$RCJqu)
        (put-bytevector . g$12258$RCJqu)
        (port? . g$12257$RCJqu)
        (port-transcoder . g$12256$RCJqu)
        (port-position . g$12255$RCJqu)
        (port-has-set-port-position!? . g$12254$RCJqu)
        (port-has-port-position? . g$12253$RCJqu)
        (port-eof? . g$12252$RCJqu)
        (output-port-buffer-mode . g$12251$RCJqu)
        (open-string-output-port . g$7515$RCJqu)
        (open-string-input-port . g$12250$RCJqu)
        (open-file-output-port . g$12249$RCJqu)
        (open-file-input/output-port . g$12248$RCJqu)
        (open-file-input-port . g$12247$RCJqu)
        (open-bytevector-output-port . g$12246$RCJqu)
        (open-bytevector-input-port . g$12245$RCJqu)
        (native-transcoder . g$12244$RCJqu)
        (native-eol-style . g$12243$RCJqu)
        (make-transcoder . g$12242$RCJqu)
        (latin-1-codec . g$12241$RCJqu)
        (make-i/o-write-error . g$7372$RCJqu)
        (make-i/o-read-error . g$7358$RCJqu)
        (make-i/o-port-error . g$7477$RCJqu)
        (make-i/o-invalid-position-error . g$7387$RCJqu)
        (make-i/o-filename-error . g$7404$RCJqu)
        (make-i/o-file-protection-error . g$7420$RCJqu)
        (make-i/o-file-is-read-only-error . g$7434$RCJqu)
        (make-i/o-file-does-not-exist-error . g$7462$RCJqu)
        (make-i/o-file-already-exists-error . g$7448$RCJqu)
        (make-i/o-error . g$7344$RCJqu)
        (make-i/o-encoding-error . g$7508$RCJqu)
        (make-i/o-decoding-error . g$7493$RCJqu)
        (make-custom-textual-output-port . g$12240$RCJqu)
        (make-custom-textual-input/output-port . g$12239$RCJqu)
        (make-custom-textual-input-port . g$12238$RCJqu)
        (make-custom-binary-output-port . g$12237$RCJqu)
        (make-custom-binary-input/output-port . g$12236$RCJqu)
        (make-custom-binary-input-port . g$12235$RCJqu)
        (lookahead-u8 . g$12233$RCJqu)
        (lookahead-char . g$12232$RCJqu)
        (i/o-write-error? . g$7373$RCJqu)
        (i/o-read-error? . g$7359$RCJqu)
        (i/o-port-error? . g$7479$RCJqu)
        (i/o-invalid-position-error? . g$7389$RCJqu)
        (i/o-filename-error? . g$7406$RCJqu)
        (i/o-file-protection-error? . g$7421$RCJqu)
        (i/o-file-is-read-only-error? . g$7435$RCJqu)
        (i/o-file-does-not-exist-error? . g$7463$RCJqu)
        (i/o-file-already-exists-error? . g$7449$RCJqu)
        (i/o-error? . g$7345$RCJqu)
        (i/o-error-port . g$7480$RCJqu)
        (i/o-error-filename . g$7407$RCJqu)
        (i/o-encoding-error? . g$7510$RCJqu)
        (i/o-encoding-error-char . g$7511$RCJqu)
        (i/o-decoding-error? . g$7494$RCJqu)
        (get-u8 . g$12231$RCJqu)
        (get-string-n! . g$12230$RCJqu)
        (get-string-n . g$12229$RCJqu)
        (get-string-all . g$12228$RCJqu)
        (get-line . g$12227$RCJqu)
        (get-datum . g$12226$RCJqu)
        (get-char . g$12225$RCJqu)
        (get-bytevector-some . g$12224$RCJqu)
        (get-bytevector-n! . g$12223$RCJqu)
        (get-bytevector-n . g$12222$RCJqu)
        (get-bytevector-all . g$12221$RCJqu)
        (flush-output-port . g$12220$RCJqu)
        (close-port . g$12219$RCJqu)
        (call-with-string-output-port . g$12218$RCJqu)
        (call-with-port . g$12217$RCJqu)
        (call-with-bytevector-output-port . g$12216$RCJqu)
        (bytevector->string . g$12215$RCJqu)
        (buffer-mode? . g$12214$RCJqu)
        (binary-port? . g$12213$RCJqu)
        (&i/o-encoding . g$11896$RCJqu)
        (&i/o-decoding . g$11895$RCJqu)
        (&i/o-port . g$11894$RCJqu)
        (&i/o-file-does-not-exist . g$11893$RCJqu)
        (&i/o-file-already-exists . g$11892$RCJqu)
        (&i/o-file-is-read-only . g$11891$RCJqu)
        (&i/o-file-protection . g$11890$RCJqu)
        (&i/o-filename . g$11889$RCJqu)
        (&i/o-invalid-position . g$11888$RCJqu)
        (&i/o-write . g$11887$RCJqu)
        (&i/o-read . g$11886$RCJqu)
        (&i/o . g$11885$RCJqu)
        (error-handling-mode . g$11857$RCJqu)
        (file-options . g$11856$RCJqu)
        (buffer-mode . g$11855$RCJqu)
        (eol-style . g$11854$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12481$RCJqu
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$12198$RCJqu)
        (enum-set=? . g$12197$RCJqu)
        (enum-set-universe . g$12196$RCJqu)
        (enum-set-union . g$12195$RCJqu)
        (enum-set-subset? . g$12194$RCJqu)
        (enum-set-projection . g$12193$RCJqu)
        (enum-set-member? . g$12192$RCJqu)
        (enum-set-intersection . g$12191$RCJqu)
        (enum-set-indexer . g$12190$RCJqu)
        (enum-set-difference . g$12189$RCJqu)
        (enum-set-constructor . g$12188$RCJqu)
        (enum-set-complement . g$12187$RCJqu)
        (enum-set->list . g$12186$RCJqu)
        (define-enumeration . g$11868$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12482$RCJqu
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7022$RCJqu)
        (warning? . g$6933$RCJqu)
        (violation? . g$6975$RCJqu)
        (undefined-violation? . g$7099$RCJqu)
        (syntax-violation? . g$7083$RCJqu)
        (syntax-violation-subform . g$7085$RCJqu)
        (syntax-violation-form . g$7084$RCJqu)
        (syntax-violation . g$8826$RCJqu)
        (simple-conditions . g$12185$RCJqu)
        (serious-condition? . g$6947$RCJqu)
        (non-continuable-violation? . g$7037$RCJqu)
        (message-condition? . g$6918$RCJqu)
        (make-who-condition . g$7020$RCJqu)
        (make-warning . g$6932$RCJqu)
        (make-violation . g$6974$RCJqu)
        (make-undefined-violation . g$7098$RCJqu)
        (make-syntax-violation . g$7080$RCJqu)
        (make-serious-condition . g$6946$RCJqu)
        (make-non-continuable-violation . g$7036$RCJqu)
        (make-message-condition . g$6916$RCJqu)
        (make-lexical-violation . g$7064$RCJqu)
        (make-irritants-condition . g$7003$RCJqu)
        (make-implementation-restriction-violation . g$7050$RCJqu)
        (make-error . g$6960$RCJqu)
        (make-assertion-violation . g$6988$RCJqu)
        (lexical-violation? . g$7065$RCJqu)
        (irritants-condition? . g$7005$RCJqu)
        (implementation-restriction-violation? . g$7051$RCJqu)
        (error? . g$6961$RCJqu)
        (condition-who . g$7023$RCJqu)
        (condition-predicate . g$12184$RCJqu)
        (condition-message . g$6919$RCJqu)
        (condition-irritants . g$7006$RCJqu)
        (condition-accessor . g$12183$RCJqu)
        (condition . g$12182$RCJqu)
        (assertion-violation? . g$6989$RCJqu)
        (condition? . g$12181$RCJqu)
        (&non-continuable . g$11884$RCJqu)
        (&undefined . g$11883$RCJqu)
        (&syntax . g$11882$RCJqu)
        (&lexical . g$11881$RCJqu)
        (&implementation-restriction . g$11880$RCJqu)
        (&who . g$11878$RCJqu)
        (&irritants . g$11877$RCJqu)
        (&assertion . g$11876$RCJqu)
        (&violation . g$11875$RCJqu)
        (&error . g$11874$RCJqu)
        (&serious . g$11873$RCJqu)
        (&warning . g$11872$RCJqu)
        (&message . g$11871$RCJqu)
        (&condition . g$11870$RCJqu)
        (define-condition-type . g$11869$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12483$RCJqu
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12320$RCJqu)
        (record-type-uid . g$12319$RCJqu)
        (record-type-sealed? . g$12318$RCJqu)
        (record-type-parent . g$12317$RCJqu)
        (record-type-opaque? . g$12316$RCJqu)
        (record-type-name . g$12315$RCJqu)
        (record-type-generative? . g$12314$RCJqu)
        (record-type-field-names . g$12313$RCJqu)
        (record-rtd . g$12312$RCJqu)
        (record-field-mutable? . g$12311$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12484$RCJqu
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12327$RCJqu)
        (record-predicate . g$12326$RCJqu)
        (record-mutator . g$12325$RCJqu)
        (record-constructor . g$12324$RCJqu)
        (record-accessor . g$12323$RCJqu)
        (make-record-type-descriptor . g$12322$RCJqu)
        (make-record-constructor-descriptor . g$12321$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12485$RCJqu
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11867$RCJqu)
        (parent-rtd . g$11866$RCJqu)
        (nongenerative . g$11865$RCJqu)
        (opaque . g$11864$RCJqu)
        (sealed . g$11863$RCJqu)
        (protocol . g$11862$RCJqu)
        (parent . g$11861$RCJqu)
        (immutable . g$11860$RCJqu)
        (mutable . g$11859$RCJqu)
        (fields . g$11858$RCJqu)
        (record-constructor-descriptor . g$11819$RCJqu)
        (record-type-descriptor . g$11818$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7397$RCJqu
      'g$12486$RCJqu
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8704$RCJqu)
        (&no-nans-rcd . g$12450$RCJqu)
        (&no-nans-rtd . g$12449$RCJqu)
        (&no-infinities-rcd . g$12448$RCJqu)
        (&no-infinities-rtd . g$12447$RCJqu)
        (&i/o-encoding-rcd . g$12446$RCJqu)
        (&i/o-encoding-rtd . g$12445$RCJqu)
        (&i/o-decoding-rcd . g$12444$RCJqu)
        (&i/o-decoding-rtd . g$12443$RCJqu)
        (&i/o-port-rcd . g$12442$RCJqu)
        (&i/o-port-rtd . g$12441$RCJqu)
        (&i/o-file-does-not-exist-rcd . g$12440$RCJqu)
        (&i/o-file-does-not-exist-rtd . g$12439$RCJqu)
        (&i/o-file-already-exists-rcd . g$12438$RCJqu)
        (&i/o-file-already-exists-rtd . g$12437$RCJqu)
        (&i/o-fie-is-read-only-rcd . g$12436$RCJqu)
        (&i/o-fie-is-read-only-rtd . g$12435$RCJqu)
        (&i/o-file-protection-rcd . g$12434$RCJqu)
        (&i/o-file-protection-rtd . g$12433$RCJqu)
        (&i/o-filename-rcd . g$12432$RCJqu)
        (&i/o-filename-rtd . g$12431$RCJqu)
        (&i/o-invalid-position-rcd . g$12430$RCJqu)
        (&i/o-invalid-position-rtd . g$12429$RCJqu)
        (&i/o-write-rcd . g$12428$RCJqu)
        (&i/o-write-rtd . g$12427$RCJqu)
        (&i/o-read-rcd . g$12426$RCJqu)
        (&i/o-read-rtd . g$12425$RCJqu)
        (&i/o-rcd . g$12424$RCJqu)
        (&i/o-rtd . g$12423$RCJqu)
        (&undefined-rcd . g$12422$RCJqu)
        (&undefined-rtd . g$12421$RCJqu)
        (&syntax-rcd . g$12420$RCJqu)
        (&syntax-rtd . g$12419$RCJqu)
        (&lexical-rcd . g$12418$RCJqu)
        (&lexical-rtd . g$12417$RCJqu)
        (&implementation-restriction-rcd . g$12416$RCJqu)
        (&implementation-restriction-rtd . g$12415$RCJqu)
        (&non-continuable-rcd . g$12414$RCJqu)
        (&non-continuable-rtd . g$12413$RCJqu)
        (&who-rcd . g$12412$RCJqu)
        (&who-rtd . g$12411$RCJqu)
        (&irritants-rcd . g$12410$RCJqu)
        (&irritants-rtd . g$12409$RCJqu)
        (&assertion-rcd . g$12408$RCJqu)
        (&assertion-rtd . g$12407$RCJqu)
        (&violation-rcd . g$12406$RCJqu)
        (&violation-rtd . g$12405$RCJqu)
        (&error-rcd . g$12404$RCJqu)
        (&error-rtd . g$12403$RCJqu)
        (&serious-rcd . g$12402$RCJqu)
        (&serious-rtd . g$12401$RCJqu)
        (&warning-rcd . g$12400$RCJqu)
        (&warning-rtd . g$12399$RCJqu)
        (&message-rcd . g$12398$RCJqu)
        (&message-rtd . g$12397$RCJqu)
        (&condition-rcd . g$12396$RCJqu)
        (&condition-rtd . g$12395$RCJqu)
        (library-letrec* . g$12394$RCJqu)
        (annotation-stripped . g$12393$RCJqu)
        (annotation-source . g$12392$RCJqu)
        (annotation-expression . g$12391$RCJqu)
        (annotation? . g$12390$RCJqu)
        (read-annotated . g$12389$RCJqu)
        (tanh . g$12388$RCJqu)
        (cosh . g$12387$RCJqu)
        (sinh . g$12386$RCJqu)
        (make-guid . g$12385$RCJqu)
        (unspecified? . g$12384$RCJqu)
        (make-trace . g$12383$RCJqu)
        (make-list . g$12382$RCJqu)
        (last-pair . g$12381$RCJqu)
        (load-r5rs . g$12380$RCJqu)
        (license . g$12379$RCJqu)
        (stacktrace . g$12378$RCJqu)
        (ironscheme-build . g$11764$RCJqu)
        (define-clr-class-internal . g$12377$RCJqu)
        (clr-field-set!-internal . g$12376$RCJqu)
        (clr-field-get-internal . g$12375$RCJqu)
        (clr-cast-internal . g$12374$RCJqu)
        (clr-call-internal . g$12373$RCJqu)
        (clr-new-internal . g$12372$RCJqu)
        (clr-new-array-internal . g$12371$RCJqu)
        (clr-is-internal . g$12370$RCJqu)
        (clr-reference-internal . g$12369$RCJqu)
        (clr-using-internal . g$12368$RCJqu)
        (clr-clear-usings-internal . g$12367$RCJqu)
        (syntax-error . g$8823$RCJqu)
        (syntax-dispatch . g$8699$RCJqu)
        (compile-core . g$12366$RCJqu)
        (eval-core . g$12365$RCJqu)
        (set-symbol-value! . g$12364$RCJqu)
        (symbol-value . g$12363$RCJqu)
        (ungensym . g$12362$RCJqu)
        (gensym . g$12361$RCJqu)
        (void . g$12360$RCJqu)
        (load-serialized-library . g$12359$RCJqu)
        (serialize-library . g$12358$RCJqu)
        (compile-system-libraries . g$11766$RCJqu)
        (compile->closure . g$11768$RCJqu)
        (compile . g$11767$RCJqu)
        (load . g$11763$RCJqu)
        (interaction-environment . g$8832$RCJqu)
        (char-ready? . g$12357$RCJqu)
        (string-upcase . g$12356$RCJqu)
        (string-titlecase . g$12355$RCJqu)
        (string-normalize-nfkd . g$12354$RCJqu)
        (string-normalize-nfkc . g$12353$RCJqu)
        (string-normalize-nfd . g$12352$RCJqu)
        (string-normalize-nfc . g$12351$RCJqu)
        (string-foldcase . g$12350$RCJqu)
        (string-downcase . g$12349$RCJqu)
        (string-ci>? . g$12348$RCJqu)
        (string-ci>=? . g$12347$RCJqu)
        (string-ci=? . g$12346$RCJqu)
        (string-ci<? . g$12345$RCJqu)
        (string-ci<=? . g$12344$RCJqu)
        (char-whitespace? . g$12343$RCJqu)
        (char-upper-case? . g$12342$RCJqu)
        (char-title-case? . g$12341$RCJqu)
        (char-numeric? . g$12340$RCJqu)
        (char-lower-case? . g$12339$RCJqu)
        (char-general-category . g$12338$RCJqu)
        (char-upcase . g$12337$RCJqu)
        (char-titlecase . g$12336$RCJqu)
        (char-foldcase . g$12335$RCJqu)
        (char-downcase . g$12334$RCJqu)
        (char-ci>? . g$12333$RCJqu)
        (char-ci>=? . g$12332$RCJqu)
        (char-ci=? . g$12331$RCJqu)
        (char-ci<? . g$12330$RCJqu)
        (char-ci<=? . g$12329$RCJqu)
        (char-alphabetic? . g$12328$RCJqu)
        (variable-transformer-procedure . g$8436$RCJqu)
        (variable-transformer? . g$8435$RCJqu)
        (make-variable-transformer . g$8434$RCJqu)
        (identifier? . g$8827$RCJqu)
        (generate-temporaries . g$8819$RCJqu)
        (free-identifier=? . g$8820$RCJqu)
        (syntax->datum . g$8829$RCJqu)
        (datum->syntax . g$8828$RCJqu)
        (bound-identifier=? . g$8821$RCJqu)
        (record-type-descriptor? . g$12327$RCJqu)
        (record-predicate . g$12326$RCJqu)
        (record-mutator . g$12325$RCJqu)
        (record-constructor . g$12324$RCJqu)
        (record-accessor . g$12323$RCJqu)
        (make-record-type-descriptor . g$12322$RCJqu)
        (make-record-constructor-descriptor . g$12321$RCJqu)
        (record? . g$12320$RCJqu)
        (record-type-uid . g$12319$RCJqu)
        (record-type-sealed? . g$12318$RCJqu)
        (record-type-parent . g$12317$RCJqu)
        (record-type-opaque? . g$12316$RCJqu)
        (record-type-name . g$12315$RCJqu)
        (record-type-generative? . g$12314$RCJqu)
        (record-type-field-names . g$12313$RCJqu)
        (record-rtd . g$12312$RCJqu)
        (record-field-mutable? . g$12311$RCJqu)
        (delete-file . g$6617$RCJqu)
        (file-exists? . g$6616$RCJqu)
        (vector-sort! . g$12310$RCJqu)
        (vector-sort . g$12309$RCJqu)
        (list-sort . g$7124$RCJqu)
        (symbol-hash . g$12308$RCJqu)
        (string-ci-hash . g$12307$RCJqu)
        (string-hash . g$12306$RCJqu)
        (equal-hash . g$12305$RCJqu)
        (hashtable-equivalence-function . g$12304$RCJqu)
        (make-hashtable . g$12303$RCJqu)
        (hashtable-hash-function . g$12302$RCJqu)
        (make-eqv-hashtable . g$6584$RCJqu)
        (make-eq-hashtable . g$6583$RCJqu)
        (hashtable? . g$12301$RCJqu)
        (hashtable-update! . g$6590$RCJqu)
        (hashtable-size . g$6585$RCJqu)
        (hashtable-set! . g$6587$RCJqu)
        (hashtable-ref . g$6586$RCJqu)
        (hashtable-mutable? . g$12300$RCJqu)
        (hashtable-keys . g$12299$RCJqu)
        (hashtable-entries . g$12298$RCJqu)
        (hashtable-delete! . g$6588$RCJqu)
        (hashtable-copy . g$12297$RCJqu)
        (hashtable-contains? . g$6589$RCJqu)
        (hashtable-clear! . g$6591$RCJqu)
        (call-with-output-file . g$12296$RCJqu)
        (call-with-input-file . g$12295$RCJqu)
        (write-char . g$12294$RCJqu)
        (write . g$12293$RCJqu)
        (with-output-to-file . g$12292$RCJqu)
        (with-input-from-file . g$12291$RCJqu)
        (read-char . g$12290$RCJqu)
        (read . g$12289$RCJqu)
        (peek-char . g$12288$RCJqu)
        (open-output-file . g$12287$RCJqu)
        (open-input-file . g$12286$RCJqu)
        (newline . g$12285$RCJqu)
        (display . g$12284$RCJqu)
        (close-output-port . g$12283$RCJqu)
        (close-input-port . g$12282$RCJqu)
        (eof-object? . g$12281$RCJqu)
        (eof-object . g$12280$RCJqu)
        (current-error-port . g$12279$RCJqu)
        (current-output-port . g$12278$RCJqu)
        (current-input-port . g$12277$RCJqu)
        (output-port? . g$12276$RCJqu)
        (input-port? . g$12275$RCJqu)
        (utf-8-codec . g$12274$RCJqu)
        (utf-16-codec . g$12273$RCJqu)
        (transcoder-error-handling-mode . g$12272$RCJqu)
        (transcoder-eol-style . g$12271$RCJqu)
        (transcoder-codec . g$12270$RCJqu)
        (transcoded-port . g$12269$RCJqu)
        (textual-port? . g$12268$RCJqu)
        (string->bytevector . g$12267$RCJqu)
        (standard-output-port . g$12266$RCJqu)
        (standard-input-port . g$12265$RCJqu)
        (standard-error-port . g$12264$RCJqu)
        (set-port-position! . g$12263$RCJqu)
        (put-u8 . g$12262$RCJqu)
        (put-string . g$12261$RCJqu)
        (put-datum . g$12260$RCJqu)
        (put-char . g$12259$RCJqu)
        (put-bytevector . g$12258$RCJqu)
        (port? . g$12257$RCJqu)
        (port-transcoder . g$12256$RCJqu)
        (port-position . g$12255$RCJqu)
        (port-has-set-port-position!? . g$12254$RCJqu)
        (port-has-port-position? . g$12253$RCJqu)
        (port-eof? . g$12252$RCJqu)
        (output-port-buffer-mode . g$12251$RCJqu)
        (open-string-output-port . g$7515$RCJqu)
        (open-string-input-port . g$12250$RCJqu)
        (open-file-output-port . g$12249$RCJqu)
        (open-file-input/output-port . g$12248$RCJqu)
        (open-file-input-port . g$12247$RCJqu)
        (open-bytevector-output-port . g$12246$RCJqu)
        (open-bytevector-input-port . g$12245$RCJqu)
        (native-transcoder . g$12244$RCJqu)
        (native-eol-style . g$12243$RCJqu)
        (make-transcoder . g$12242$RCJqu)
        (latin-1-codec . g$12241$RCJqu)
        (make-i/o-write-error . g$7372$RCJqu)
        (make-i/o-read-error . g$7358$RCJqu)
        (make-i/o-port-error . g$7477$RCJqu)
        (make-i/o-invalid-position-error . g$7387$RCJqu)
        (make-i/o-filename-error . g$7404$RCJqu)
        (make-i/o-file-protection-error . g$7420$RCJqu)
        (make-i/o-file-is-read-only-error . g$7434$RCJqu)
        (make-i/o-file-does-not-exist-error . g$7462$RCJqu)
        (make-i/o-file-already-exists-error . g$7448$RCJqu)
        (make-i/o-error . g$7344$RCJqu)
        (make-i/o-encoding-error . g$7508$RCJqu)
        (make-i/o-decoding-error . g$7493$RCJqu)
        (make-custom-textual-output-port . g$12240$RCJqu)
        (make-custom-textual-input/output-port . g$12239$RCJqu)
        (make-custom-textual-input-port . g$12238$RCJqu)
        (make-custom-binary-output-port . g$12237$RCJqu)
        (make-custom-binary-input/output-port . g$12236$RCJqu)
        (make-custom-binary-input-port . g$12235$RCJqu)
        (make-bytevector . g$12234$RCJqu)
        (lookahead-u8 . g$12233$RCJqu)
        (lookahead-char . g$12232$RCJqu)
        (i/o-write-error? . g$7373$RCJqu)
        (i/o-read-error? . g$7359$RCJqu)
        (i/o-port-error? . g$7479$RCJqu)
        (i/o-invalid-position-error? . g$7389$RCJqu)
        (i/o-filename-error? . g$7406$RCJqu)
        (i/o-file-protection-error? . g$7421$RCJqu)
        (i/o-file-is-read-only-error? . g$7435$RCJqu)
        (i/o-file-does-not-exist-error? . g$7463$RCJqu)
        (i/o-file-already-exists-error? . g$7449$RCJqu)
        (i/o-error? . g$7345$RCJqu)
        (i/o-error-port . g$7480$RCJqu)
        (i/o-error-filename . g$7407$RCJqu)
        (i/o-encoding-error? . g$7510$RCJqu)
        (i/o-encoding-error-char . g$7511$RCJqu)
        (i/o-decoding-error? . g$7494$RCJqu)
        (get-u8 . g$12231$RCJqu)
        (get-string-n! . g$12230$RCJqu)
        (get-string-n . g$12229$RCJqu)
        (get-string-all . g$12228$RCJqu)
        (get-line . g$12227$RCJqu)
        (get-datum . g$12226$RCJqu)
        (get-char . g$12225$RCJqu)
        (get-bytevector-some . g$12224$RCJqu)
        (get-bytevector-n! . g$12223$RCJqu)
        (get-bytevector-n . g$12222$RCJqu)
        (get-bytevector-all . g$12221$RCJqu)
        (flush-output-port . g$12220$RCJqu)
        (close-port . g$12219$RCJqu)
        (call-with-string-output-port . g$12218$RCJqu)
        (call-with-port . g$12217$RCJqu)
        (call-with-bytevector-output-port . g$12216$RCJqu)
        (bytevector->string . g$12215$RCJqu)
        (buffer-mode? . g$12214$RCJqu)
        (binary-port? . g$12213$RCJqu)
        (scheme-report-environment . g$8810$RCJqu)
        (quotient . g$7111$RCJqu)
        (null-environment . g$8809$RCJqu)
        (remainder . g$7112$RCJqu)
        (modulo . g$7113$RCJqu)
        (inexact->exact . g$12212$RCJqu)
        (force . g$12211$RCJqu)
        (exact->inexact . g$12210$RCJqu)
        (exit . g$12209$RCJqu)
        (command-line . g$11760$RCJqu)
        (string-fill! . g$12208$RCJqu)
        (string-set! . g$12207$RCJqu)
        (set-cdr! . g$12206$RCJqu)
        (set-car! . g$12205$RCJqu)
        (remove . g$6697$RCJqu)
        (remv . g$6698$RCJqu)
        (remp . g$6683$RCJqu)
        (remq . g$6699$RCJqu)
        (partition . g$6682$RCJqu)
        (memv . g$12204$RCJqu)
        (memq . g$12203$RCJqu)
        (memp . g$6689$RCJqu)
        (member . g$6688$RCJqu)
        (exists . g$6693$RCJqu)
        (for-all . g$6692$RCJqu)
        (fold-right . g$6696$RCJqu)
        (fold-left . g$6695$RCJqu)
        (find . g$6681$RCJqu)
        (filter . g$6684$RCJqu)
        (cons* . g$6694$RCJqu)
        (assv . g$6685$RCJqu)
        (assq . g$12202$RCJqu)
        (assp . g$6687$RCJqu)
        (assoc . g$6686$RCJqu)
        (with-exception-handler . g$12201$RCJqu)
        (raise-continuable . g$12200$RCJqu)
        (raise . g$12199$RCJqu)
        (eval . g$8812$RCJqu)
        (environment . g$8808$RCJqu)
        (make-enumeration . g$12198$RCJqu)
        (enum-set=? . g$12197$RCJqu)
        (enum-set-universe . g$12196$RCJqu)
        (enum-set-union . g$12195$RCJqu)
        (enum-set-subset? . g$12194$RCJqu)
        (enum-set-projection . g$12193$RCJqu)
        (enum-set-member? . g$12192$RCJqu)
        (enum-set-intersection . g$12191$RCJqu)
        (enum-set-indexer . g$12190$RCJqu)
        (enum-set-difference . g$12189$RCJqu)
        (enum-set-constructor . g$12188$RCJqu)
        (enum-set-complement . g$12187$RCJqu)
        (enum-set->list . g$12186$RCJqu)
        (who-condition? . g$7022$RCJqu)
        (warning? . g$6933$RCJqu)
        (violation? . g$6975$RCJqu)
        (undefined-violation? . g$7099$RCJqu)
        (syntax-violation? . g$7083$RCJqu)
        (syntax-violation-subform . g$7085$RCJqu)
        (syntax-violation-form . g$7084$RCJqu)
        (syntax-violation . g$8826$RCJqu)
        (simple-conditions . g$12185$RCJqu)
        (serious-condition? . g$6947$RCJqu)
        (non-continuable-violation? . g$7037$RCJqu)
        (message-condition? . g$6918$RCJqu)
        (make-who-condition . g$7020$RCJqu)
        (make-warning . g$6932$RCJqu)
        (make-violation . g$6974$RCJqu)
        (make-undefined-violation . g$7098$RCJqu)
        (make-syntax-violation . g$7080$RCJqu)
        (make-serious-condition . g$6946$RCJqu)
        (make-non-continuable-violation . g$7036$RCJqu)
        (make-message-condition . g$6916$RCJqu)
        (make-lexical-violation . g$7064$RCJqu)
        (make-irritants-condition . g$7003$RCJqu)
        (make-implementation-restriction-violation . g$7050$RCJqu)
        (make-error . g$6960$RCJqu)
        (make-assertion-violation . g$6988$RCJqu)
        (lexical-violation? . g$7065$RCJqu)
        (irritants-condition? . g$7005$RCJqu)
        (implementation-restriction-violation? . g$7051$RCJqu)
        (error? . g$6961$RCJqu)
        (condition-who . g$7023$RCJqu)
        (condition-predicate . g$12184$RCJqu)
        (condition-message . g$6919$RCJqu)
        (condition-irritants . g$7006$RCJqu)
        (condition-accessor . g$12183$RCJqu)
        (condition . g$12182$RCJqu)
        (assertion-violation? . g$6989$RCJqu)
        (condition? . g$12181$RCJqu)
        (utf32->string . g$12180$RCJqu)
        (utf16->string . g$12179$RCJqu)
        (utf8->string . g$12178$RCJqu)
        (uint-list->bytevector . g$12177$RCJqu)
        (u8-list->bytevector . g$12176$RCJqu)
        (string->utf8 . g$12175$RCJqu)
        (string->utf32 . g$12174$RCJqu)
        (string->utf16 . g$12173$RCJqu)
        (sint-list->bytevector . g$12172$RCJqu)
        (native-endianness . g$6773$RCJqu)
        (bytevector? . g$12171$RCJqu)
        (bytevector=? . g$12170$RCJqu)
        (bytevector-uint-set! . g$12169$RCJqu)
        (bytevector-uint-ref . g$12168$RCJqu)
        (bytevector-u8-set! . g$12167$RCJqu)
        (bytevector-u8-ref . g$12166$RCJqu)
        (bytevector-u64-set! . g$6794$RCJqu)
        (bytevector-u64-ref . g$6790$RCJqu)
        (bytevector-u64-native-set! . g$6796$RCJqu)
        (bytevector-u64-native-ref . g$6792$RCJqu)
        (bytevector-u32-set! . g$6786$RCJqu)
        (bytevector-u32-ref . g$6782$RCJqu)
        (bytevector-u32-native-set! . g$6788$RCJqu)
        (bytevector-u32-native-ref . g$6784$RCJqu)
        (bytevector-u16-set! . g$6778$RCJqu)
        (bytevector-u16-ref . g$6774$RCJqu)
        (bytevector-u16-native-set! . g$6780$RCJqu)
        (bytevector-u16-native-ref . g$6776$RCJqu)
        (bytevector-sint-set! . g$12165$RCJqu)
        (bytevector-sint-ref . g$12164$RCJqu)
        (bytevector-s8-set! . g$12163$RCJqu)
        (bytevector-s8-ref . g$12162$RCJqu)
        (bytevector-s64-set! . g$6795$RCJqu)
        (bytevector-s64-ref . g$6791$RCJqu)
        (bytevector-s64-native-set! . g$6797$RCJqu)
        (bytevector-s64-native-ref . g$6793$RCJqu)
        (bytevector-s32-set! . g$6787$RCJqu)
        (bytevector-s32-ref . g$6783$RCJqu)
        (bytevector-s32-native-set! . g$6789$RCJqu)
        (bytevector-s32-native-ref . g$6785$RCJqu)
        (bytevector-s16-set! . g$6779$RCJqu)
        (bytevector-s16-ref . g$6775$RCJqu)
        (bytevector-s16-native-set! . g$6781$RCJqu)
        (bytevector-s16-native-ref . g$6777$RCJqu)
        (bytevector-length . g$12161$RCJqu)
        (bytevector-ieee-single-set! . g$12160$RCJqu)
        (bytevector-ieee-single-ref . g$12159$RCJqu)
        (bytevector-ieee-single-native-set! . g$6800$RCJqu)
        (bytevector-ieee-single-native-ref . g$6798$RCJqu)
        (bytevector-ieee-double-set! . g$12158$RCJqu)
        (bytevector-ieee-double-ref . g$12157$RCJqu)
        (bytevector-ieee-double-native-set! . g$6801$RCJqu)
        (bytevector-ieee-double-native-ref . g$6799$RCJqu)
        (bytevector-fill! . g$12156$RCJqu)
        (bytevector-copy! . g$12155$RCJqu)
        (bytevector-copy . g$12154$RCJqu)
        (bytevector->uint-list . g$12153$RCJqu)
        (bytevector->u8-list . g$12152$RCJqu)
        (bytevector->sint-list . g$12151$RCJqu)
        (no-nans-violation? . g$7330$RCJqu)
        (no-infinities-violation? . g$7316$RCJqu)
        (make-no-nans-violation . g$7329$RCJqu)
        (make-no-infinities-violation . g$7315$RCJqu)
        (real->flonum . g$12150$RCJqu)
        (flzero? . g$12149$RCJqu)
        (fltruncate . g$12148$RCJqu)
        (fltan . g$12147$RCJqu)
        (flsqrt . g$12146$RCJqu)
        (flsin . g$12145$RCJqu)
        (flround . g$12144$RCJqu)
        (flpositive? . g$12143$RCJqu)
        (flonum? . g$12142$RCJqu)
        (flodd? . g$12141$RCJqu)
        (flnumerator . g$12140$RCJqu)
        (flnegative? . g$12139$RCJqu)
        (flnan? . g$12138$RCJqu)
        (flmod0 . g$12137$RCJqu)
        (flmod . g$12136$RCJqu)
        (flmin . g$12135$RCJqu)
        (flmax . g$12134$RCJqu)
        (fllog . g$12133$RCJqu)
        (flinteger? . g$12132$RCJqu)
        (flinfinite? . g$12131$RCJqu)
        (flfloor . g$12130$RCJqu)
        (flfinite? . g$12129$RCJqu)
        (flexpt . g$12128$RCJqu)
        (flexp . g$12127$RCJqu)
        (fleven? . g$12126$RCJqu)
        (fldiv0-and-mod0 . g$12125$RCJqu)
        (fldiv0 . g$12124$RCJqu)
        (fldiv-and-mod . g$12123$RCJqu)
        (fldiv . g$12122$RCJqu)
        (fldenominator . g$12121$RCJqu)
        (flcos . g$12120$RCJqu)
        (flceiling . g$12119$RCJqu)
        (flatan . g$12118$RCJqu)
        (flasin . g$12117$RCJqu)
        (flacos . g$12116$RCJqu)
        (flabs . g$12115$RCJqu)
        (fl>? . g$12114$RCJqu)
        (fl>=? . g$12113$RCJqu)
        (fl=? . g$12112$RCJqu)
        (fl<? . g$12111$RCJqu)
        (fl<=? . g$12110$RCJqu)
        (fl/ . g$12109$RCJqu)
        (fl- . g$12108$RCJqu)
        (fl+ . g$12107$RCJqu)
        (fl* . g$12106$RCJqu)
        (fixnum->flonum . g$12105$RCJqu)
        (fxzero? . g$12104$RCJqu)
        (fxxor . g$12103$RCJqu)
        (fxrotate-bit-field . g$7261$RCJqu)
        (fxreverse-bit-field . g$12102$RCJqu)
        (fxpositive? . g$12101$RCJqu)
        (fxodd? . g$12100$RCJqu)
        (fxnot . g$12099$RCJqu)
        (fxnegative? . g$12098$RCJqu)
        (fxmod0 . g$12097$RCJqu)
        (fxmod . g$12096$RCJqu)
        (fxmin . g$12095$RCJqu)
        (fxmax . g$12094$RCJqu)
        (fxlength . g$12093$RCJqu)
        (fxior . g$12092$RCJqu)
        (fxif . g$7255$RCJqu)
        (fxfirst-bit-set . g$12091$RCJqu)
        (fxeven? . g$12090$RCJqu)
        (fxdiv0-and-mod0 . g$12089$RCJqu)
        (fxdiv0 . g$12088$RCJqu)
        (fxdiv-and-mod . g$12087$RCJqu)
        (fxdiv . g$12086$RCJqu)
        (fxcopy-bit-field . g$7258$RCJqu)
        (fxcopy-bit . g$7256$RCJqu)
        (fxbit-set? . g$12085$RCJqu)
        (fxbit-field . g$7257$RCJqu)
        (fxbit-count . g$12084$RCJqu)
        (fxarithmetic-shift-right . g$7260$RCJqu)
        (fxarithmetic-shift-left . g$7259$RCJqu)
        (fxarithmetic-shift . g$12083$RCJqu)
        (fxand . g$12082$RCJqu)
        (fx>? . g$12081$RCJqu)
        (fx>=? . g$12080$RCJqu)
        (fx=? . g$12079$RCJqu)
        (fx<? . g$12078$RCJqu)
        (fx<=? . g$12077$RCJqu)
        (fx-/carry . g$12076$RCJqu)
        (fx- . g$12075$RCJqu)
        (fx+/carry . g$12074$RCJqu)
        (fx+ . g$12073$RCJqu)
        (fx*/carry . g$12072$RCJqu)
        (fx* . g$12071$RCJqu)
        (greatest-fixnum . g$12070$RCJqu)
        (least-fixnum . g$12069$RCJqu)
        (fixnum-width . g$12068$RCJqu)
        (fixnum? . g$12067$RCJqu)
        (bitwise-rotate-bit-field . g$7209$RCJqu)
        (bitwise-reverse-bit-field . g$7210$RCJqu)
        (bitwise-length . g$12066$RCJqu)
        (bitwise-if . g$7203$RCJqu)
        (bitwise-first-bit-set . g$12065$RCJqu)
        (bitwise-copy-bit-field . g$7206$RCJqu)
        (bitwise-copy-bit . g$7204$RCJqu)
        (bitwise-bit-set? . g$12064$RCJqu)
        (bitwise-bit-field . g$12063$RCJqu)
        (bitwise-bit-count . g$12062$RCJqu)
        (bitwise-xor . g$12061$RCJqu)
        (bitwise-ior . g$12060$RCJqu)
        (bitwise-and . g$12059$RCJqu)
        (bitwise-not . g$12058$RCJqu)
        (bitwise-arithmetic-shift-right . g$7208$RCJqu)
        (bitwise-arithmetic-shift-left . g$7207$RCJqu)
        (bitwise-arithmetic-shift . g$12057$RCJqu)
        (zero? . g$12056$RCJqu)
        (vector? . g$12055$RCJqu)
        (vector-set! . g$12054$RCJqu)
        (vector-ref . g$12053$RCJqu)
        (vector-map . g$12052$RCJqu)
        (vector-length . g$12051$RCJqu)
        (vector-for-each . g$12050$RCJqu)
        (vector-fill! . g$12049$RCJqu)
        (vector->list . g$12048$RCJqu)
        (vector . g$12047$RCJqu)
        (values . g$12046$RCJqu)
        (truncate . g$12045$RCJqu)
        (tan . g$12044$RCJqu)
        (symbol? . g$12043$RCJqu)
        (symbol=? . g$12042$RCJqu)
        (symbol->string . g$12041$RCJqu)
        (substring . g$12040$RCJqu)
        (string? . g$12039$RCJqu)
        (string>? . g$12038$RCJqu)
        (string>=? . g$12037$RCJqu)
        (string=? . g$12036$RCJqu)
        (string<? . g$12035$RCJqu)
        (string<=? . g$12034$RCJqu)
        (string-ref . g$12033$RCJqu)
        (string-length . g$12032$RCJqu)
        (string-for-each . g$12031$RCJqu)
        (string-copy . g$12030$RCJqu)
        (string-append . g$12029$RCJqu)
        (string->symbol . g$12028$RCJqu)
        (string->number . g$12027$RCJqu)
        (string->list . g$12026$RCJqu)
        (string . g$12025$RCJqu)
        (sqrt . g$12024$RCJqu)
        (sin . g$12023$RCJqu)
        (round . g$12022$RCJqu)
        (reverse . g$12021$RCJqu)
        (real? . g$12020$RCJqu)
        (real-valued? . g$12019$RCJqu)
        (real-part . g$12018$RCJqu)
        (rationalize . g$6234$RCJqu)
        (rational? . g$12017$RCJqu)
        (rational-valued? . g$12016$RCJqu)
        (procedure? . g$12015$RCJqu)
        (positive? . g$12014$RCJqu)
        (pair? . g$12013$RCJqu)
        (odd? . g$12012$RCJqu)
        (numerator . g$12011$RCJqu)
        (number? . g$12010$RCJqu)
        (number->string . g$12009$RCJqu)
        (null? . g$12008$RCJqu)
        (not . g$12007$RCJqu)
        (negative? . g$12006$RCJqu)
        (nan? . g$12005$RCJqu)
        (min . g$12004$RCJqu)
        (max . g$12003$RCJqu)
        (map . g$12002$RCJqu)
        (make-vector . g$12001$RCJqu)
        (make-string . g$12000$RCJqu)
        (make-rectangular . g$11999$RCJqu)
        (make-polar . g$11998$RCJqu)
        (magnitude . g$11997$RCJqu)
        (log . g$11996$RCJqu)
        (list? . g$11995$RCJqu)
        (list-tail . g$11994$RCJqu)
        (list-ref . g$11993$RCJqu)
        (list->vector . g$11992$RCJqu)
        (list->string . g$11991$RCJqu)
        (list . g$11990$RCJqu)
        (length . g$11989$RCJqu)
        (lcm . g$11988$RCJqu)
        (integer? . g$11987$RCJqu)
        (integer-valued? . g$11986$RCJqu)
        (integer->char . g$11985$RCJqu)
        (infinite? . g$11984$RCJqu)
        (inexact? . g$11983$RCJqu)
        (inexact . g$11982$RCJqu)
        (imag-part . g$11981$RCJqu)
        (gcd . g$11980$RCJqu)
        (for-each . g$11979$RCJqu)
        (floor . g$11978$RCJqu)
        (finite? . g$11977$RCJqu)
        (expt . g$11976$RCJqu)
        (exp . g$11975$RCJqu)
        (exact? . g$11974$RCJqu)
        (exact-integer-sqrt . g$11973$RCJqu)
        (exact . g$11972$RCJqu)
        (even? . g$11971$RCJqu)
        (error . g$11970$RCJqu)
        (eqv? . g$11969$RCJqu)
        (equal? . g$11968$RCJqu)
        (eq? . g$11967$RCJqu)
        (dynamic-wind . g$11966$RCJqu)
        (div0-and-mod0 . g$11965$RCJqu)
        (mod0 . g$11964$RCJqu)
        (div0 . g$11963$RCJqu)
        (div-and-mod . g$11962$RCJqu)
        (mod . g$11961$RCJqu)
        (div . g$11960$RCJqu)
        (denominator . g$11959$RCJqu)
        (cos . g$11958$RCJqu)
        (cons . g$11957$RCJqu)
        (complex? . g$11956$RCJqu)
        (char? . g$11955$RCJqu)
        (char>? . g$11954$RCJqu)
        (char>=? . g$11953$RCJqu)
        (char=? . g$11952$RCJqu)
        (char<? . g$11951$RCJqu)
        (char<=? . g$11950$RCJqu)
        (char->integer . g$11949$RCJqu)
        (ceiling . g$11948$RCJqu)
        (call-with-values . g$11947$RCJqu)
        (call/cc . g$11946$RCJqu)
        (call-with-current-continuation . g$11945$RCJqu)
        (cddddr . g$6233$RCJqu)
        (cdddar . g$6232$RCJqu)
        (cddadr . g$6231$RCJqu)
        (cddaar . g$6230$RCJqu)
        (cdaddr . g$6229$RCJqu)
        (cdadar . g$6228$RCJqu)
        (cdaadr . g$6227$RCJqu)
        (cdaaar . g$6226$RCJqu)
        (cadddr . g$6225$RCJqu)
        (caddar . g$6224$RCJqu)
        (cadadr . g$6223$RCJqu)
        (cadaar . g$6222$RCJqu)
        (caaddr . g$6221$RCJqu)
        (caadar . g$6220$RCJqu)
        (caaadr . g$6219$RCJqu)
        (caaaar . g$6218$RCJqu)
        (cdddr . g$6217$RCJqu)
        (cddar . g$6216$RCJqu)
        (cdadr . g$6215$RCJqu)
        (cdaar . g$6214$RCJqu)
        (caddr . g$6213$RCJqu)
        (cadar . g$6212$RCJqu)
        (caadr . g$6211$RCJqu)
        (caaar . g$6210$RCJqu)
        (cddr . g$6209$RCJqu)
        (cdar . g$6208$RCJqu)
        (cadr . g$6207$RCJqu)
        (caar . g$6206$RCJqu)
        (cdr . g$11944$RCJqu)
        (car . g$11943$RCJqu)
        (boolean? . g$11942$RCJqu)
        (boolean=? . g$11941$RCJqu)
        (atan . g$11940$RCJqu)
        (assertion-violation . g$11939$RCJqu)
        (asin . g$11938$RCJqu)
        (apply . g$11937$RCJqu)
        (append . g$11936$RCJqu)
        (angle . g$11935$RCJqu)
        (acos . g$11934$RCJqu)
        (abs . g$11933$RCJqu)
        (/ . g$11932$RCJqu)
        (* . g$11931$RCJqu)
        (- . g$11930$RCJqu)
        (+ . g$11929$RCJqu)
        (>= . g$11928$RCJqu)
        (> . g$11927$RCJqu)
        (= . g$11926$RCJqu)
        (<= . g$11925$RCJqu)
        (< . g$11924$RCJqu)
        (make-record-printer . g$11923$RCJqu)
        (eqv-hash . g$11922$RCJqu)
        (eq-hash . g$11921$RCJqu)
        (reverse! . g$11920$RCJqu)
        (load/args . g$11762$RCJqu)
        (printf . g$7524$RCJqu)
        (fprintf . g$7525$RCJqu)
        (format . g$7526$RCJqu)
        (get-arity . g$11919$RCJqu)
        (gc-collect . g$11918$RCJqu)
        (clr-type? . g$11917$RCJqu)
        (get-clr-type . g$11916$RCJqu)
        (get-command-line . g$11915$RCJqu)
        (vector-append . g$11914$RCJqu)
        (vector-filter . g$11913$RCJqu)
        (vector-reverse! . g$11912$RCJqu)
        (vector-contains? . g$11911$RCJqu)
        (vector-index-of . g$11910$RCJqu)
        (vector-copy . g$11909$RCJqu)
        (vector-binary-search . g$11908$RCJqu)
        (get-output-string . g$11907$RCJqu)
        (open-output-string . g$11906$RCJqu)
        (open-input-string . g$11905$RCJqu)
        (string-format . g$11904$RCJqu)
        (trace-printer . g$11759$RCJqu)
        (make-traced-procedure . g$11903$RCJqu)
        (make-traced-macro . g$7545$RCJqu)
        (pmap . g$11902$RCJqu)
        (time-it . g$11901$RCJqu)
        (make-parameter . g$7550$RCJqu)
        (library-locator . g$11900$RCJqu)
        (get-library-paths . g$11899$RCJqu)
        (environment-symbols . g$8806$RCJqu)
        (interaction-environment-symbols . g$8805$RCJqu)
        (library-path . g$7975$RCJqu)
        (library-extensions . g$7976$RCJqu)
        (installed-libraries . g$7996$RCJqu)
        (expand . g$8811$RCJqu)
        (&no-nans . g$11898$RCJqu)
        (&no-infinities . g$11897$RCJqu)
        (&i/o-encoding . g$11896$RCJqu)
        (&i/o-decoding . g$11895$RCJqu)
        (&i/o-port . g$11894$RCJqu)
        (&i/o-file-does-not-exist . g$11893$RCJqu)
        (&i/o-file-already-exists . g$11892$RCJqu)
        (&i/o-file-is-read-only . g$11891$RCJqu)
        (&i/o-file-protection . g$11890$RCJqu)
        (&i/o-filename . g$11889$RCJqu)
        (&i/o-invalid-position . g$11888$RCJqu)
        (&i/o-write . g$11887$RCJqu)
        (&i/o-read . g$11886$RCJqu)
        (&i/o . g$11885$RCJqu)
        (&non-continuable . g$11884$RCJqu)
        (&undefined . g$11883$RCJqu)
        (&syntax . g$11882$RCJqu)
        (&lexical . g$11881$RCJqu)
        (&implementation-restriction . g$11880$RCJqu)
        (&non . g$11879$RCJqu)
        (&who . g$11878$RCJqu)
        (&irritants . g$11877$RCJqu)
        (&assertion . g$11876$RCJqu)
        (&violation . g$11875$RCJqu)
        (&error . g$11874$RCJqu)
        (&serious . g$11873$RCJqu)
        (&warning . g$11872$RCJqu)
        (&message . g$11871$RCJqu)
        (&condition . g$11870$RCJqu)
        (define-condition-type . g$11869$RCJqu)
        (define-enumeration . g$11868$RCJqu)
        (define-record-type . g$11867$RCJqu)
        (parent-rtd . g$11866$RCJqu)
        (nongenerative . g$11865$RCJqu)
        (opaque . g$11864$RCJqu)
        (sealed . g$11863$RCJqu)
        (protocol . g$11862$RCJqu)
        (parent . g$11861$RCJqu)
        (immutable . g$11860$RCJqu)
        (mutable . g$11859$RCJqu)
        (fields . g$11858$RCJqu)
        (error-handling-mode . g$11857$RCJqu)
        (file-options . g$11856$RCJqu)
        (buffer-mode . g$11855$RCJqu)
        (eol-style . g$11854$RCJqu)
        (guard . g$11853$RCJqu)
        (trace-letrec-syntax . g$11852$RCJqu)
        (trace-let-syntax . g$11851$RCJqu)
        (trace-define-syntax . g$11850$RCJqu)
        (trace-define . g$11849$RCJqu)
        (trace-lambda . g$11848$RCJqu)
        (unsyntax-splicing . g$11847$RCJqu)
        (unsyntax . g$11846$RCJqu)
        (unquote-splicing . g$11845$RCJqu)
        (unquote . g$11844$RCJqu)
        (_ . g$11843$RCJqu)
        (else . g$11842$RCJqu)
        (=> . g$11841$RCJqu)
        (... . g$11840$RCJqu)
        (assert . g$11839$RCJqu)
        (endianness . g$11838$RCJqu)
        (delay . g$11837$RCJqu)
        (time . g$11836$RCJqu)
        (or . g$11835$RCJqu)
        (and . g$11834$RCJqu)
        (do . g$11833$RCJqu)
        (cond . g$11832$RCJqu)
        (let* . g$11831$RCJqu)
        (let . g$11830$RCJqu)
        (identifier-syntax . g$11829$RCJqu)
        (with-syntax . g$11828$RCJqu)
        (quasisyntax . g$11827$RCJqu)
        (quasiquote . g$11826$RCJqu)
        (syntax-rules . g$11825$RCJqu)
        (include-into . g$11824$RCJqu)
        (include . g$11823$RCJqu)
        (define-struct . g$11822$RCJqu)
        (let-values . g$11821$RCJqu)
        (let*-values . g$11820$RCJqu)
        (record-constructor-descriptor . g$11819$RCJqu)
        (record-type-descriptor . g$11818$RCJqu)
        (fluid-let-syntax . g$11817$RCJqu)
        (case . g$11816$RCJqu)
        (parameterize . g$11815$RCJqu)
        (unless . g$11814$RCJqu)
        (when . g$11813$RCJqu)
        (if . g$11812$RCJqu)
        (letrec* . g$11811$RCJqu)
        (letrec . g$11810$RCJqu)
        (type-descriptor . g$11809$RCJqu)
        (case-lambda . g$11808$RCJqu)
        (lambda . g$11807$RCJqu)
        (syntax . g$11806$RCJqu)
        (syntax-case . g$11805$RCJqu)
        (quote . g$11804$RCJqu)
        (foreign-call . g$11803$RCJqu)
        (letrec-syntax . g$11802$RCJqu)
        (let-syntax . g$11801$RCJqu)
        (set! . g$11800$RCJqu)
        (import . g$11799$RCJqu)
        (library . g$11798$RCJqu)
        (begin . g$11797$RCJqu)
        (module . g$11796$RCJqu)
        (define-syntax . g$11795$RCJqu)
        (define . g$11794$RCJqu))
      '((g$8704$RCJqu core-prim . ellipsis-map)
        (g$12450$RCJqu core-prim . &no-nans-rcd)
        (g$12449$RCJqu core-prim . &no-nans-rtd)
        (g$12448$RCJqu core-prim . &no-infinities-rcd)
        (g$12447$RCJqu core-prim . &no-infinities-rtd)
        (g$12446$RCJqu core-prim . &i/o-encoding-rcd)
        (g$12445$RCJqu core-prim . &i/o-encoding-rtd)
        (g$12444$RCJqu core-prim . &i/o-decoding-rcd)
        (g$12443$RCJqu core-prim . &i/o-decoding-rtd)
        (g$12442$RCJqu core-prim . &i/o-port-rcd)
        (g$12441$RCJqu core-prim . &i/o-port-rtd)
        (g$12440$RCJqu core-prim . &i/o-file-does-not-exist-rcd)
        (g$12439$RCJqu core-prim . &i/o-file-does-not-exist-rtd)
        (g$12438$RCJqu core-prim . &i/o-file-already-exists-rcd)
        (g$12437$RCJqu core-prim . &i/o-file-already-exists-rtd)
        (g$12436$RCJqu core-prim . &i/o-fie-is-read-only-rcd)
        (g$12435$RCJqu core-prim . &i/o-fie-is-read-only-rtd)
        (g$12434$RCJqu core-prim . &i/o-file-protection-rcd)
        (g$12433$RCJqu core-prim . &i/o-file-protection-rtd)
        (g$12432$RCJqu core-prim . &i/o-filename-rcd)
        (g$12431$RCJqu core-prim . &i/o-filename-rtd)
        (g$12430$RCJqu core-prim . &i/o-invalid-position-rcd)
        (g$12429$RCJqu core-prim . &i/o-invalid-position-rtd)
        (g$12428$RCJqu core-prim . &i/o-write-rcd)
        (g$12427$RCJqu core-prim . &i/o-write-rtd)
        (g$12426$RCJqu core-prim . &i/o-read-rcd)
        (g$12425$RCJqu core-prim . &i/o-read-rtd)
        (g$12424$RCJqu core-prim . &i/o-rcd)
        (g$12423$RCJqu core-prim . &i/o-rtd)
        (g$12422$RCJqu core-prim . &undefined-rcd)
        (g$12421$RCJqu core-prim . &undefined-rtd)
        (g$12420$RCJqu core-prim . &syntax-rcd)
        (g$12419$RCJqu core-prim . &syntax-rtd)
        (g$12418$RCJqu core-prim . &lexical-rcd)
        (g$12417$RCJqu core-prim . &lexical-rtd)
        (g$12416$RCJqu core-prim . &implementation-restriction-rcd)
        (g$12415$RCJqu core-prim . &implementation-restriction-rtd)
        (g$12414$RCJqu core-prim . &non-continuable-rcd)
        (g$12413$RCJqu core-prim . &non-continuable-rtd)
        (g$12412$RCJqu core-prim . &who-rcd)
        (g$12411$RCJqu core-prim . &who-rtd)
        (g$12410$RCJqu core-prim . &irritants-rcd)
        (g$12409$RCJqu core-prim . &irritants-rtd)
        (g$12408$RCJqu core-prim . &assertion-rcd)
        (g$12407$RCJqu core-prim . &assertion-rtd)
        (g$12406$RCJqu core-prim . &violation-rcd)
        (g$12405$RCJqu core-prim . &violation-rtd)
        (g$12404$RCJqu core-prim . &error-rcd)
        (g$12403$RCJqu core-prim . &error-rtd)
        (g$12402$RCJqu core-prim . &serious-rcd)
        (g$12401$RCJqu core-prim . &serious-rtd)
        (g$12400$RCJqu core-prim . &warning-rcd)
        (g$12399$RCJqu core-prim . &warning-rtd)
        (g$12398$RCJqu core-prim . &message-rcd)
        (g$12397$RCJqu core-prim . &message-rtd)
        (g$12396$RCJqu core-prim . &condition-rcd)
        (g$12395$RCJqu core-prim . &condition-rtd)
        (g$12394$RCJqu core-prim . library-letrec*)
        (g$12393$RCJqu core-prim . annotation-stripped)
        (g$12392$RCJqu core-prim . annotation-source)
        (g$12391$RCJqu core-prim . annotation-expression)
        (g$12390$RCJqu core-prim . annotation?)
        (g$12389$RCJqu core-prim . read-annotated)
        (g$12388$RCJqu core-prim . tanh)
        (g$12387$RCJqu core-prim . cosh)
        (g$12386$RCJqu core-prim . sinh)
        (g$12385$RCJqu core-prim . make-guid)
        (g$12384$RCJqu core-prim . unspecified?)
        (g$12383$RCJqu core-prim . make-trace)
        (g$12382$RCJqu core-prim . make-list)
        (g$12381$RCJqu core-prim . last-pair)
        (g$12380$RCJqu core-prim . load-r5rs)
        (g$12379$RCJqu core-prim . license)
        (g$12378$RCJqu core-prim . stacktrace)
        (g$11764$RCJqu core-prim . ironscheme-build)
        (g$12377$RCJqu core-prim . define-clr-class-internal)
        (g$12376$RCJqu core-prim . clr-field-set!-internal)
        (g$12375$RCJqu core-prim . clr-field-get-internal)
        (g$12374$RCJqu core-prim . clr-cast-internal)
        (g$12373$RCJqu core-prim . clr-call-internal)
        (g$12372$RCJqu core-prim . clr-new-internal)
        (g$12371$RCJqu core-prim . clr-new-array-internal)
        (g$12370$RCJqu core-prim . clr-is-internal)
        (g$12369$RCJqu core-prim . clr-reference-internal)
        (g$12368$RCJqu core-prim . clr-using-internal)
        (g$12367$RCJqu core-prim . clr-clear-usings-internal)
        (g$8823$RCJqu core-prim . syntax-error)
        (g$8699$RCJqu core-prim . syntax-dispatch)
        (g$12366$RCJqu core-prim . compile-core)
        (g$12365$RCJqu core-prim . eval-core)
        (g$12364$RCJqu core-prim . set-symbol-value!)
        (g$12363$RCJqu core-prim . symbol-value)
        (g$12362$RCJqu core-prim . ungensym)
        (g$12361$RCJqu core-prim . gensym)
        (g$12360$RCJqu core-prim . void)
        (g$12359$RCJqu core-prim . load-serialized-library)
        (g$12358$RCJqu core-prim . serialize-library)
        (g$11766$RCJqu core-prim . compile-system-libraries)
        (g$11768$RCJqu core-prim . compile->closure)
        (g$11767$RCJqu core-prim . compile)
        (g$11763$RCJqu core-prim . load)
        (g$8832$RCJqu core-prim . interaction-environment)
        (g$12357$RCJqu core-prim . char-ready?)
        (g$12356$RCJqu core-prim . string-upcase)
        (g$12355$RCJqu core-prim . string-titlecase)
        (g$12354$RCJqu core-prim . string-normalize-nfkd)
        (g$12353$RCJqu core-prim . string-normalize-nfkc)
        (g$12352$RCJqu core-prim . string-normalize-nfd)
        (g$12351$RCJqu core-prim . string-normalize-nfc)
        (g$12350$RCJqu core-prim . string-foldcase)
        (g$12349$RCJqu core-prim . string-downcase)
        (g$12348$RCJqu core-prim . string-ci>?)
        (g$12347$RCJqu core-prim . string-ci>=?)
        (g$12346$RCJqu core-prim . string-ci=?)
        (g$12345$RCJqu core-prim . string-ci<?)
        (g$12344$RCJqu core-prim . string-ci<=?)
        (g$12343$RCJqu core-prim . char-whitespace?)
        (g$12342$RCJqu core-prim . char-upper-case?)
        (g$12341$RCJqu core-prim . char-title-case?)
        (g$12340$RCJqu core-prim . char-numeric?)
        (g$12339$RCJqu core-prim . char-lower-case?)
        (g$12338$RCJqu core-prim . char-general-category)
        (g$12337$RCJqu core-prim . char-upcase)
        (g$12336$RCJqu core-prim . char-titlecase)
        (g$12335$RCJqu core-prim . char-foldcase)
        (g$12334$RCJqu core-prim . char-downcase)
        (g$12333$RCJqu core-prim . char-ci>?)
        (g$12332$RCJqu core-prim . char-ci>=?)
        (g$12331$RCJqu core-prim . char-ci=?)
        (g$12330$RCJqu core-prim . char-ci<?)
        (g$12329$RCJqu core-prim . char-ci<=?)
        (g$12328$RCJqu core-prim . char-alphabetic?)
        (g$8436$RCJqu core-prim . variable-transformer-procedure)
        (g$8435$RCJqu core-prim . variable-transformer?)
        (g$8434$RCJqu core-prim . make-variable-transformer)
        (g$8827$RCJqu core-prim . identifier?)
        (g$8819$RCJqu core-prim . generate-temporaries)
        (g$8820$RCJqu core-prim . free-identifier=?)
        (g$8829$RCJqu core-prim . syntax->datum)
        (g$8828$RCJqu core-prim . datum->syntax)
        (g$8821$RCJqu core-prim . bound-identifier=?)
        (g$12327$RCJqu core-prim . record-type-descriptor?)
        (g$12326$RCJqu core-prim . record-predicate)
        (g$12325$RCJqu core-prim . record-mutator)
        (g$12324$RCJqu core-prim . record-constructor)
        (g$12323$RCJqu core-prim . record-accessor)
        (g$12322$RCJqu core-prim . make-record-type-descriptor)
        (g$12321$RCJqu core-prim . make-record-constructor-descriptor)
        (g$12320$RCJqu core-prim . record?)
        (g$12319$RCJqu core-prim . record-type-uid)
        (g$12318$RCJqu core-prim . record-type-sealed?)
        (g$12317$RCJqu core-prim . record-type-parent)
        (g$12316$RCJqu core-prim . record-type-opaque?)
        (g$12315$RCJqu core-prim . record-type-name)
        (g$12314$RCJqu core-prim . record-type-generative?)
        (g$12313$RCJqu core-prim . record-type-field-names)
        (g$12312$RCJqu core-prim . record-rtd)
        (g$12311$RCJqu core-prim . record-field-mutable?)
        (g$6617$RCJqu core-prim . delete-file)
        (g$6616$RCJqu core-prim . file-exists?)
        (g$12310$RCJqu core-prim . vector-sort!)
        (g$12309$RCJqu core-prim . vector-sort)
        (g$7124$RCJqu core-prim . list-sort)
        (g$12308$RCJqu core-prim . symbol-hash)
        (g$12307$RCJqu core-prim . string-ci-hash)
        (g$12306$RCJqu core-prim . string-hash)
        (g$12305$RCJqu core-prim . equal-hash)
        (g$12304$RCJqu core-prim . hashtable-equivalence-function)
        (g$12303$RCJqu core-prim . make-hashtable)
        (g$12302$RCJqu core-prim . hashtable-hash-function)
        (g$6584$RCJqu core-prim . make-eqv-hashtable)
        (g$6583$RCJqu core-prim . make-eq-hashtable)
        (g$12301$RCJqu core-prim . hashtable?)
        (g$6590$RCJqu core-prim . hashtable-update!)
        (g$6585$RCJqu core-prim . hashtable-size)
        (g$6587$RCJqu core-prim . hashtable-set!)
        (g$6586$RCJqu core-prim . hashtable-ref)
        (g$12300$RCJqu core-prim . hashtable-mutable?)
        (g$12299$RCJqu core-prim . hashtable-keys)
        (g$12298$RCJqu core-prim . hashtable-entries)
        (g$6588$RCJqu core-prim . hashtable-delete!)
        (g$12297$RCJqu core-prim . hashtable-copy)
        (g$6589$RCJqu core-prim . hashtable-contains?)
        (g$6591$RCJqu core-prim . hashtable-clear!)
        (g$12296$RCJqu core-prim . call-with-output-file)
        (g$12295$RCJqu core-prim . call-with-input-file)
        (g$12294$RCJqu core-prim . write-char)
        (g$12293$RCJqu core-prim . write)
        (g$12292$RCJqu core-prim . with-output-to-file)
        (g$12291$RCJqu core-prim . with-input-from-file)
        (g$12290$RCJqu core-prim . read-char)
        (g$12289$RCJqu core-prim . read)
        (g$12288$RCJqu core-prim . peek-char)
        (g$12287$RCJqu core-prim . open-output-file)
        (g$12286$RCJqu core-prim . open-input-file)
        (g$12285$RCJqu core-prim . newline)
        (g$12284$RCJqu core-prim . display)
        (g$12283$RCJqu core-prim . close-output-port)
        (g$12282$RCJqu core-prim . close-input-port)
        (g$12281$RCJqu core-prim . eof-object?)
        (g$12280$RCJqu core-prim . eof-object)
        (g$12279$RCJqu core-prim . current-error-port)
        (g$12278$RCJqu core-prim . current-output-port)
        (g$12277$RCJqu core-prim . current-input-port)
        (g$12276$RCJqu core-prim . output-port?)
        (g$12275$RCJqu core-prim . input-port?)
        (g$12274$RCJqu core-prim . utf-8-codec)
        (g$12273$RCJqu core-prim . utf-16-codec)
        (g$12272$RCJqu core-prim . transcoder-error-handling-mode)
        (g$12271$RCJqu core-prim . transcoder-eol-style)
        (g$12270$RCJqu core-prim . transcoder-codec)
        (g$12269$RCJqu core-prim . transcoded-port)
        (g$12268$RCJqu core-prim . textual-port?)
        (g$12267$RCJqu core-prim . string->bytevector)
        (g$12266$RCJqu core-prim . standard-output-port)
        (g$12265$RCJqu core-prim . standard-input-port)
        (g$12264$RCJqu core-prim . standard-error-port)
        (g$12263$RCJqu core-prim . set-port-position!)
        (g$12262$RCJqu core-prim . put-u8)
        (g$12261$RCJqu core-prim . put-string)
        (g$12260$RCJqu core-prim . put-datum)
        (g$12259$RCJqu core-prim . put-char)
        (g$12258$RCJqu core-prim . put-bytevector)
        (g$12257$RCJqu core-prim . port?)
        (g$12256$RCJqu core-prim . port-transcoder)
        (g$12255$RCJqu core-prim . port-position)
        (g$12254$RCJqu core-prim . port-has-set-port-position!?)
        (g$12253$RCJqu core-prim . port-has-port-position?)
        (g$12252$RCJqu core-prim . port-eof?)
        (g$12251$RCJqu core-prim . output-port-buffer-mode)
        (g$7515$RCJqu core-prim . open-string-output-port)
        (g$12250$RCJqu core-prim . open-string-input-port)
        (g$12249$RCJqu core-prim . open-file-output-port)
        (g$12248$RCJqu core-prim . open-file-input/output-port)
        (g$12247$RCJqu core-prim . open-file-input-port)
        (g$12246$RCJqu core-prim . open-bytevector-output-port)
        (g$12245$RCJqu core-prim . open-bytevector-input-port)
        (g$12244$RCJqu core-prim . native-transcoder)
        (g$12243$RCJqu core-prim . native-eol-style)
        (g$12242$RCJqu core-prim . make-transcoder)
        (g$12241$RCJqu core-prim . latin-1-codec)
        (g$7372$RCJqu core-prim . make-i/o-write-error)
        (g$7358$RCJqu core-prim . make-i/o-read-error)
        (g$7477$RCJqu core-prim . make-i/o-port-error)
        (g$7387$RCJqu core-prim . make-i/o-invalid-position-error)
        (g$7404$RCJqu core-prim . make-i/o-filename-error)
        (g$7420$RCJqu core-prim . make-i/o-file-protection-error)
        (g$7434$RCJqu core-prim . make-i/o-file-is-read-only-error)
        (g$7462$RCJqu core-prim . make-i/o-file-does-not-exist-error)
        (g$7448$RCJqu core-prim . make-i/o-file-already-exists-error)
        (g$7344$RCJqu core-prim . make-i/o-error)
        (g$7508$RCJqu core-prim . make-i/o-encoding-error)
        (g$7493$RCJqu core-prim . make-i/o-decoding-error)
        (g$12240$RCJqu core-prim . make-custom-textual-output-port)
        (g$12239$RCJqu core-prim . make-custom-textual-input/output-port)
        (g$12238$RCJqu core-prim . make-custom-textual-input-port)
        (g$12237$RCJqu core-prim . make-custom-binary-output-port)
        (g$12236$RCJqu core-prim . make-custom-binary-input/output-port)
        (g$12235$RCJqu core-prim . make-custom-binary-input-port)
        (g$12234$RCJqu core-prim . make-bytevector)
        (g$12233$RCJqu core-prim . lookahead-u8)
        (g$12232$RCJqu core-prim . lookahead-char)
        (g$7373$RCJqu core-prim . i/o-write-error?)
        (g$7359$RCJqu core-prim . i/o-read-error?)
        (g$7479$RCJqu core-prim . i/o-port-error?)
        (g$7389$RCJqu core-prim . i/o-invalid-position-error?)
        (g$7406$RCJqu core-prim . i/o-filename-error?)
        (g$7421$RCJqu core-prim . i/o-file-protection-error?)
        (g$7435$RCJqu core-prim . i/o-file-is-read-only-error?)
        (g$7463$RCJqu core-prim . i/o-file-does-not-exist-error?)
        (g$7449$RCJqu core-prim . i/o-file-already-exists-error?)
        (g$7345$RCJqu core-prim . i/o-error?)
        (g$7480$RCJqu core-prim . i/o-error-port)
        (g$7407$RCJqu core-prim . i/o-error-filename)
        (g$7510$RCJqu core-prim . i/o-encoding-error?)
        (g$7511$RCJqu core-prim . i/o-encoding-error-char)
        (g$7494$RCJqu core-prim . i/o-decoding-error?)
        (g$12231$RCJqu core-prim . get-u8)
        (g$12230$RCJqu core-prim . get-string-n!)
        (g$12229$RCJqu core-prim . get-string-n)
        (g$12228$RCJqu core-prim . get-string-all)
        (g$12227$RCJqu core-prim . get-line)
        (g$12226$RCJqu core-prim . get-datum)
        (g$12225$RCJqu core-prim . get-char)
        (g$12224$RCJqu core-prim . get-bytevector-some)
        (g$12223$RCJqu core-prim . get-bytevector-n!)
        (g$12222$RCJqu core-prim . get-bytevector-n)
        (g$12221$RCJqu core-prim . get-bytevector-all)
        (g$12220$RCJqu core-prim . flush-output-port)
        (g$12219$RCJqu core-prim . close-port)
        (g$12218$RCJqu core-prim . call-with-string-output-port)
        (g$12217$RCJqu core-prim . call-with-port)
        (g$12216$RCJqu core-prim . call-with-bytevector-output-port)
        (g$12215$RCJqu core-prim . bytevector->string)
        (g$12214$RCJqu core-prim . buffer-mode?)
        (g$12213$RCJqu core-prim . binary-port?)
        (g$8810$RCJqu core-prim . scheme-report-environment)
        (g$7111$RCJqu core-prim . quotient)
        (g$8809$RCJqu core-prim . null-environment)
        (g$7112$RCJqu core-prim . remainder)
        (g$7113$RCJqu core-prim . modulo)
        (g$12212$RCJqu core-prim . inexact->exact)
        (g$12211$RCJqu core-prim . force)
        (g$12210$RCJqu core-prim . exact->inexact)
        (g$12209$RCJqu core-prim . exit)
        (g$11760$RCJqu core-prim . command-line)
        (g$12208$RCJqu core-prim . string-fill!)
        (g$12207$RCJqu core-prim . string-set!)
        (g$12206$RCJqu core-prim . set-cdr!)
        (g$12205$RCJqu core-prim . set-car!)
        (g$6697$RCJqu core-prim . remove)
        (g$6698$RCJqu core-prim . remv)
        (g$6683$RCJqu core-prim . remp)
        (g$6699$RCJqu core-prim . remq)
        (g$6682$RCJqu core-prim . partition)
        (g$12204$RCJqu core-prim . memv)
        (g$12203$RCJqu core-prim . memq)
        (g$6689$RCJqu core-prim . memp)
        (g$6688$RCJqu core-prim . member)
        (g$6693$RCJqu core-prim . exists)
        (g$6692$RCJqu core-prim . for-all)
        (g$6696$RCJqu core-prim . fold-right)
        (g$6695$RCJqu core-prim . fold-left)
        (g$6681$RCJqu core-prim . find)
        (g$6684$RCJqu core-prim . filter)
        (g$6694$RCJqu core-prim . cons*)
        (g$6685$RCJqu core-prim . assv)
        (g$12202$RCJqu core-prim . assq)
        (g$6687$RCJqu core-prim . assp)
        (g$6686$RCJqu core-prim . assoc)
        (g$12201$RCJqu core-prim . with-exception-handler)
        (g$12200$RCJqu core-prim . raise-continuable)
        (g$12199$RCJqu core-prim . raise)
        (g$8812$RCJqu core-prim . eval)
        (g$8808$RCJqu core-prim . environment)
        (g$12198$RCJqu core-prim . make-enumeration)
        (g$12197$RCJqu core-prim . enum-set=?)
        (g$12196$RCJqu core-prim . enum-set-universe)
        (g$12195$RCJqu core-prim . enum-set-union)
        (g$12194$RCJqu core-prim . enum-set-subset?)
        (g$12193$RCJqu core-prim . enum-set-projection)
        (g$12192$RCJqu core-prim . enum-set-member?)
        (g$12191$RCJqu core-prim . enum-set-intersection)
        (g$12190$RCJqu core-prim . enum-set-indexer)
        (g$12189$RCJqu core-prim . enum-set-difference)
        (g$12188$RCJqu core-prim . enum-set-constructor)
        (g$12187$RCJqu core-prim . enum-set-complement)
        (g$12186$RCJqu core-prim . enum-set->list)
        (g$7022$RCJqu core-prim . who-condition?)
        (g$6933$RCJqu core-prim . warning?)
        (g$6975$RCJqu core-prim . violation?)
        (g$7099$RCJqu core-prim . undefined-violation?)
        (g$7083$RCJqu core-prim . syntax-violation?)
        (g$7085$RCJqu core-prim . syntax-violation-subform)
        (g$7084$RCJqu core-prim . syntax-violation-form)
        (g$8826$RCJqu core-prim . syntax-violation)
        (g$12185$RCJqu core-prim . simple-conditions)
        (g$6947$RCJqu core-prim . serious-condition?)
        (g$7037$RCJqu core-prim . non-continuable-violation?)
        (g$6918$RCJqu core-prim . message-condition?)
        (g$7020$RCJqu core-prim . make-who-condition)
        (g$6932$RCJqu core-prim . make-warning)
        (g$6974$RCJqu core-prim . make-violation)
        (g$7098$RCJqu core-prim . make-undefined-violation)
        (g$7080$RCJqu core-prim . make-syntax-violation)
        (g$6946$RCJqu core-prim . make-serious-condition)
        (g$7036$RCJqu core-prim . make-non-continuable-violation)
        (g$6916$RCJqu core-prim . make-message-condition)
        (g$7064$RCJqu core-prim . make-lexical-violation)
        (g$7003$RCJqu core-prim . make-irritants-condition)
        (g$7050$RCJqu core-prim . make-implementation-restriction-violation)
        (g$6960$RCJqu core-prim . make-error)
        (g$6988$RCJqu core-prim . make-assertion-violation)
        (g$7065$RCJqu core-prim . lexical-violation?)
        (g$7005$RCJqu core-prim . irritants-condition?)
        (g$7051$RCJqu core-prim . implementation-restriction-violation?)
        (g$6961$RCJqu core-prim . error?)
        (g$7023$RCJqu core-prim . condition-who)
        (g$12184$RCJqu core-prim . condition-predicate)
        (g$6919$RCJqu core-prim . condition-message)
        (g$7006$RCJqu core-prim . condition-irritants)
        (g$12183$RCJqu core-prim . condition-accessor)
        (g$12182$RCJqu core-prim . condition)
        (g$6989$RCJqu core-prim . assertion-violation?)
        (g$12181$RCJqu core-prim . condition?)
        (g$12180$RCJqu core-prim . utf32->string)
        (g$12179$RCJqu core-prim . utf16->string)
        (g$12178$RCJqu core-prim . utf8->string)
        (g$12177$RCJqu core-prim . uint-list->bytevector)
        (g$12176$RCJqu core-prim . u8-list->bytevector)
        (g$12175$RCJqu core-prim . string->utf8)
        (g$12174$RCJqu core-prim . string->utf32)
        (g$12173$RCJqu core-prim . string->utf16)
        (g$12172$RCJqu core-prim . sint-list->bytevector)
        (g$6773$RCJqu core-prim . native-endianness)
        (g$12171$RCJqu core-prim . bytevector?)
        (g$12170$RCJqu core-prim . bytevector=?)
        (g$12169$RCJqu core-prim . bytevector-uint-set!)
        (g$12168$RCJqu core-prim . bytevector-uint-ref)
        (g$12167$RCJqu core-prim . bytevector-u8-set!)
        (g$12166$RCJqu core-prim . bytevector-u8-ref)
        (g$6794$RCJqu core-prim . bytevector-u64-set!)
        (g$6790$RCJqu core-prim . bytevector-u64-ref)
        (g$6796$RCJqu core-prim . bytevector-u64-native-set!)
        (g$6792$RCJqu core-prim . bytevector-u64-native-ref)
        (g$6786$RCJqu core-prim . bytevector-u32-set!)
        (g$6782$RCJqu core-prim . bytevector-u32-ref)
        (g$6788$RCJqu core-prim . bytevector-u32-native-set!)
        (g$6784$RCJqu core-prim . bytevector-u32-native-ref)
        (g$6778$RCJqu core-prim . bytevector-u16-set!)
        (g$6774$RCJqu core-prim . bytevector-u16-ref)
        (g$6780$RCJqu core-prim . bytevector-u16-native-set!)
        (g$6776$RCJqu core-prim . bytevector-u16-native-ref)
        (g$12165$RCJqu core-prim . bytevector-sint-set!)
        (g$12164$RCJqu core-prim . bytevector-sint-ref)
        (g$12163$RCJqu core-prim . bytevector-s8-set!)
        (g$12162$RCJqu core-prim . bytevector-s8-ref)
        (g$6795$RCJqu core-prim . bytevector-s64-set!)
        (g$6791$RCJqu core-prim . bytevector-s64-ref)
        (g$6797$RCJqu core-prim . bytevector-s64-native-set!)
        (g$6793$RCJqu core-prim . bytevector-s64-native-ref)
        (g$6787$RCJqu core-prim . bytevector-s32-set!)
        (g$6783$RCJqu core-prim . bytevector-s32-ref)
        (g$6789$RCJqu core-prim . bytevector-s32-native-set!)
        (g$6785$RCJqu core-prim . bytevector-s32-native-ref)
        (g$6779$RCJqu core-prim . bytevector-s16-set!)
        (g$6775$RCJqu core-prim . bytevector-s16-ref)
        (g$6781$RCJqu core-prim . bytevector-s16-native-set!)
        (g$6777$RCJqu core-prim . bytevector-s16-native-ref)
        (g$12161$RCJqu core-prim . bytevector-length)
        (g$12160$RCJqu core-prim . bytevector-ieee-single-set!)
        (g$12159$RCJqu core-prim . bytevector-ieee-single-ref)
        (g$6800$RCJqu core-prim . bytevector-ieee-single-native-set!)
        (g$6798$RCJqu core-prim . bytevector-ieee-single-native-ref)
        (g$12158$RCJqu core-prim . bytevector-ieee-double-set!)
        (g$12157$RCJqu core-prim . bytevector-ieee-double-ref)
        (g$6801$RCJqu core-prim . bytevector-ieee-double-native-set!)
        (g$6799$RCJqu core-prim . bytevector-ieee-double-native-ref)
        (g$12156$RCJqu core-prim . bytevector-fill!)
        (g$12155$RCJqu core-prim . bytevector-copy!)
        (g$12154$RCJqu core-prim . bytevector-copy)
        (g$12153$RCJqu core-prim . bytevector->uint-list)
        (g$12152$RCJqu core-prim . bytevector->u8-list)
        (g$12151$RCJqu core-prim . bytevector->sint-list)
        (g$7330$RCJqu core-prim . no-nans-violation?)
        (g$7316$RCJqu core-prim . no-infinities-violation?)
        (g$7329$RCJqu core-prim . make-no-nans-violation)
        (g$7315$RCJqu core-prim . make-no-infinities-violation)
        (g$12150$RCJqu core-prim . real->flonum)
        (g$12149$RCJqu core-prim . flzero?)
        (g$12148$RCJqu core-prim . fltruncate)
        (g$12147$RCJqu core-prim . fltan)
        (g$12146$RCJqu core-prim . flsqrt)
        (g$12145$RCJqu core-prim . flsin)
        (g$12144$RCJqu core-prim . flround)
        (g$12143$RCJqu core-prim . flpositive?)
        (g$12142$RCJqu core-prim . flonum?)
        (g$12141$RCJqu core-prim . flodd?)
        (g$12140$RCJqu core-prim . flnumerator)
        (g$12139$RCJqu core-prim . flnegative?)
        (g$12138$RCJqu core-prim . flnan?)
        (g$12137$RCJqu core-prim . flmod0)
        (g$12136$RCJqu core-prim . flmod)
        (g$12135$RCJqu core-prim . flmin)
        (g$12134$RCJqu core-prim . flmax)
        (g$12133$RCJqu core-prim . fllog)
        (g$12132$RCJqu core-prim . flinteger?)
        (g$12131$RCJqu core-prim . flinfinite?)
        (g$12130$RCJqu core-prim . flfloor)
        (g$12129$RCJqu core-prim . flfinite?)
        (g$12128$RCJqu core-prim . flexpt)
        (g$12127$RCJqu core-prim . flexp)
        (g$12126$RCJqu core-prim . fleven?)
        (g$12125$RCJqu core-prim . fldiv0-and-mod0)
        (g$12124$RCJqu core-prim . fldiv0)
        (g$12123$RCJqu core-prim . fldiv-and-mod)
        (g$12122$RCJqu core-prim . fldiv)
        (g$12121$RCJqu core-prim . fldenominator)
        (g$12120$RCJqu core-prim . flcos)
        (g$12119$RCJqu core-prim . flceiling)
        (g$12118$RCJqu core-prim . flatan)
        (g$12117$RCJqu core-prim . flasin)
        (g$12116$RCJqu core-prim . flacos)
        (g$12115$RCJqu core-prim . flabs)
        (g$12114$RCJqu core-prim . fl>?)
        (g$12113$RCJqu core-prim . fl>=?)
        (g$12112$RCJqu core-prim . fl=?)
        (g$12111$RCJqu core-prim . fl<?)
        (g$12110$RCJqu core-prim . fl<=?)
        (g$12109$RCJqu core-prim . fl/)
        (g$12108$RCJqu core-prim . fl-)
        (g$12107$RCJqu core-prim . fl+)
        (g$12106$RCJqu core-prim . fl*)
        (g$12105$RCJqu core-prim . fixnum->flonum)
        (g$12104$RCJqu core-prim . fxzero?)
        (g$12103$RCJqu core-prim . fxxor)
        (g$7261$RCJqu core-prim . fxrotate-bit-field)
        (g$12102$RCJqu core-prim . fxreverse-bit-field)
        (g$12101$RCJqu core-prim . fxpositive?)
        (g$12100$RCJqu core-prim . fxodd?)
        (g$12099$RCJqu core-prim . fxnot)
        (g$12098$RCJqu core-prim . fxnegative?)
        (g$12097$RCJqu core-prim . fxmod0)
        (g$12096$RCJqu core-prim . fxmod)
        (g$12095$RCJqu core-prim . fxmin)
        (g$12094$RCJqu core-prim . fxmax)
        (g$12093$RCJqu core-prim . fxlength)
        (g$12092$RCJqu core-prim . fxior)
        (g$7255$RCJqu core-prim . fxif)
        (g$12091$RCJqu core-prim . fxfirst-bit-set)
        (g$12090$RCJqu core-prim . fxeven?)
        (g$12089$RCJqu core-prim . fxdiv0-and-mod0)
        (g$12088$RCJqu core-prim . fxdiv0)
        (g$12087$RCJqu core-prim . fxdiv-and-mod)
        (g$12086$RCJqu core-prim . fxdiv)
        (g$7258$RCJqu core-prim . fxcopy-bit-field)
        (g$7256$RCJqu core-prim . fxcopy-bit)
        (g$12085$RCJqu core-prim . fxbit-set?)
        (g$7257$RCJqu core-prim . fxbit-field)
        (g$12084$RCJqu core-prim . fxbit-count)
        (g$7260$RCJqu core-prim . fxarithmetic-shift-right)
        (g$7259$RCJqu core-prim . fxarithmetic-shift-left)
        (g$12083$RCJqu core-prim . fxarithmetic-shift)
        (g$12082$RCJqu core-prim . fxand)
        (g$12081$RCJqu core-prim . fx>?)
        (g$12080$RCJqu core-prim . fx>=?)
        (g$12079$RCJqu core-prim . fx=?)
        (g$12078$RCJqu core-prim . fx<?)
        (g$12077$RCJqu core-prim . fx<=?)
        (g$12076$RCJqu core-prim . fx-/carry)
        (g$12075$RCJqu core-prim . fx-)
        (g$12074$RCJqu core-prim . fx+/carry)
        (g$12073$RCJqu core-prim . fx+)
        (g$12072$RCJqu core-prim . fx*/carry)
        (g$12071$RCJqu core-prim . fx*)
        (g$12070$RCJqu core-prim . greatest-fixnum)
        (g$12069$RCJqu core-prim . least-fixnum)
        (g$12068$RCJqu core-prim . fixnum-width)
        (g$12067$RCJqu core-prim . fixnum?)
        (g$7209$RCJqu core-prim . bitwise-rotate-bit-field)
        (g$7210$RCJqu core-prim . bitwise-reverse-bit-field)
        (g$12066$RCJqu core-prim . bitwise-length)
        (g$7203$RCJqu core-prim . bitwise-if)
        (g$12065$RCJqu core-prim . bitwise-first-bit-set)
        (g$7206$RCJqu core-prim . bitwise-copy-bit-field)
        (g$7204$RCJqu core-prim . bitwise-copy-bit)
        (g$12064$RCJqu core-prim . bitwise-bit-set?)
        (g$12063$RCJqu core-prim . bitwise-bit-field)
        (g$12062$RCJqu core-prim . bitwise-bit-count)
        (g$12061$RCJqu core-prim . bitwise-xor)
        (g$12060$RCJqu core-prim . bitwise-ior)
        (g$12059$RCJqu core-prim . bitwise-and)
        (g$12058$RCJqu core-prim . bitwise-not)
        (g$7208$RCJqu core-prim . bitwise-arithmetic-shift-right)
        (g$7207$RCJqu core-prim . bitwise-arithmetic-shift-left)
        (g$12057$RCJqu core-prim . bitwise-arithmetic-shift)
        (g$12056$RCJqu core-prim . zero?)
        (g$12055$RCJqu core-prim . vector?)
        (g$12054$RCJqu core-prim . vector-set!)
        (g$12053$RCJqu core-prim . vector-ref)
        (g$12052$RCJqu core-prim . vector-map)
        (g$12051$RCJqu core-prim . vector-length)
        (g$12050$RCJqu core-prim . vector-for-each)
        (g$12049$RCJqu core-prim . vector-fill!)
        (g$12048$RCJqu core-prim . vector->list)
        (g$12047$RCJqu core-prim . vector)
        (g$12046$RCJqu core-prim . values)
        (g$12045$RCJqu core-prim . truncate)
        (g$12044$RCJqu core-prim . tan)
        (g$12043$RCJqu core-prim . symbol?)
        (g$12042$RCJqu core-prim . symbol=?)
        (g$12041$RCJqu core-prim . symbol->string)
        (g$12040$RCJqu core-prim . substring)
        (g$12039$RCJqu core-prim . string?)
        (g$12038$RCJqu core-prim . string>?)
        (g$12037$RCJqu core-prim . string>=?)
        (g$12036$RCJqu core-prim . string=?)
        (g$12035$RCJqu core-prim . string<?)
        (g$12034$RCJqu core-prim . string<=?)
        (g$12033$RCJqu core-prim . string-ref)
        (g$12032$RCJqu core-prim . string-length)
        (g$12031$RCJqu core-prim . string-for-each)
        (g$12030$RCJqu core-prim . string-copy)
        (g$12029$RCJqu core-prim . string-append)
        (g$12028$RCJqu core-prim . string->symbol)
        (g$12027$RCJqu core-prim . string->number)
        (g$12026$RCJqu core-prim . string->list)
        (g$12025$RCJqu core-prim . string)
        (g$12024$RCJqu core-prim . sqrt)
        (g$12023$RCJqu core-prim . sin)
        (g$12022$RCJqu core-prim . round)
        (g$12021$RCJqu core-prim . reverse)
        (g$12020$RCJqu core-prim . real?)
        (g$12019$RCJqu core-prim . real-valued?)
        (g$12018$RCJqu core-prim . real-part)
        (g$6234$RCJqu core-prim . rationalize)
        (g$12017$RCJqu core-prim . rational?)
        (g$12016$RCJqu core-prim . rational-valued?)
        (g$12015$RCJqu core-prim . procedure?)
        (g$12014$RCJqu core-prim . positive?)
        (g$12013$RCJqu core-prim . pair?)
        (g$12012$RCJqu core-prim . odd?)
        (g$12011$RCJqu core-prim . numerator)
        (g$12010$RCJqu core-prim . number?)
        (g$12009$RCJqu core-prim . number->string)
        (g$12008$RCJqu core-prim . null?)
        (g$12007$RCJqu core-prim . not)
        (g$12006$RCJqu core-prim . negative?)
        (g$12005$RCJqu core-prim . nan?)
        (g$12004$RCJqu core-prim . min)
        (g$12003$RCJqu core-prim . max)
        (g$12002$RCJqu core-prim . map)
        (g$12001$RCJqu core-prim . make-vector)
        (g$12000$RCJqu core-prim . make-string)
        (g$11999$RCJqu core-prim . make-rectangular)
        (g$11998$RCJqu core-prim . make-polar)
        (g$11997$RCJqu core-prim . magnitude)
        (g$11996$RCJqu core-prim . log)
        (g$11995$RCJqu core-prim . list?)
        (g$11994$RCJqu core-prim . list-tail)
        (g$11993$RCJqu core-prim . list-ref)
        (g$11992$RCJqu core-prim . list->vector)
        (g$11991$RCJqu core-prim . list->string)
        (g$11990$RCJqu core-prim . list)
        (g$11989$RCJqu core-prim . length)
        (g$11988$RCJqu core-prim . lcm)
        (g$11987$RCJqu core-prim . integer?)
        (g$11986$RCJqu core-prim . integer-valued?)
        (g$11985$RCJqu core-prim . integer->char)
        (g$11984$RCJqu core-prim . infinite?)
        (g$11983$RCJqu core-prim . inexact?)
        (g$11982$RCJqu core-prim . inexact)
        (g$11981$RCJqu core-prim . imag-part)
        (g$11980$RCJqu core-prim . gcd)
        (g$11979$RCJqu core-prim . for-each)
        (g$11978$RCJqu core-prim . floor)
        (g$11977$RCJqu core-prim . finite?)
        (g$11976$RCJqu core-prim . expt)
        (g$11975$RCJqu core-prim . exp)
        (g$11974$RCJqu core-prim . exact?)
        (g$11973$RCJqu core-prim . exact-integer-sqrt)
        (g$11972$RCJqu core-prim . exact)
        (g$11971$RCJqu core-prim . even?)
        (g$11970$RCJqu core-prim . error)
        (g$11969$RCJqu core-prim . eqv?)
        (g$11968$RCJqu core-prim . equal?)
        (g$11967$RCJqu core-prim . eq?)
        (g$11966$RCJqu core-prim . dynamic-wind)
        (g$11965$RCJqu core-prim . div0-and-mod0)
        (g$11964$RCJqu core-prim . mod0)
        (g$11963$RCJqu core-prim . div0)
        (g$11962$RCJqu core-prim . div-and-mod)
        (g$11961$RCJqu core-prim . mod)
        (g$11960$RCJqu core-prim . div)
        (g$11959$RCJqu core-prim . denominator)
        (g$11958$RCJqu core-prim . cos)
        (g$11957$RCJqu core-prim . cons)
        (g$11956$RCJqu core-prim . complex?)
        (g$11955$RCJqu core-prim . char?)
        (g$11954$RCJqu core-prim . char>?)
        (g$11953$RCJqu core-prim . char>=?)
        (g$11952$RCJqu core-prim . char=?)
        (g$11951$RCJqu core-prim . char<?)
        (g$11950$RCJqu core-prim . char<=?)
        (g$11949$RCJqu core-prim . char->integer)
        (g$11948$RCJqu core-prim . ceiling)
        (g$11947$RCJqu core-prim . call-with-values)
        (g$11946$RCJqu core-prim . call/cc)
        (g$11945$RCJqu core-prim . call-with-current-continuation)
        (g$6233$RCJqu core-prim . cddddr)
        (g$6232$RCJqu core-prim . cdddar)
        (g$6231$RCJqu core-prim . cddadr)
        (g$6230$RCJqu core-prim . cddaar)
        (g$6229$RCJqu core-prim . cdaddr)
        (g$6228$RCJqu core-prim . cdadar)
        (g$6227$RCJqu core-prim . cdaadr)
        (g$6226$RCJqu core-prim . cdaaar)
        (g$6225$RCJqu core-prim . cadddr)
        (g$6224$RCJqu core-prim . caddar)
        (g$6223$RCJqu core-prim . cadadr)
        (g$6222$RCJqu core-prim . cadaar)
        (g$6221$RCJqu core-prim . caaddr)
        (g$6220$RCJqu core-prim . caadar)
        (g$6219$RCJqu core-prim . caaadr)
        (g$6218$RCJqu core-prim . caaaar)
        (g$6217$RCJqu core-prim . cdddr)
        (g$6216$RCJqu core-prim . cddar)
        (g$6215$RCJqu core-prim . cdadr)
        (g$6214$RCJqu core-prim . cdaar)
        (g$6213$RCJqu core-prim . caddr)
        (g$6212$RCJqu core-prim . cadar)
        (g$6211$RCJqu core-prim . caadr)
        (g$6210$RCJqu core-prim . caaar)
        (g$6209$RCJqu core-prim . cddr)
        (g$6208$RCJqu core-prim . cdar)
        (g$6207$RCJqu core-prim . cadr)
        (g$6206$RCJqu core-prim . caar)
        (g$11944$RCJqu core-prim . cdr)
        (g$11943$RCJqu core-prim . car)
        (g$11942$RCJqu core-prim . boolean?)
        (g$11941$RCJqu core-prim . boolean=?)
        (g$11940$RCJqu core-prim . atan)
        (g$11939$RCJqu core-prim . assertion-violation)
        (g$11938$RCJqu core-prim . asin)
        (g$11937$RCJqu core-prim . apply)
        (g$11936$RCJqu core-prim . append)
        (g$11935$RCJqu core-prim . angle)
        (g$11934$RCJqu core-prim . acos)
        (g$11933$RCJqu core-prim . abs)
        (g$11932$RCJqu core-prim . /)
        (g$11931$RCJqu core-prim . *)
        (g$11930$RCJqu core-prim . -)
        (g$11929$RCJqu core-prim . +)
        (g$11928$RCJqu core-prim . >=)
        (g$11927$RCJqu core-prim . >)
        (g$11926$RCJqu core-prim . =)
        (g$11925$RCJqu core-prim . <=)
        (g$11924$RCJqu core-prim . <)
        (g$11923$RCJqu core-prim . make-record-printer)
        (g$11922$RCJqu core-prim . eqv-hash)
        (g$11921$RCJqu core-prim . eq-hash)
        (g$11920$RCJqu core-prim . reverse!)
        (g$11762$RCJqu core-prim . load/args)
        (g$7524$RCJqu core-prim . printf)
        (g$7525$RCJqu core-prim . fprintf)
        (g$7526$RCJqu core-prim . format)
        (g$11919$RCJqu core-prim . get-arity)
        (g$11918$RCJqu core-prim . gc-collect)
        (g$11917$RCJqu core-prim . clr-type?)
        (g$11916$RCJqu core-prim . get-clr-type)
        (g$11915$RCJqu core-prim . get-command-line)
        (g$11914$RCJqu core-prim . vector-append)
        (g$11913$RCJqu core-prim . vector-filter)
        (g$11912$RCJqu core-prim . vector-reverse!)
        (g$11911$RCJqu core-prim . vector-contains?)
        (g$11910$RCJqu core-prim . vector-index-of)
        (g$11909$RCJqu core-prim . vector-copy)
        (g$11908$RCJqu core-prim . vector-binary-search)
        (g$11907$RCJqu core-prim . get-output-string)
        (g$11906$RCJqu core-prim . open-output-string)
        (g$11905$RCJqu core-prim . open-input-string)
        (g$11904$RCJqu core-prim . string-format)
        (g$11759$RCJqu core-prim . trace-printer)
        (g$11903$RCJqu core-prim . make-traced-procedure)
        (g$7545$RCJqu core-prim . make-traced-macro)
        (g$11902$RCJqu core-prim . pmap)
        (g$11901$RCJqu core-prim . time-it)
        (g$7550$RCJqu core-prim . make-parameter)
        (g$11900$RCJqu core-prim . library-locator)
        (g$11899$RCJqu core-prim . get-library-paths)
        (g$8806$RCJqu core-prim . environment-symbols)
        (g$8805$RCJqu core-prim . interaction-environment-symbols)
        (g$7975$RCJqu core-prim . library-path)
        (g$7976$RCJqu core-prim . library-extensions)
        (g$7996$RCJqu core-prim . installed-libraries)
        (g$8811$RCJqu core-prim . expand)
        (g$11898$RCJqu $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11897$RCJqu $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11896$RCJqu $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11895$RCJqu $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11894$RCJqu $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11893$RCJqu
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11892$RCJqu
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11891$RCJqu
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11890$RCJqu
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11889$RCJqu $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11888$RCJqu
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11887$RCJqu $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11886$RCJqu $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11885$RCJqu $core-rtd &i/o-rtd &i/o-rcd)
        (g$11884$RCJqu $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11883$RCJqu $core-rtd &undefined-rtd &undefined-rcd)
        (g$11882$RCJqu $core-rtd &syntax-rtd &syntax-rcd)
        (g$11881$RCJqu $core-rtd &lexical-rtd &lexical-rcd)
        (g$11880$RCJqu
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11879$RCJqu $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11878$RCJqu $core-rtd &who-rtd &who-rcd)
        (g$11877$RCJqu $core-rtd &irritants-rtd &irritants-rcd)
        (g$11876$RCJqu $core-rtd &assertion-rtd &assertion-rcd)
        (g$11875$RCJqu $core-rtd &violation-rtd &violation-rcd)
        (g$11874$RCJqu $core-rtd &error-rtd &error-rcd)
        (g$11873$RCJqu $core-rtd &serious-rtd &serious-rcd)
        (g$11872$RCJqu $core-rtd &warning-rtd &warning-rcd)
        (g$11871$RCJqu $core-rtd &message-rtd &message-rcd)
        (g$11870$RCJqu $core-rtd &condition-rtd &condition-rcd)
        (g$11869$RCJqu macro . define-condition-type)
        (g$11868$RCJqu macro . define-enumeration)
        (g$11867$RCJqu macro . define-record-type)
        (g$11866$RCJqu macro . parent-rtd)
        (g$11865$RCJqu macro . nongenerative)
        (g$11864$RCJqu macro . opaque)
        (g$11863$RCJqu macro . sealed)
        (g$11862$RCJqu macro . protocol)
        (g$11861$RCJqu macro . parent)
        (g$11860$RCJqu macro . immutable)
        (g$11859$RCJqu macro . mutable)
        (g$11858$RCJqu macro . fields)
        (g$11857$RCJqu macro . error-handling-mode)
        (g$11856$RCJqu macro . file-options)
        (g$11855$RCJqu macro . buffer-mode)
        (g$11854$RCJqu macro . eol-style)
        (g$11853$RCJqu macro . guard)
        (g$11852$RCJqu macro . trace-letrec-syntax)
        (g$11851$RCJqu macro . trace-let-syntax)
        (g$11850$RCJqu macro . trace-define-syntax)
        (g$11849$RCJqu macro . trace-define)
        (g$11848$RCJqu macro . trace-lambda)
        (g$11847$RCJqu macro . unsyntax-splicing)
        (g$11846$RCJqu macro . unsyntax)
        (g$11845$RCJqu macro . unquote-splicing)
        (g$11844$RCJqu macro . unquote)
        (g$11843$RCJqu macro . _)
        (g$11842$RCJqu macro . else)
        (g$11841$RCJqu macro . =>)
        (g$11840$RCJqu macro . ...)
        (g$11839$RCJqu macro . assert)
        (g$11838$RCJqu macro . endianness)
        (g$11837$RCJqu macro . delay)
        (g$11836$RCJqu macro . time)
        (g$11835$RCJqu macro . or)
        (g$11834$RCJqu macro . and)
        (g$11833$RCJqu macro . do)
        (g$11832$RCJqu macro . cond)
        (g$11831$RCJqu macro . let*)
        (g$11830$RCJqu macro . let)
        (g$11829$RCJqu macro . identifier-syntax)
        (g$11828$RCJqu macro . with-syntax)
        (g$11827$RCJqu macro . quasisyntax)
        (g$11826$RCJqu macro . quasiquote)
        (g$11825$RCJqu macro . syntax-rules)
        (g$11824$RCJqu macro . include-into)
        (g$11823$RCJqu macro . include)
        (g$11822$RCJqu macro . define-struct)
        (g$11821$RCJqu macro . let-values)
        (g$11820$RCJqu macro . let*-values)
        (g$11819$RCJqu core-macro . record-constructor-descriptor)
        (g$11818$RCJqu core-macro . record-type-descriptor)
        (g$11817$RCJqu core-macro . fluid-let-syntax)
        (g$11816$RCJqu core-macro . case)
        (g$11815$RCJqu core-macro . parameterize)
        (g$11814$RCJqu core-macro . unless)
        (g$11813$RCJqu core-macro . when)
        (g$11812$RCJqu core-macro . if)
        (g$11811$RCJqu core-macro . letrec*)
        (g$11810$RCJqu core-macro . letrec)
        (g$11809$RCJqu core-macro . type-descriptor)
        (g$11808$RCJqu core-macro . case-lambda)
        (g$11807$RCJqu core-macro . lambda)
        (g$11806$RCJqu core-macro . syntax)
        (g$11805$RCJqu core-macro . syntax-case)
        (g$11804$RCJqu core-macro . quote)
        (g$11803$RCJqu core-macro . foreign-call)
        (g$11802$RCJqu letrec-syntax)
        (g$11801$RCJqu let-syntax)
        (g$11800$RCJqu set!)
        (g$11799$RCJqu import)
        (g$11798$RCJqu library)
        (g$11797$RCJqu begin)
        (g$11796$RCJqu module)
        (g$11795$RCJqu define-syntax)
        (g$11794$RCJqu define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7397$RCJqu
      'g$12487$RCJqu
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12366$RCJqu)
        (eval-core . g$12365$RCJqu)
        (set-symbol-value! . g$12364$RCJqu)
        (symbol-value . g$12363$RCJqu)
        (gensym . g$12361$RCJqu)
        (void . g$12360$RCJqu))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11426$RCJqu
     g$trace-printer$11465$RCJqu
     (g$make-parameter$6852$RCJqu write))
   (g$command-line$11427$RCJqu
     g$command-line$11466$RCJqu
     (g$make-parameter$6852$RCJqu (get-command-line)))
   (g$local-library-path$11428$RCJqu
     g$local-library-path$11467$RCJqu
     (case-lambda
       ((g$filename$11438$RCJqu)
        (cons
          (g$get-directory-name$5898$RCJqu g$filename$11438$RCJqu)
          (g$library-path$7381$RCJqu)))))
   (g$load/args$11429$RCJqu
     g$load/args$11468$RCJqu
     (case-lambda
       ((g$filename$11439$RCJqu . g$args$11440$RCJqu)
        (begin
          (apply
            g$load-r6rs-top-level$11436$RCJqu
            g$filename$11439$RCJqu
            'load
            g$args$11440$RCJqu)
          (void)))))
   (g$load$11430$RCJqu
     g$load$11469$RCJqu
     (case-lambda
       ((g$filename$11441$RCJqu)
        (begin
          (apply
            g$load-r6rs-top-level$11436$RCJqu
            g$filename$11441$RCJqu
            'load
            (g$command-line$11427$RCJqu))
          (void)))))
   (g$ironscheme-build$11431$RCJqu
     g$ironscheme-build$11470$RCJqu
     (case-lambda (() (g$load$11430$RCJqu '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11432$RCJqu
     g$eval-top-level$11471$RCJqu
     (case-lambda
       ((g$x$11442$RCJqu)
        (g$eval$11404$RCJqu
          g$x$11442$RCJqu
          (g$interaction-environment$11424$RCJqu)))))
   (g$compile-system-libraries$11433$RCJqu
     g$compile-system-libraries$11472$RCJqu
     (case-lambda
       (()
        (g$eval-top-level$11432$RCJqu
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11434$RCJqu
     g$compile$11473$RCJqu
     (case-lambda
       ((g$filename$11443$RCJqu)
        (g$load-r6rs-top-level$11436$RCJqu g$filename$11443$RCJqu 'compile))))
   (g$compile->closure$11435$RCJqu
     g$compile->closure$11474$RCJqu
     (case-lambda
       ((g$filename$11444$RCJqu)
        (g$load-r6rs-top-level$11436$RCJqu g$filename$11444$RCJqu 'closure))))
   (g$load-r6rs-top-level$11436$RCJqu
     g$load-r6rs-top-level$11475$RCJqu
     (case-lambda
       ((g$filename$11445$RCJqu g$how$11446$RCJqu . g$args$11447$RCJqu)
        ((case-lambda
           ((g$library-path$11450$RCJqu g$library-path$11451$RCJqu)
            ((case-lambda
               ((g$swap$11452$RCJqu)
                (dynamic-wind
                  g$swap$11452$RCJqu
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11453$RCJqu)
                         ((case-lambda
                            ((g$t$11454$RCJqu)
                             (if (eqv? g$t$11454$RCJqu 'closure)
                               (g$pre-compile-r6rs-top-level$11423$RCJqu
                                 g$x*$11453$RCJqu)
                               (if (eqv? g$t$11454$RCJqu 'load)
                                 ((case-lambda
                                    ((g$command-line$11457$RCJqu
                                       g$command-line$11458$RCJqu)
                                     ((case-lambda
                                        ((g$swap$11459$RCJqu)
                                         (dynamic-wind
                                           g$swap$11459$RCJqu
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11422$RCJqu
                                                 g$x*$11453$RCJqu))))
                                           g$swap$11459$RCJqu)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11460$RCJqu)
                                             (begin
                                               (g$command-line$11457$RCJqu
                                                 g$command-line$11458$RCJqu)
                                               (set! g$command-line$11458$RCJqu
                                                 g$t$11460$RCJqu))))
                                          (g$command-line$11457$RCJqu)))))))
                                  g$command-line$11427$RCJqu
                                  (cons
                                    g$filename$11445$RCJqu
                                    (map (case-lambda
                                           ((g$x$11461$RCJqu)
                                            (g$format$6768$RCJqu
                                              '"~a"
                                              g$x$11461$RCJqu)))
                                         g$args$11447$RCJqu)))
                                 (if (eqv? g$t$11454$RCJqu 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$11422$RCJqu
                                       g$x*$11453$RCJqu)
                                     (g$serialize-all$7385$RCJqu
                                       serialize-library
                                       g$compile-core-expr$7099$RCJqu))
                                   (void))))))
                          g$how$11446$RCJqu)))
                      (with-input-from-file
                        g$filename$11445$RCJqu
                        (case-lambda
                          (()
                           ((letrec ((g$f$11462$RCJqu
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11463$RCJqu)
                                              (if (eof-object? g$x$11463$RCJqu)
                                                '()
                                                (cons
                                                  g$x$11463$RCJqu
                                                  (g$f$11462$RCJqu)))))
                                           (read-annotated))))))
                              g$f$11462$RCJqu))))))))
                  g$swap$11452$RCJqu)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11464$RCJqu)
                    (begin
                      (g$library-path$11450$RCJqu g$library-path$11451$RCJqu)
                      (set! g$library-path$11451$RCJqu g$t$11464$RCJqu))))
                 (g$library-path$11450$RCJqu)))))))
         g$library-path$7381$RCJqu
         (g$local-library-path$11428$RCJqu g$filename$11445$RCJqu))))))
  (begin
    (g$current-precompiled-library-loader$7386$RCJqu
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11437$RCJqu)
         (if (g$serious-condition?$6281$RCJqu g$ex$11437$RCJqu)
           (raise g$ex$11437$RCJqu)
           (begin (display g$ex$11437$RCJqu) (newline))))))
    (set-symbol-value! 'load g$load$11430$RCJqu)
    (set-symbol-value! 'compile g$compile$11434$RCJqu)
    (set-symbol-value! 'compile->closure g$compile->closure$11435$RCJqu)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11432$RCJqu)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11397$RCJqu)
    (set-symbol-value! 'expanded2core g$expanded->core$7098$RCJqu)
    (set-symbol-value! 'trace-printer g$trace-printer$11426$RCJqu)
    (g$library-path$7381$RCJqu (get-library-paths))))

