// Do not edit this file generated by gen-cproc.scm
const int cProcNum = 455;
static const Object cProcs[] = {
     Object::makeCProcedure(moduloEx),
     Object::makeCProcedure(remainderEx),
     Object::makeCProcedure(quotientEx),
     Object::makeCProcedure(transcoderErrorHandlingModeEx),
     Object::makeCProcedure(transcoderEolStyleEx),
     Object::makeCProcedure(transcoderCodecEx),
     Object::makeCProcedure(writeCharEx),
     Object::makeCProcedure(putBytevectorEx),
     Object::makeCProcedure(nativeTranscoderEx),
     Object::makeCProcedure(portTranscoderEx),
     Object::makeCProcedure(portPEx),
     Object::makeCProcedure(textualPortPEx),
     Object::makeCProcedure(outputPortPEx),
     Object::makeCProcedure(hostOsEx),
     Object::makeCProcedure(internalFfiSupportedPEx),
     Object::makeCProcedure(internalFfiPointerRefEx),
     Object::makeCProcedure(internalFfiPointerTostringEx),
     Object::makeCProcedure(internalFfiCallTostringOrZeroEx),
     Object::makeCProcedure(internalFfiCallTodoubleEx),
     Object::makeCProcedure(internalFfiCallTovoidMulEx),
     Object::makeCProcedure(internalFfiCallTovoidEx),
     Object::makeCProcedure(internalFfiCallTointEx),
     Object::makeCProcedure(internalFfiLookupEx),
     Object::makeCProcedure(internalFfiOpenEx),
     Object::makeCProcedure(openBytevectorInputPortEx),
     Object::makeCProcedure(lookaheadU8Ex),
     Object::makeCProcedure(portEofPEx),
     Object::makeCProcedure(inputPortPEx),
     Object::makeCProcedure(binaryPortPEx),
     Object::makeCProcedure(setCurrentDirectoryDEx),
     Object::makeCProcedure(currentDirectoryEx),
     Object::makeCProcedure(internalPipeEx),
     Object::makeCProcedure(internalWaitpidEx),
     Object::makeCProcedure(internalExecEx),
     Object::makeCProcedure(internalForkEx),
     Object::makeCProcedure(localTzOffsetEx),
     Object::makeCProcedure(microsecondsEx),
     Object::makeCProcedure(bufferModePEx),
     Object::makeCProcedure(nativeEolStyleEx),
     Object::makeCProcedure(fastEqualPEx),
     Object::makeCProcedure(printStackEx),
     Object::makeCProcedure(disasmEx),
     Object::makeCProcedure(ungensymEx),
     Object::makeCProcedure(vectorFillDEx),
     Object::makeCProcedure(stringCopyEx),
     Object::makeCProcedure(makePolarEx),
     Object::makeCProcedure(exptEx),
     Object::makeCProcedure(atanEx),
     Object::makeCProcedure(angleEx),
     Object::makeCProcedure(magnitudeEx),
     Object::makeCProcedure(sqrtEx),
     Object::makeCProcedure(acosEx),
     Object::makeCProcedure(asinEx),
     Object::makeCProcedure(tanEx),
     Object::makeCProcedure(cosEx),
     Object::makeCProcedure(sinEx),
     Object::makeCProcedure(logEx),
     Object::makeCProcedure(expEx),
     Object::makeCProcedure(roundEx),
     Object::makeCProcedure(truncateEx),
     Object::makeCProcedure(ceilingEx),
     Object::makeCProcedure(floorEx),
     Object::makeCProcedure(denominatorEx),
     Object::makeCProcedure(numeratorEx),
     Object::makeCProcedure(integerDiv0Ex),
     Object::makeCProcedure(integerDivEx),
     Object::makeCProcedure(absEx),
     Object::makeCProcedure(oddPEx),
     Object::makeCProcedure(evenPEx),
     Object::makeCProcedure(bytevectorIeeeDoubleSetDEx),
     Object::makeCProcedure(bytevectorIeeeDoubleNativeSetDEx),
     Object::makeCProcedure(bytevectorIeeeSingleSetDEx),
     Object::makeCProcedure(bytevectorIeeeSingleNativeSetDEx),
     Object::makeCProcedure(bytevectorIeeeDoubleRefEx),
     Object::makeCProcedure(bytevectorIeeeDoubleNativeRefEx),
     Object::makeCProcedure(bytevectorIeeeSingleRefEx),
     Object::makeCProcedure(bytevectorIeeeSingleNativeRefEx),
     Object::makeCProcedure(fxreverseBitFieldEx),
     Object::makeCProcedure(fxrotateBitFieldEx),
     Object::makeCProcedure(fxarithmeticShiftRightEx),
     Object::makeCProcedure(fxarithmeticShiftLeftEx),
     Object::makeCProcedure(fxarithmeticShiftEx),
     Object::makeCProcedure(fxcopyBitFieldEx),
     Object::makeCProcedure(fxbitFieldEx),
     Object::makeCProcedure(fxcopyBitEx),
     Object::makeCProcedure(fxbitSetPEx),
     Object::makeCProcedure(fxfirstBitSetEx),
     Object::makeCProcedure(fxlengthEx),
     Object::makeCProcedure(fxbitCountEx),
     Object::makeCProcedure(fxifEx),
     Object::makeCProcedure(fxxorEx),
     Object::makeCProcedure(fxiorEx),
     Object::makeCProcedure(fxandEx),
     Object::makeCProcedure(fxnotEx),
     Object::makeCProcedure(fxmod0Ex),
     Object::makeCProcedure(fxdiv0Ex),
     Object::makeCProcedure(fxmodEx),
     Object::makeCProcedure(fxdivEx),
     Object::makeCProcedure(fxSubEx),
     Object::makeCProcedure(fxMulEx),
     Object::makeCProcedure(fxAddEx),
     Object::makeCProcedure(fxminEx),
     Object::makeCProcedure(fxmaxEx),
     Object::makeCProcedure(fxevenPEx),
     Object::makeCProcedure(fxoddPEx),
     Object::makeCProcedure(fxnegativePEx),
     Object::makeCProcedure(fxpositivePEx),
     Object::makeCProcedure(fxzeroPEx),
     Object::makeCProcedure(fxLePEx),
     Object::makeCProcedure(fxGePEx),
     Object::makeCProcedure(fxLtPEx),
     Object::makeCProcedure(fxGtPEx),
     Object::makeCProcedure(fxEqPEx),
     Object::makeCProcedure(integerValuedPEx),
     Object::makeCProcedure(rationalValuedPEx),
     Object::makeCProcedure(realValuedPEx),
     Object::makeCProcedure(integerPEx),
     Object::makeCProcedure(rationalPEx),
     Object::makeCProcedure(realPEx),
     Object::makeCProcedure(complexPEx),
     Object::makeCProcedure(bitwiseArithmeticShiftEx),
     Object::makeCProcedure(bitwiseArithmeticShiftRightEx),
     Object::makeCProcedure(bitwiseArithmeticShiftLeftEx),
     Object::makeCProcedure(bitwiseFirstBitSetEx),
     Object::makeCProcedure(bitwiseLengthEx),
     Object::makeCProcedure(bitwiseBitCountEx),
     Object::makeCProcedure(bitwiseXorEx),
     Object::makeCProcedure(bitwiseIorEx),
     Object::makeCProcedure(bitwiseAndEx),
     Object::makeCProcedure(bitwiseNotEx),
     Object::makeCProcedure(fixnumToflonumEx),
     Object::makeCProcedure(flexptEx),
     Object::makeCProcedure(flsqrtEx),
     Object::makeCProcedure(flatanEx),
     Object::makeCProcedure(flacosEx),
     Object::makeCProcedure(flasinEx),
     Object::makeCProcedure(fltanEx),
     Object::makeCProcedure(flcosEx),
     Object::makeCProcedure(flsinEx),
     Object::makeCProcedure(fllogEx),
     Object::makeCProcedure(flexpEx),
     Object::makeCProcedure(flroundEx),
     Object::makeCProcedure(fltruncateEx),
     Object::makeCProcedure(flceilingEx),
     Object::makeCProcedure(flfloorEx),
     Object::makeCProcedure(fldenominatorEx),
     Object::makeCProcedure(flnumeratorEx),
     Object::makeCProcedure(flIntegerMod0Ex),
     Object::makeCProcedure(flIntegerDiv0Ex),
     Object::makeCProcedure(flIntegerModEx),
     Object::makeCProcedure(flIntegerDivEx),
     Object::makeCProcedure(flabsEx),
     Object::makeCProcedure(flDivEx),
     Object::makeCProcedure(flSubEx),
     Object::makeCProcedure(flMulEx),
     Object::makeCProcedure(flAddEx),
     Object::makeCProcedure(flminEx),
     Object::makeCProcedure(flmaxEx),
     Object::makeCProcedure(flnanPEx),
     Object::makeCProcedure(flinfinitePEx),
     Object::makeCProcedure(flfinitePEx),
     Object::makeCProcedure(flevenPEx),
     Object::makeCProcedure(floddPEx),
     Object::makeCProcedure(flnegativePEx),
     Object::makeCProcedure(flpositivePEx),
     Object::makeCProcedure(flzeroPEx),
     Object::makeCProcedure(flintegerPEx),
     Object::makeCProcedure(flLePEx),
     Object::makeCProcedure(flGePEx),
     Object::makeCProcedure(flGtPEx),
     Object::makeCProcedure(flLtPEx),
     Object::makeCProcedure(flEqPEx),
     Object::makeCProcedure(realToflonumEx),
     Object::makeCProcedure(finitePEx),
     Object::makeCProcedure(infinitePEx),
     Object::makeCProcedure(nanPEx),
     Object::makeCProcedure(inexactEx),
     Object::makeCProcedure(exactEx),
     Object::makeCProcedure(inexactPEx),
     Object::makeCProcedure(exactPEx),
     Object::makeCProcedure(imagPartEx),
     Object::makeCProcedure(realPartEx),
     Object::makeCProcedure(makeRectangularEx),
     Object::makeCProcedure(greatestFixnumEx),
     Object::makeCProcedure(leastFixnumEx),
     Object::makeCProcedure(fixnumWidthEx),
     Object::makeCProcedure(bignumPEx),
     Object::makeCProcedure(fixnumPEx),
     Object::makeCProcedure(flonumPEx),
     Object::makeCProcedure(rationalPEx),
     Object::makeCProcedure(statMtimeEx),
     Object::makeCProcedure(getStringNEx),
     Object::makeCProcedure(faslReadEx),
     Object::makeCProcedure(faslWriteEx),
     Object::makeCProcedure(makeCompilerInstructionEx),
     Object::makeCProcedure(makeInstructionEx),
     Object::makeCProcedure(closePortEx),
     Object::makeCProcedure(getLineEx),
     Object::makeCProcedure(utf32TostringEx),
     Object::makeCProcedure(utf16TostringEx),
     Object::makeCProcedure(stringToutf32Ex),
     Object::makeCProcedure(stringToutf16Ex),
     Object::makeCProcedure(utf8TostringEx),
     Object::makeCProcedure(stringToutf8Ex),
     Object::makeCProcedure(stringTobytevectorEx),
     Object::makeCProcedure(bytevectorTostringEx),
     Object::makeCProcedure(bytevectorS64NativeSetDEx),
     Object::makeCProcedure(bytevectorU64NativeSetDEx),
     Object::makeCProcedure(bytevectorS64SetDEx),
     Object::makeCProcedure(bytevectorU64SetDEx),
     Object::makeCProcedure(bytevectorS64NativeRefEx),
     Object::makeCProcedure(bytevectorU64NativeRefEx),
     Object::makeCProcedure(bytevectorS64RefEx),
     Object::makeCProcedure(bytevectorU64RefEx),
     Object::makeCProcedure(bytevectorS32NativeSetDEx),
     Object::makeCProcedure(bytevectorU32NativeSetDEx),
     Object::makeCProcedure(bytevectorS32SetDEx),
     Object::makeCProcedure(bytevectorU32SetDEx),
     Object::makeCProcedure(bytevectorS32NativeRefEx),
     Object::makeCProcedure(bytevectorU32NativeRefEx),
     Object::makeCProcedure(bytevectorS32RefEx),
     Object::makeCProcedure(bytevectorU32RefEx),
     Object::makeCProcedure(bytevectorS16NativeSetDEx),
     Object::makeCProcedure(bytevectorU16NativeSetDEx),
     Object::makeCProcedure(bytevectorS16SetDEx),
     Object::makeCProcedure(bytevectorU16SetDEx),
     Object::makeCProcedure(bytevectorS16NativeRefEx),
     Object::makeCProcedure(bytevectorU16NativeRefEx),
     Object::makeCProcedure(bytevectorS16RefEx),
     Object::makeCProcedure(bytevectorU16RefEx),
     Object::makeCProcedure(u8ListTobytevectorEx),
     Object::makeCProcedure(bytevectorTou8ListEx),
     Object::makeCProcedure(bytevectorS8SetDEx),
     Object::makeCProcedure(bytevectorS8RefEx),
     Object::makeCProcedure(bytevectorU8SetDEx),
     Object::makeCProcedure(bytevectorU8RefEx),
     Object::makeCProcedure(bytevectorCopyEx),
     Object::makeCProcedure(bytevectorCopyDEx),
     Object::makeCProcedure(bytevectorFillDEx),
     Object::makeCProcedure(bytevectorEqPEx),
     Object::makeCProcedure(bytevectorLengthEx),
     Object::makeCProcedure(makeBytevectorEx),
     Object::makeCProcedure(makeBytevectorEx),
     Object::makeCProcedure(nativeEndiannessEx),
     Object::makeCProcedure(standardLibraryPathEx),
     Object::makeCProcedure(currentDirectoryEx),
     Object::makeCProcedure(bytevectorPEx),
     Object::makeCProcedure(lookaheadCharEx),
     Object::makeCProcedure(minEx),
     Object::makeCProcedure(maxEx),
     Object::makeCProcedure(divideEx),
     Object::makeCProcedure(mulEx),
     Object::makeCProcedure(subEx),
     Object::makeCProcedure(addEx),
     Object::makeCProcedure(eqEx),
     Object::makeCProcedure(geEx),
     Object::makeCProcedure(gtEx),
     Object::makeCProcedure(leEx),
     Object::makeCProcedure(ltEx),
     Object::makeCProcedure(throwEx),
     Object::makeCProcedure(conditionPredicateEx),
     Object::makeCProcedure(conditionAccessorEx),
     Object::makeCProcedure(conditionPEx),
     Object::makeCProcedure(simpleConditionsEx),
     Object::makeCProcedure(conditionEx),
     Object::makeCProcedure(recordTypeDescriptorPEx),
     Object::makeCProcedure(recordFieldMutablePEx),
     Object::makeCProcedure(recordTypeFieldNamesEx),
     Object::makeCProcedure(recordTypeOpaquePEx),
     Object::makeCProcedure(recordTypeSealedPEx),
     Object::makeCProcedure(recordTypeGenerativePEx),
     Object::makeCProcedure(recordTypeUidEx),
     Object::makeCProcedure(recordTypeParentEx),
     Object::makeCProcedure(recordTypeNameEx),
     Object::makeCProcedure(recordRtdEx),
     Object::makeCProcedure(recordPEx),
     Object::makeCProcedure(recordMutatorEx),
     Object::makeCProcedure(recordAccessorEx),
     Object::makeCProcedure(recordConstructorEx),
     Object::makeCProcedure(recordPredicateEx),
     Object::makeCProcedure(makeRecordConstructorDescriptorEx),
     Object::makeCProcedure(makeRecordTypeDescriptorEx),
     Object::makeCProcedure(hashtableHashFunctionEx),
     Object::makeCProcedure(hashtableEquivalenceFunctionEx),
     Object::makeCProcedure(hashtableKeysEx),
     Object::makeCProcedure(hashtableClearDEx),
     Object::makeCProcedure(hashtableMutablePEx),
     Object::makeCProcedure(hashtableCopyEx),
     Object::makeCProcedure(hashtableContainsPEx),
     Object::makeCProcedure(hashtableDeleteDEx),
     Object::makeCProcedure(hashtableSizeEx),
     Object::makeCProcedure(hashtablePEx),
     Object::makeCProcedure(makeHashtableEx),
     Object::makeCProcedure(setSymbolValueDEx),
     Object::makeCProcedure(symbolValueEx),
     Object::makeCProcedure(localRefEx),
     Object::makeCProcedure(labelEx),
     Object::makeCProcedure(pass1FindSymbolInLvarsEx),
     Object::makeCProcedure(pass3CompileReferEx),
     Object::makeCProcedure(listTovectorEx),
     Object::makeCProcedure(lengthEx),
     Object::makeCProcedure(codeBuilderPutInsnArg2DEx),
     Object::makeCProcedure(codeBuilderPutInsnArg1DEx),
     Object::makeCProcedure(codeBuilderPutInsnArg0DEx),
     Object::makeCProcedure(codeBuilderEmitEx),
     Object::makeCProcedure(codeBuilderAppendDEx),
     Object::makeCProcedure(codeBuilderPutExtra5DEx),
     Object::makeCProcedure(codeBuilderPutExtra4DEx),
     Object::makeCProcedure(codeBuilderPutExtra3DEx),
     Object::makeCProcedure(codeBuilderPutExtra2DEx),
     Object::makeCProcedure(codeBuilderPutExtra1DEx),
     Object::makeCProcedure(makeCodeBuilderEx),
     Object::makeCProcedure(pass4FixupLabelsEx),
     Object::makeCProcedure(pass3FindSetsEx),
     Object::makeCProcedure(pass3FindFreeEx),
     Object::makeCProcedure(appendDEx),
     Object::makeCProcedure(append2Ex),
     Object::makeCProcedure(appendEx),
     Object::makeCProcedure(internalGetClosureNameEx),
     Object::makeCProcedure(callProcessEx),
     Object::makeCProcedure(setSourceInfoDEx),
     Object::makeCProcedure(vectorTolistEx),
     Object::makeCProcedure(readEx),
     Object::makeCProcedure(charGtPEx),
     Object::makeCProcedure(charGePEx),
     Object::makeCProcedure(charLtPEx),
     Object::makeCProcedure(charLePEx),
     Object::makeCProcedure(symbolPEx),
     Object::makeCProcedure(loadEx),
     Object::makeCProcedure(procedurePEx),
     Object::makeCProcedure(memvEx),
     Object::makeCProcedure(macroexpand1Ex),
     Object::makeCProcedure(exitEx),
     Object::makeCProcedure(assqEx),
     Object::makeCProcedure(applyEx),
     Object::makeCProcedure(evalCompiledEx),
     Object::makeCProcedure(evalEx),
     Object::makeCProcedure(sourceInfoEx),
     Object::makeCProcedure(regexpReplaceAllEx),
     Object::makeCProcedure(regexpReplaceEx),
     Object::makeCProcedure(vectorEx),
     Object::makeCProcedure(closeInputPortEx),
     Object::makeCProcedure(openInputFileEx),
     Object::makeCProcedure(openFileInputPortEx),
     Object::makeCProcedure(openFileOutputPortEx),
     Object::makeCProcedure(getBytevectorNEx),
     Object::makeCProcedure(standardErrorPortEx),
     Object::makeCProcedure(standardOutputPortEx),
     Object::makeCProcedure(standardInputPortEx),
     Object::makeCProcedure(bytevectorLengthEx),
     Object::makeCProcedure(sysGetBytevectorEx),
     Object::makeCProcedure(sysOpenBytevectorOutputPortEx),
     Object::makeCProcedure(eofObjectEx),
     Object::makeCProcedure(makeTranscoderEx),
     Object::makeCProcedure(utf16CodecEx),
     Object::makeCProcedure(utf8CodecEx),
     Object::makeCProcedure(latin1CodecEx),
     Object::makeCProcedure(transcodedPortEx),
     Object::makeCProcedure(setPortPositionDEx),
     Object::makeCProcedure(portPositionEx),
     Object::makeCProcedure(portHasSetPortPositionDPEx),
     Object::makeCProcedure(portHasPortPositionPEx),
     Object::makeCProcedure(bytevectorU8SetDEx),
     Object::makeCProcedure(flushOutputPortEx),
     Object::makeCProcedure(putU8Ex),
     Object::makeCProcedure(getU8Ex),
     Object::makeCProcedure(makeCustomTextualOutputPortEx),
     Object::makeCProcedure(makeCustomTextualInputPortEx),
     Object::makeCProcedure(makeCustomBinaryOutputPortEx),
     Object::makeCProcedure(makeCustomBinaryInputPortEx),
     Object::makeCProcedure(pairPEx),
     Object::makeCProcedure(vmApplyEx),
     Object::makeCProcedure(valuesEx),
     Object::makeCProcedure(currentErrorPortEx),
     Object::makeCProcedure(eqHashtableCopyEx),
     Object::makeCProcedure(equalHashEx),
     Object::makeCProcedure(symbolHashEx),
     Object::makeCProcedure(stringCiHashEx),
     Object::makeCProcedure(eqvHashEx),
     Object::makeCProcedure(stringHashEx),
     Object::makeCProcedure(hashtableKeysEx),
     Object::makeCProcedure(hashtableRefEx),
     Object::makeCProcedure(hashtableSetDEx),
     Object::makeCProcedure(makeEqvHashtableEx),
     Object::makeCProcedure(makeEqHashtableEx),
     Object::makeCProcedure(getTimeofdayEx),
     Object::makeCProcedure(assertionViolationEx),
     Object::makeCProcedure(errorEx),
     Object::makeCProcedure(stringRefEx),
     Object::makeCProcedure(symbolTostringEx),
     Object::makeCProcedure(booleanPEx),
     Object::makeCProcedure(memberEx),
     Object::makeCProcedure(eqvPEx),
     Object::makeCProcedure(eqPEx),
     Object::makeCProcedure(memqEx),
     Object::makeCProcedure(listPEx),
     Object::makeCProcedure(vectorPEx),
     Object::makeCProcedure(booleanEqPEx),
     Object::makeCProcedure(symbolEqPEx),
     Object::makeCProcedure(stringEqPEx),
     Object::makeCProcedure(gensymEx),
     Object::makeCProcedure(writeEx),
     Object::makeCProcedure(charPEx),
     Object::makeCProcedure(setCurrentOutputPortDEx),
     Object::makeCProcedure(setCurrentInputPortDEx),
     Object::makeCProcedure(currentOutputPortEx),
     Object::makeCProcedure(currentInputPortEx),
     Object::makeCProcedure(formatEx),
     Object::makeCProcedure(integerTocharEx),
     Object::makeCProcedure(charTointegerEx),
     Object::makeCProcedure(stringToregexpEx),
     Object::makeCProcedure(getOutputStringEx),
     Object::makeCProcedure(deleteFileEx),
     Object::makeCProcedure(fileExistsPEx),
     Object::makeCProcedure(readdirEx),
     Object::makeCProcedure(getRemainingInputStringEx),
     Object::makeCProcedure(digitTointegerEx),
     Object::makeCProcedure(closeOutputPortEx),
     Object::makeCProcedure(openOutputFileEx),
     Object::makeCProcedure(sysPortSeekEx),
     Object::makeCProcedure(openOutputStringEx),
     Object::makeCProcedure(openStringInputPortEx),
     Object::makeCProcedure(equalPEx),
     Object::makeCProcedure(getEnvironmentVariablesEx),
     Object::makeCProcedure(getEnvironmentVariableEx),
     Object::makeCProcedure(stringPEx),
     Object::makeCProcedure(charEqPEx),
     Object::makeCProcedure(readCharEx),
     Object::makeCProcedure(eofObjectPEx),
     Object::makeCProcedure(reverseEx),
     Object::makeCProcedure(numberTostringEx),
     Object::makeCProcedure(stringEx),
     Object::makeCProcedure(stringSplitEx),
     Object::makeCProcedure(stringAppendEx),
     Object::makeCProcedure(stringTonumberEx),
     Object::makeCProcedure(stringTosymbolEx),
     Object::makeCProcedure(stringLengthEx),
     Object::makeCProcedure(stringSetDEx),
     Object::makeCProcedure(makeStringEx),
     Object::makeCProcedure(rxmatchSubstringEx),
     Object::makeCProcedure(rxmatchBeforeEx),
     Object::makeCProcedure(rxmatchAfterEx),
     Object::makeCProcedure(rxmatchEndEx),
     Object::makeCProcedure(rxmatchStartEx),
     Object::makeCProcedure(regexpTostringEx),
     Object::makeCProcedure(regexpPEx),
     Object::makeCProcedure(rxmatchEx),
     Object::makeCProcedure(sysDisplayEx),
     Object::makeCProcedure(setCdrDEx),
     Object::makeCProcedure(setCarDEx),
     Object::makeCProcedure(nullPEx),
     Object::makeCProcedure(cdrEx),
     Object::makeCProcedure(carEx),
     Object::makeCProcedure(consEx),
     Object::makeCProcedure(numberPEx),
};
#ifdef ENABLE_PROFILER
static const ucs4char* cProcNames[] = {
     UC("modulo"),
     UC("remainder"),
     UC("quotient"),
     UC("transcoder-error-handling-mode"),
     UC("transcoder-eol-style"),
     UC("transcoder-codec"),
     UC("write-char"),
     UC("put-bytevector"),
     UC("native-transcoder"),
     UC("port-transcoder"),
     UC("port?"),
     UC("textual-port?"),
     UC("output-port?"),
     UC("host-os"),
     UC("%ffi-supported?"),
     UC("%ffi-pointer-ref"),
     UC("%ffi-pointer->string"),
     UC("%ffi-call->string-or-zero"),
     UC("%ffi-call->double"),
     UC("%ffi-call->void*"),
     UC("%ffi-call->void"),
     UC("%ffi-call->int"),
     UC("%ffi-lookup"),
     UC("%ffi-open"),
     UC("open-bytevector-input-port"),
     UC("lookahead-u8"),
     UC("port-eof?"),
     UC("input-port?"),
     UC("binary-port?"),
     UC("set-current-directory!"),
     UC("current-directory"),
     UC("%pipe"),
     UC("%waitpid"),
     UC("%exec"),
     UC("%fork"),
     UC("local-tz-offset"),
     UC("microseconds"),
     UC("buffer-mode?"),
     UC("native-eol-style"),
     UC("fast-equal?"),
     UC("print-stack"),
     UC("disasm"),
     UC("ungensym"),
     UC("vector-fill!"),
     UC("string-copy"),
     UC("make-polar"),
     UC("expt"),
     UC("atan"),
     UC("angle"),
     UC("magnitude"),
     UC("sqrt"),
     UC("acos"),
     UC("asin"),
     UC("tan"),
     UC("cos"),
     UC("sin"),
     UC("log"),
     UC("exp"),
     UC("round"),
     UC("truncate"),
     UC("ceiling"),
     UC("floor"),
     UC("denominator"),
     UC("numerator"),
     UC("div0"),
     UC("div"),
     UC("abs"),
     UC("odd?"),
     UC("even?"),
     UC("bytevector-ieee-double-set!"),
     UC("bytevector-ieee-double-native-set!"),
     UC("bytevector-ieee-single-set!"),
     UC("bytevector-ieee-single-native-set!"),
     UC("bytevector-ieee-double-ref"),
     UC("bytevector-ieee-double-native-ref"),
     UC("bytevector-ieee-single-ref"),
     UC("bytevector-ieee-single-native-ref"),
     UC("fxreverse-bit-field"),
     UC("fxrotate-bit-field"),
     UC("fxarithmetic-shift-right"),
     UC("fxarithmetic-shift-left"),
     UC("fxarithmetic-shift"),
     UC("fxcopy-bit-field"),
     UC("fxbit-field"),
     UC("fxcopy-bit"),
     UC("fxbit-set?"),
     UC("fxfirst-bit-set"),
     UC("fxlength"),
     UC("fxbit-count"),
     UC("fxif"),
     UC("fxxor"),
     UC("fxior"),
     UC("fxand"),
     UC("fxnot"),
     UC("fxmod0"),
     UC("fxdiv0"),
     UC("fxmod"),
     UC("fxdiv"),
     UC("fx-"),
     UC("fx*"),
     UC("fx+"),
     UC("fxmin"),
     UC("fxmax"),
     UC("fxeven?"),
     UC("fxodd?"),
     UC("fxnegative?"),
     UC("fxpositive?"),
     UC("fxzero?"),
     UC("fx<=?"),
     UC("fx>=?"),
     UC("fx<?"),
     UC("fx>?"),
     UC("fx=?"),
     UC("integer-valued?"),
     UC("rational-valued?"),
     UC("real-valued?"),
     UC("integer?"),
     UC("rational?"),
     UC("real?"),
     UC("complex?"),
     UC("bitwise-arithmetic-shift"),
     UC("bitwise-arithmetic-shift-right"),
     UC("bitwise-arithmetic-shift-left"),
     UC("bitwise-first-bit-set"),
     UC("bitwise-length"),
     UC("bitwise-bit-count"),
     UC("bitwise-xor"),
     UC("bitwise-ior"),
     UC("bitwise-and"),
     UC("bitwise-not"),
     UC("fixnum->flonum"),
     UC("flexpt"),
     UC("flsqrt"),
     UC("flatan"),
     UC("flacos"),
     UC("flasin"),
     UC("fltan"),
     UC("flcos"),
     UC("flsin"),
     UC("fllog"),
     UC("flexp"),
     UC("flround"),
     UC("fltruncate"),
     UC("flceiling"),
     UC("flfloor"),
     UC("fldenominator"),
     UC("flnumerator"),
     UC("flmod0"),
     UC("fldiv0"),
     UC("flmod"),
     UC("fldiv"),
     UC("flabs"),
     UC("fl/"),
     UC("fl-"),
     UC("fl*"),
     UC("fl+"),
     UC("flmin"),
     UC("flmax"),
     UC("flnan?"),
     UC("flinfinite?"),
     UC("flfinite?"),
     UC("fleven?"),
     UC("flodd?"),
     UC("flnegative?"),
     UC("flpositive?"),
     UC("flzero?"),
     UC("flinteger?"),
     UC("fl<=?"),
     UC("fl>=?"),
     UC("fl>?"),
     UC("fl<?"),
     UC("fl=?"),
     UC("real->flonum"),
     UC("finite?"),
     UC("infinite?"),
     UC("nan?"),
     UC("inexact"),
     UC("exact"),
     UC("inexact?"),
     UC("exact?"),
     UC("imag-part"),
     UC("real-part"),
     UC("make-rectangular"),
     UC("greatest-fixnum"),
     UC("least-fixnum"),
     UC("fixnum-width"),
     UC("bignum?"),
     UC("fixnum?"),
     UC("flonum?"),
     UC("rational?"),
     UC("stat-mtime"),
     UC("get-string-n"),
     UC("fasl-read"),
     UC("fasl-write"),
     UC("make-compiler-instruction"),
     UC("make-instruction"),
     UC("close-port"),
     UC("get-line"),
     UC("utf32->string"),
     UC("utf16->string"),
     UC("string->utf32"),
     UC("string->utf16"),
     UC("utf8->string"),
     UC("string->utf8"),
     UC("string->bytevector"),
     UC("bytevector->string"),
     UC("bytevector-s64-native-set!"),
     UC("bytevector-u64-native-set!"),
     UC("bytevector-s64-set!"),
     UC("bytevector-u64-set!"),
     UC("bytevector-s64-native-ref"),
     UC("bytevector-u64-native-ref"),
     UC("bytevector-s64-ref"),
     UC("bytevector-u64-ref"),
     UC("bytevector-s32-native-set!"),
     UC("bytevector-u32-native-set!"),
     UC("bytevector-s32-set!"),
     UC("bytevector-u32-set!"),
     UC("bytevector-s32-native-ref"),
     UC("bytevector-u32-native-ref"),
     UC("bytevector-s32-ref"),
     UC("bytevector-u32-ref"),
     UC("bytevector-s16-native-set!"),
     UC("bytevector-u16-native-set!"),
     UC("bytevector-s16-set!"),
     UC("bytevector-u16-set!"),
     UC("bytevector-s16-native-ref"),
     UC("bytevector-u16-native-ref"),
     UC("bytevector-s16-ref"),
     UC("bytevector-u16-ref"),
     UC("u8-list->bytevector"),
     UC("bytevector->u8-list"),
     UC("bytevector-s8-set!"),
     UC("bytevector-s8-ref"),
     UC("bytevector-u8-set!"),
     UC("bytevector-u8-ref"),
     UC("bytevector-copy"),
     UC("bytevector-copy!"),
     UC("bytevector-fill!"),
     UC("bytevector=?"),
     UC("bytevector-length"),
     UC("make-bytevector"),
     UC("make-bytevector"),
     UC("native-endianness"),
     UC("standard-library-path"),
     UC("current-directory"),
     UC("bytevector?"),
     UC("lookahead-char"),
     UC("min"),
     UC("max"),
     UC("/"),
     UC("*"),
     UC("-"),
     UC("+"),
     UC("="),
     UC(">="),
     UC(">"),
     UC("<="),
     UC("<"),
     UC("throw"),
     UC("condition-predicate"),
     UC("condition-accessor"),
     UC("condition?"),
     UC("simple-conditions"),
     UC("condition"),
     UC("record-type-descriptor?"),
     UC("record-field-mutable?"),
     UC("record-type-field-names"),
     UC("record-type-opaque?"),
     UC("record-type-sealed?"),
     UC("record-type-generative?"),
     UC("record-type-uid"),
     UC("record-type-parent"),
     UC("record-type-name"),
     UC("record-rtd"),
     UC("record?"),
     UC("record-mutator"),
     UC("record-accessor"),
     UC("record-constructor"),
     UC("record-predicate"),
     UC("make-record-constructor-descriptor"),
     UC("make-record-type-descriptor"),
     UC("hashtable-hash-function"),
     UC("hashtable-equivalence-function"),
     UC("hashtable-keys"),
     UC("hashtable-clear!"),
     UC("hashtable-mutable?"),
     UC("hashtable-copy"),
     UC("hashtable-contains?"),
     UC("hashtable-delete!"),
     UC("hashtable-size"),
     UC("hashtable?"),
     UC("make-hashtable"),
     UC("set-symbol-value!"),
     UC("symbol-value"),
     UC("$local-ref"),
     UC("$label"),
     UC("pass1/find-symbol-in-lvars"),
     UC("pass3/compile-refer"),
     UC("list->vector"),
     UC("length"),
     UC("code-builder-put-insn-arg2!"),
     UC("code-builder-put-insn-arg1!"),
     UC("code-builder-put-insn-arg0!"),
     UC("code-builder-emit"),
     UC("code-builder-append!"),
     UC("code-builder-put-extra5!"),
     UC("code-builder-put-extra4!"),
     UC("code-builder-put-extra3!"),
     UC("code-builder-put-extra2!"),
     UC("code-builder-put-extra1!"),
     UC("make-code-builder"),
     UC("pass4/fixup-labels"),
     UC("pass3/find-sets"),
     UC("pass3/find-free"),
     UC("append!"),
     UC("append2"),
     UC("append"),
     UC("%get-closure-name"),
     UC("call-process"),
     UC("set-source-info!"),
     UC("vector->list"),
     UC("read"),
     UC("char>?"),
     UC("char>=?"),
     UC("char<?"),
     UC("char<=?"),
     UC("symbol?"),
     UC("load"),
     UC("procedure?"),
     UC("memv"),
     UC("macroexpand-1"),
     UC("exit"),
     UC("assq"),
     UC("apply"),
     UC("eval-compiled"),
     UC("eval"),
     UC("source-info"),
     UC("regexp-replace-all"),
     UC("regexp-replace"),
     UC("vector"),
     UC("close-input-port"),
     UC("open-input-file"),
     UC("open-file-input-port"),
     UC("open-file-output-port"),
     UC("get-bytevector-n"),
     UC("standard-error-port"),
     UC("standard-output-port"),
     UC("standard-input-port"),
     UC("bytevector-length"),
     UC("sys-get-bytevector"),
     UC("sys-open-bytevector-output-port"),
     UC("eof-object"),
     UC("make-transcoder"),
     UC("utf-16-codec"),
     UC("utf-8-codec"),
     UC("latin-1-codec"),
     UC("transcoded-port"),
     UC("set-port-position!"),
     UC("port-position"),
     UC("port-has-set-port-position!?"),
     UC("port-has-port-position?"),
     UC("bytevector-u8-set!"),
     UC("flush-output-port"),
     UC("put-u8"),
     UC("get-u8"),
     UC("make-custom-textual-output-port"),
     UC("make-custom-textual-input-port"),
     UC("make-custom-binary-output-port"),
     UC("make-custom-binary-input-port"),
     UC("pair?"),
     UC("vm/apply"),
     UC("values"),
     UC("current-error-port"),
     UC("eq-hashtable-copy"),
     UC("equal-hash"),
     UC("symbol-hash"),
     UC("string-ci-hash"),
     UC("eqv-hash"),
     UC("string-hash"),
     UC("hashtable-keys"),
     UC("hashtable-ref"),
     UC("hashtable-set!"),
     UC("make-eqv-hashtable"),
     UC("make-eq-hashtable"),
     UC("get-timeofday"),
     UC("assertion-violation"),
     UC("error"),
     UC("string-ref"),
     UC("symbol->string"),
     UC("boolean?"),
     UC("member"),
     UC("eqv?"),
     UC("eq?"),
     UC("memq"),
     UC("list?"),
     UC("vector?"),
     UC("boolean=?"),
     UC("symbol=?"),
     UC("string=?"),
     UC("gensym"),
     UC("write"),
     UC("char?"),
     UC("set-current-output-port!"),
     UC("set-current-input-port!"),
     UC("current-output-port"),
     UC("current-input-port"),
     UC("format"),
     UC("integer->char"),
     UC("char->integer"),
     UC("string->regexp"),
     UC("get-output-string"),
     UC("delete-file"),
     UC("file-exists?"),
     UC("readdir"),
     UC("get-remaining-input-string"),
     UC("digit->integer"),
     UC("close-output-port"),
     UC("open-output-file"),
     UC("sys-port-seek"),
     UC("open-output-string"),
     UC("open-string-input-port"),
     UC("equal?"),
     UC("get-environment-variables"),
     UC("get-environment-variable"),
     UC("string?"),
     UC("char=?"),
     UC("read-char"),
     UC("eof-object?"),
     UC("reverse"),
     UC("number->string"),
     UC("string"),
     UC("string-split"),
     UC("string-append"),
     UC("string->number"),
     UC("string->symbol"),
     UC("string-length"),
     UC("string-set!"),
     UC("make-string"),
     UC("rxmatch-substring"),
     UC("rxmatch-before"),
     UC("rxmatch-after"),
     UC("rxmatch-end"),
     UC("rxmatch-start"),
     UC("regexp->string"),
     UC("regexp?"),
     UC("rxmatch"),
     UC("sys-display"),
     UC("set-cdr!"),
     UC("set-car!"),
     UC("null?"),
     UC("cdr"),
     UC("car"),
     UC("cons"),
     UC("number?"),
};
#endif
