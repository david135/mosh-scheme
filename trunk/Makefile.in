# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
TESTS = test_vector$(EXEEXT)
bin_PROGRAMS = mosh$(EXEEXT)
check_PROGRAMS = test_vector$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	config.guess config.sub depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)" \
	"$(DESTDIR)$(datadir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = mosh-read.$(OBJEXT) mosh-Transcoder.$(OBJEXT) \
	mosh-EqvHashTable.$(OBJEXT) mosh-Compnum.$(OBJEXT) \
	mosh-Fixnum.$(OBJEXT) mosh-Closure.$(OBJEXT) \
	mosh-UtilityProcedures.$(OBJEXT) mosh-Reader.$(OBJEXT) \
	mosh-NumberReader.$(OBJEXT) mosh-scheme.$(OBJEXT) \
	mosh-Regexp.$(OBJEXT) mosh-Symbol.$(OBJEXT) mosh-VM.$(OBJEXT) \
	mosh-Scanner.$(OBJEXT) mosh-NumberScanner.$(OBJEXT) \
	mosh-ByteArrayBinaryInputPort.$(OBJEXT) \
	mosh-ScannerHelper.$(OBJEXT) mosh-Reader.tab.$(OBJEXT) \
	mosh-NumberReader.tab.$(OBJEXT) \
	mosh-FileBinaryInputPort.$(OBJEXT) \
	mosh-FileBinaryOutputPort.$(OBJEXT) \
	mosh-CustomBinaryInputPort.$(OBJEXT) \
	mosh-TextualOutputPort.$(OBJEXT) \
	mosh-TextualByteVectorOutputPort.$(OBJEXT) \
	mosh-TextualInputPort.$(OBJEXT) \
	mosh-StringTextualOutputPort.$(OBJEXT) \
	mosh-StringTextualInputPort.$(OBJEXT) mosh-UTF8Codec.$(OBJEXT) \
	mosh-UTF16Codec.$(OBJEXT) mosh-UTF32Codec.$(OBJEXT) \
	mosh-EqHashTable.$(OBJEXT) mosh-SString.$(OBJEXT) \
	mosh-GenericHashTable.$(OBJEXT) mosh-Object.$(OBJEXT) \
	mosh-RecordTypeDescriptor.$(OBJEXT) \
	mosh-RecordConstructorDescriptor.$(OBJEXT) \
	mosh-Record.$(OBJEXT) mosh-RecordProcedures.$(OBJEXT) \
	mosh-ConditionProcedures.$(OBJEXT) \
	mosh-CompilerProcedures.$(OBJEXT) \
	mosh-HashTableProceduures.$(OBJEXT) \
	mosh-RegexpProcedures.$(OBJEXT) \
	mosh-StringProcedures.$(OBJEXT) mosh-PortProcedures.$(OBJEXT) \
	mosh-ListProcedures.$(OBJEXT) mosh-ErrorProcedures.$(OBJEXT) \
	mosh-ArithmeticProcedures.$(OBJEXT) \
	mosh-FlonumProcedures.$(OBJEXT) \
	mosh-BitwiseProcedures.$(OBJEXT) \
	mosh-ByteVectorProcedures.$(OBJEXT) mosh-Equivalent.$(OBJEXT) \
	mosh-CompoundCondition.$(OBJEXT) mosh-ucs4string.$(OBJEXT) \
	mosh-Vector.$(OBJEXT) mosh-Fasl.$(OBJEXT) \
	mosh-Arithmetic.$(OBJEXT) mosh-Ratnum.$(OBJEXT) \
	mosh-Bignum.$(OBJEXT) mosh-Flonum.$(OBJEXT) \
	mosh-CodeBuilder.$(OBJEXT) mosh-FixnumProcedures.$(OBJEXT) \
	mosh-Latin1Codec.$(OBJEXT)
am_mosh_OBJECTS = mosh-main.$(OBJEXT) $(am__objects_1)
mosh_OBJECTS = $(am_mosh_OBJECTS)
mosh_DEPENDENCIES = $(GC_LIB) $(REGEXP_LIB)
mosh_LINK = $(CXXLD) $(mosh_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = test_vector-read.$(OBJEXT) \
	test_vector-Transcoder.$(OBJEXT) \
	test_vector-EqvHashTable.$(OBJEXT) \
	test_vector-Compnum.$(OBJEXT) test_vector-Fixnum.$(OBJEXT) \
	test_vector-Closure.$(OBJEXT) \
	test_vector-UtilityProcedures.$(OBJEXT) \
	test_vector-Reader.$(OBJEXT) \
	test_vector-NumberReader.$(OBJEXT) \
	test_vector-scheme.$(OBJEXT) test_vector-Regexp.$(OBJEXT) \
	test_vector-Symbol.$(OBJEXT) test_vector-VM.$(OBJEXT) \
	test_vector-Scanner.$(OBJEXT) \
	test_vector-NumberScanner.$(OBJEXT) \
	test_vector-ByteArrayBinaryInputPort.$(OBJEXT) \
	test_vector-ScannerHelper.$(OBJEXT) \
	test_vector-Reader.tab.$(OBJEXT) \
	test_vector-NumberReader.tab.$(OBJEXT) \
	test_vector-FileBinaryInputPort.$(OBJEXT) \
	test_vector-FileBinaryOutputPort.$(OBJEXT) \
	test_vector-CustomBinaryInputPort.$(OBJEXT) \
	test_vector-TextualOutputPort.$(OBJEXT) \
	test_vector-TextualByteVectorOutputPort.$(OBJEXT) \
	test_vector-TextualInputPort.$(OBJEXT) \
	test_vector-StringTextualOutputPort.$(OBJEXT) \
	test_vector-StringTextualInputPort.$(OBJEXT) \
	test_vector-UTF8Codec.$(OBJEXT) \
	test_vector-UTF16Codec.$(OBJEXT) \
	test_vector-UTF32Codec.$(OBJEXT) \
	test_vector-EqHashTable.$(OBJEXT) \
	test_vector-SString.$(OBJEXT) \
	test_vector-GenericHashTable.$(OBJEXT) \
	test_vector-Object.$(OBJEXT) \
	test_vector-RecordTypeDescriptor.$(OBJEXT) \
	test_vector-RecordConstructorDescriptor.$(OBJEXT) \
	test_vector-Record.$(OBJEXT) \
	test_vector-RecordProcedures.$(OBJEXT) \
	test_vector-ConditionProcedures.$(OBJEXT) \
	test_vector-CompilerProcedures.$(OBJEXT) \
	test_vector-HashTableProceduures.$(OBJEXT) \
	test_vector-RegexpProcedures.$(OBJEXT) \
	test_vector-StringProcedures.$(OBJEXT) \
	test_vector-PortProcedures.$(OBJEXT) \
	test_vector-ListProcedures.$(OBJEXT) \
	test_vector-ErrorProcedures.$(OBJEXT) \
	test_vector-ArithmeticProcedures.$(OBJEXT) \
	test_vector-FlonumProcedures.$(OBJEXT) \
	test_vector-BitwiseProcedures.$(OBJEXT) \
	test_vector-ByteVectorProcedures.$(OBJEXT) \
	test_vector-Equivalent.$(OBJEXT) \
	test_vector-CompoundCondition.$(OBJEXT) \
	test_vector-ucs4string.$(OBJEXT) test_vector-Vector.$(OBJEXT) \
	test_vector-Fasl.$(OBJEXT) test_vector-Arithmetic.$(OBJEXT) \
	test_vector-Ratnum.$(OBJEXT) test_vector-Bignum.$(OBJEXT) \
	test_vector-Flonum.$(OBJEXT) test_vector-CodeBuilder.$(OBJEXT) \
	test_vector-FixnumProcedures.$(OBJEXT) \
	test_vector-Latin1Codec.$(OBJEXT)
am_test_vector_OBJECTS = test_vector-TestVector.$(OBJEXT) \
	$(am__objects_2)
test_vector_OBJECTS = $(am_test_vector_OBJECTS)
test_vector_DEPENDENCIES = gtest_main.a $(GC_LIB) $(REGEXP_LIB)
test_vector_LINK = $(CXXLD) $(test_vector_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(mosh_SOURCES) $(test_vector_SOURCES)
DIST_SOURCES = $(mosh_SOURCES) $(test_vector_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
dataDATA_INSTALL = $(INSTALL_DATA)
nobase_dataDATA_INSTALL = $(install_sh_DATA)
DATA = $(data_DATA) $(nobase_data_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GOSH = @GOSH@
GREP = @GREP@
HAVE_EXT_HASHES = @HAVE_EXT_HASHES@
HAVE_TR1_HASHES = @HAVE_TR1_HASHES@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MOSH_LIB_PATH = @MOSH_LIB_PATH@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @MOSH_LIB_PATH@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# GLOBAL CFLAGS
AM_CFLAGS = -O2 -fomit-frame-pointer
AM_CXXFLAGS = $(CFLAGS)

# Boehm GC
BOEHM_GC_DIR = ./gc-7.1alpha3
GC_LIB = $(BOEHM_GC_DIR)/.libs/libgc.a

# Regexp library oniguruma
ONIG_DIR = ./onig-5.7.0
REGEXP_LIB = $(ONIG_DIR)/.libs/libonig.a

# for GTEST
GTEST_DIR = gtest-1.2.1
USER_DIR = .
GTEST_HEADERS_ = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

GTEST_CPPFLAGS_ = -I$(GTEST_DIR) -I$(GTEST_DIR)/include
SUBDIRS = $(BOEHM_GC_DIR) $(ONIG_DIR) .
COMMON_SOURCES_ = \
HeapObject.h                                                      \
Object-inl.h                                                      \
Pair-inl.h                                                        \
VM-inl.h                                                          \
psyntax.h                                                         \
match.h                                                           \
compiler-with-library.h                                           \
read.cpp                                                          \
CProcedure.h                                                      \
Instruction.h                                                     \
Callable.h                                                        \
GenericMap.h                                                      \
BinaryInputPort.h                                                 \
BinaryOutputPort.h                                                \
config.h                                                          \
scheme.h                                                          \
ByteVector.h                                                      \
HashTable.h                                                       \
Pair.h                                                            \
Stack.h                                                           \
Box.h                                                             \
Codec.h                                                           \
Transcoder.h                  Transcoder.cpp                      \
ProcedureMacro.h                                                  \
EqvHashTable.h                EqvHashTable.cpp                    \
Compnum.h                     Compnum.cpp                         \
Fixnum.h                      Fixnum.cpp                          \
Closure.h                     Closure.cpp                         \
UtilityProcedures.h           UtilityProcedures.cpp               \
Reader.h                      Reader.cpp                          \
NumberReader.h                NumberReader.cpp                    \
scheme.h                      scheme.cpp                          \
Regexp.h                      Regexp.cpp                          \
Symbol.h                      Symbol.cpp                          \
VM.h                          VM.cpp                              \
Scanner.h                     Scanner.cpp                         \
NumberScanner.h               NumberScanner.cpp                   \
ByteArrayBinaryInputPort.h    ByteArrayBinaryInputPort.cpp        \
ScannerHelper.h               ScannerHelper.cpp                   \
Reader.tab.hpp                Reader.tab.cpp                      \
NumberReader.tab.hpp          NumberReader.tab.cpp                \
FileBinaryInputPort.h         FileBinaryInputPort.cpp             \
FileBinaryOutputPort.h        FileBinaryOutputPort.cpp            \
CustomBinaryInputPort.h       CustomBinaryInputPort.cpp           \
TextualOutputPort.h           TextualOutputPort.cpp               \
TextualByteVectorOutputPort.h TextualByteVectorOutputPort.cpp     \
TextualInputPort.cpp          TextualInputPort.h                  \
StringTextualOutputPort.h     StringTextualOutputPort.cpp         \
StringTextualInputPort.h      StringTextualInputPort.cpp          \
UTF8Codec.cpp                 UTF8Codec.h                         \
UTF16Codec.cpp                UTF16Codec.h                        \
UTF32Codec.cpp                UTF32Codec.h                        \
EqHashTable.h                 EqHashTable.cpp                     \
SString.h                     SString.cpp                         \
GenericHashTable.h            GenericHashTable.cpp                \
Object.h                      Object.cpp                          \
RecordTypeDescriptor.h        RecordTypeDescriptor.cpp            \
RecordConstructorDescriptor.h RecordConstructorDescriptor.cpp     \
Record.h                      Record.cpp                          \
RecordProcedures.cpp          RecordProcedures.h                  \
ConditionProcedures.cpp       ConditionProcedures.h               \
CompilerProcedures.cpp        CompilerProcedures.h                \
HashTableProceduures.cpp      HashTableProceduures.h              \
RegexpProcedures.cpp          RegexpProcedures.h                  \
StringProcedures.cpp          StringProcedures.h                  \
PortProcedures.cpp            PortProcedures.h                    \
ListProcedures.cpp            ListProcedures.h                    \
ErrorProcedures.cpp           ErrorProcedures.h                   \
ArithmeticProcedures.cpp      ArithmeticProcedures.h              \
FlonumProcedures.cpp          FlonumProcedures.h                  \
BitwiseProcedures.cpp         BitwiseProcedures.h                 \
ByteVectorProcedures.cpp      ByteVectorProcedures.h              \
Equivalent.h                  Equivalent.cpp                      \
CompoundCondition.h           CompoundCondition.cpp               \
ucs4string.h                  ucs4string.cpp                      \
Vector.h                      Vector.cpp                          \
Fasl.h                        Fasl.cpp                            \
Arithmetic.h                  Arithmetic.cpp                      \
Ratnum.h                      Ratnum.cpp                          \
Bignum.h                      Bignum.cpp                          \
Flonum.h                      Flonum.cpp                          \
CodeBuilder.h                 CodeBuilder.cpp                     \
FinxumProcedures.h            FixnumProcedures.cpp                \
Latin1Codec.h                 Latin1Codec.cpp

mosh_SOURCES = main.cpp $(COMMON_SOURCES_)
mosh_OPTS = -D MONA_SCHEME -D USE_BOEHM_GC -Wall -D MOSH_LIB_PATH="\"@MOSH_LIB_PATH@\""
mosh_CFLAGS = -O3 $(mosh_OPTS)  -g -D_FILE_OFFSET_BITS=64 -Wall -momit-leaf-frame-pointer -fomit-frame-pointer -DDEBUG_VERSION
# -O3 causes miss compile of NumberReader.tab.cpp. see http://d.hatena.ne.jp/higepon/20081114/1226645373
#mosh_CFLAGS   = -O2  $(mosh_OPTS) -pg  -D_FILE_OFFSET_BITS=64
mosh_CXXFLAGS = $(mosh_CFLAGS)
data_DATA = all-tests.scm repl.scm tools/psyntax-r6rs/rev10_to_10/psyntax.scm
nobase_data_DATA = lib/srfi/%3A8.ss lib/srfi/%3A98.ss lib/srfi/%3A26.ss lib/mosh/test.ss
PRECOMPILE_SRC = compiler-with-library.scmc match.scmc psyntax.scmc
mosh_LDADD = $(GC_LIB) $(REGEXP_LIB) #-lglog -lpthread

# # generated files should be listed here.
INCLUDES = -I $(BOEHM_GC_DIR)/include -I $(ONIG_DIR)
EXTRA_DIST = instruction.scm vm.scm library.scm compiler.scm free-vars.scm scripts match.scm test-data.scm doc repl.scm tools/psyntax-r6rs/rev10_to_10/psyntax.scm r6rs-examples tools/psyntax-r6rs RELNOTE r6rs-test-suite example lib cprocedures.cpp labels.cpp all-tests.scm test
GENERATED = \
all-tests.scm Scanner.cpp NumberScanner.cpp psyntax.cpp  compiler-gauche.scm \
DebugInstruction.h cprocedures.cpp      \
labels.cpp match.cpp compiler.cpp psyntax.scmc             \
match.scmc compiler-with-library.scmc compiler-vm-cpp.scm  \
compiler-vm.scm compiler-with-library.scm Instruction.h    \
psyntax.h psyntax.fasl match.h match.fasl                  \
compiler-with-library.h compiler-with-library.fasl

CLEANFILES = gtest.a gtest_main.a
MAINTAINERCLEANFILES = $(GENERATED)
CORE_LIBS = \
    lib/core/fixnum.scm     \
    lib/core/flonum.scm     \
    lib/core/bitwise.scm    \
    lib/core/bytevector.scm \
    lib/core/base.scm       \
    lib/core/r5rs.scm       \
    lib/core/hashtable.scm


# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS_)
test_vector_CXXFLAGS = -I $(BOEHM_GC_DIR)/include -I $(ONIG_DIR) $(mosh_OPTS) -I$(GTEST_DIR) -I$(GTEST_DIR)/include
test_vector_SOURCES = TestVector.cpp $(COMMON_SOURCES_)
test_vector_LDADD = gtest_main.a $(GC_LIB) $(REGEXP_LIB)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .h .o .obj .scmc
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
mosh$(EXEEXT): $(mosh_OBJECTS) $(mosh_DEPENDENCIES) 
	@rm -f mosh$(EXEEXT)
	$(mosh_LINK) $(mosh_OBJECTS) $(mosh_LDADD) $(LIBS)
test_vector$(EXEEXT): $(test_vector_OBJECTS) $(test_vector_DEPENDENCIES) 
	@rm -f test_vector$(EXEEXT)
	$(test_vector_LINK) $(test_vector_OBJECTS) $(test_vector_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Arithmetic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ArithmeticProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Bignum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-BitwiseProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ByteArrayBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ByteVectorProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Closure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-CodeBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-CompilerProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Compnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-CompoundCondition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ConditionProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-CustomBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-EqHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Equivalent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-EqvHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ErrorProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Fasl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-FileBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-FileBinaryOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Fixnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-FixnumProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Flonum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-FlonumProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-GenericHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-HashTableProceduures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Latin1Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ListProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-NumberReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-NumberReader.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-NumberScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-PortProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Ratnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Reader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Reader.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Record.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-RecordConstructorDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-RecordProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-RecordTypeDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Regexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-RegexpProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-SString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ScannerHelper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-StringProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-StringTextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-StringTextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Symbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-TextualByteVectorOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-TextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-TextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Transcoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-UTF16Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-UTF32Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-UTF8Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-UtilityProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-VM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-Vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-scheme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-ucs4string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Arithmetic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ArithmeticProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Bignum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-BitwiseProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ByteVectorProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Closure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-CodeBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-CompilerProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Compnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-CompoundCondition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ConditionProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-CustomBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-EqHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Equivalent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-EqvHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ErrorProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Fasl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-FileBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-FileBinaryOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Fixnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-FixnumProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Flonum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-FlonumProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-GenericHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-HashTableProceduures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Latin1Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ListProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-NumberReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-NumberReader.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-NumberScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-PortProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Ratnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Reader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Reader.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Record.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-RecordConstructorDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-RecordProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-RecordTypeDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Regexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-RegexpProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-SString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ScannerHelper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-StringProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-StringTextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-StringTextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Symbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-TestVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-TextualByteVectorOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-TextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-TextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Transcoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-UTF16Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-UTF32Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-UTF8Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-UtilityProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-VM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-Vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-scheme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vector-ucs4string.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

mosh-main.o: main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-main.o -MD -MP -MF $(DEPDIR)/mosh-main.Tpo -c -o mosh-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-main.Tpo $(DEPDIR)/mosh-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='mosh-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

mosh-main.obj: main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-main.obj -MD -MP -MF $(DEPDIR)/mosh-main.Tpo -c -o mosh-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-main.Tpo $(DEPDIR)/mosh-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='mosh-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

mosh-read.o: read.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-read.o -MD -MP -MF $(DEPDIR)/mosh-read.Tpo -c -o mosh-read.o `test -f 'read.cpp' || echo '$(srcdir)/'`read.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-read.Tpo $(DEPDIR)/mosh-read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read.cpp' object='mosh-read.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-read.o `test -f 'read.cpp' || echo '$(srcdir)/'`read.cpp

mosh-read.obj: read.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-read.obj -MD -MP -MF $(DEPDIR)/mosh-read.Tpo -c -o mosh-read.obj `if test -f 'read.cpp'; then $(CYGPATH_W) 'read.cpp'; else $(CYGPATH_W) '$(srcdir)/read.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-read.Tpo $(DEPDIR)/mosh-read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read.cpp' object='mosh-read.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-read.obj `if test -f 'read.cpp'; then $(CYGPATH_W) 'read.cpp'; else $(CYGPATH_W) '$(srcdir)/read.cpp'; fi`

mosh-Transcoder.o: Transcoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Transcoder.o -MD -MP -MF $(DEPDIR)/mosh-Transcoder.Tpo -c -o mosh-Transcoder.o `test -f 'Transcoder.cpp' || echo '$(srcdir)/'`Transcoder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Transcoder.Tpo $(DEPDIR)/mosh-Transcoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Transcoder.cpp' object='mosh-Transcoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Transcoder.o `test -f 'Transcoder.cpp' || echo '$(srcdir)/'`Transcoder.cpp

mosh-Transcoder.obj: Transcoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Transcoder.obj -MD -MP -MF $(DEPDIR)/mosh-Transcoder.Tpo -c -o mosh-Transcoder.obj `if test -f 'Transcoder.cpp'; then $(CYGPATH_W) 'Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transcoder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Transcoder.Tpo $(DEPDIR)/mosh-Transcoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Transcoder.cpp' object='mosh-Transcoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Transcoder.obj `if test -f 'Transcoder.cpp'; then $(CYGPATH_W) 'Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transcoder.cpp'; fi`

mosh-EqvHashTable.o: EqvHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-EqvHashTable.o -MD -MP -MF $(DEPDIR)/mosh-EqvHashTable.Tpo -c -o mosh-EqvHashTable.o `test -f 'EqvHashTable.cpp' || echo '$(srcdir)/'`EqvHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-EqvHashTable.Tpo $(DEPDIR)/mosh-EqvHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqvHashTable.cpp' object='mosh-EqvHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-EqvHashTable.o `test -f 'EqvHashTable.cpp' || echo '$(srcdir)/'`EqvHashTable.cpp

mosh-EqvHashTable.obj: EqvHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-EqvHashTable.obj -MD -MP -MF $(DEPDIR)/mosh-EqvHashTable.Tpo -c -o mosh-EqvHashTable.obj `if test -f 'EqvHashTable.cpp'; then $(CYGPATH_W) 'EqvHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqvHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-EqvHashTable.Tpo $(DEPDIR)/mosh-EqvHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqvHashTable.cpp' object='mosh-EqvHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-EqvHashTable.obj `if test -f 'EqvHashTable.cpp'; then $(CYGPATH_W) 'EqvHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqvHashTable.cpp'; fi`

mosh-Compnum.o: Compnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Compnum.o -MD -MP -MF $(DEPDIR)/mosh-Compnum.Tpo -c -o mosh-Compnum.o `test -f 'Compnum.cpp' || echo '$(srcdir)/'`Compnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Compnum.Tpo $(DEPDIR)/mosh-Compnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compnum.cpp' object='mosh-Compnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Compnum.o `test -f 'Compnum.cpp' || echo '$(srcdir)/'`Compnum.cpp

mosh-Compnum.obj: Compnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Compnum.obj -MD -MP -MF $(DEPDIR)/mosh-Compnum.Tpo -c -o mosh-Compnum.obj `if test -f 'Compnum.cpp'; then $(CYGPATH_W) 'Compnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Compnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Compnum.Tpo $(DEPDIR)/mosh-Compnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compnum.cpp' object='mosh-Compnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Compnum.obj `if test -f 'Compnum.cpp'; then $(CYGPATH_W) 'Compnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Compnum.cpp'; fi`

mosh-Fixnum.o: Fixnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Fixnum.o -MD -MP -MF $(DEPDIR)/mosh-Fixnum.Tpo -c -o mosh-Fixnum.o `test -f 'Fixnum.cpp' || echo '$(srcdir)/'`Fixnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Fixnum.Tpo $(DEPDIR)/mosh-Fixnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fixnum.cpp' object='mosh-Fixnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Fixnum.o `test -f 'Fixnum.cpp' || echo '$(srcdir)/'`Fixnum.cpp

mosh-Fixnum.obj: Fixnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Fixnum.obj -MD -MP -MF $(DEPDIR)/mosh-Fixnum.Tpo -c -o mosh-Fixnum.obj `if test -f 'Fixnum.cpp'; then $(CYGPATH_W) 'Fixnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Fixnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Fixnum.Tpo $(DEPDIR)/mosh-Fixnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fixnum.cpp' object='mosh-Fixnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Fixnum.obj `if test -f 'Fixnum.cpp'; then $(CYGPATH_W) 'Fixnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Fixnum.cpp'; fi`

mosh-Closure.o: Closure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Closure.o -MD -MP -MF $(DEPDIR)/mosh-Closure.Tpo -c -o mosh-Closure.o `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Closure.Tpo $(DEPDIR)/mosh-Closure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Closure.cpp' object='mosh-Closure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Closure.o `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp

mosh-Closure.obj: Closure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Closure.obj -MD -MP -MF $(DEPDIR)/mosh-Closure.Tpo -c -o mosh-Closure.obj `if test -f 'Closure.cpp'; then $(CYGPATH_W) 'Closure.cpp'; else $(CYGPATH_W) '$(srcdir)/Closure.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Closure.Tpo $(DEPDIR)/mosh-Closure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Closure.cpp' object='mosh-Closure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Closure.obj `if test -f 'Closure.cpp'; then $(CYGPATH_W) 'Closure.cpp'; else $(CYGPATH_W) '$(srcdir)/Closure.cpp'; fi`

mosh-UtilityProcedures.o: UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UtilityProcedures.o -MD -MP -MF $(DEPDIR)/mosh-UtilityProcedures.Tpo -c -o mosh-UtilityProcedures.o `test -f 'UtilityProcedures.cpp' || echo '$(srcdir)/'`UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UtilityProcedures.Tpo $(DEPDIR)/mosh-UtilityProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtilityProcedures.cpp' object='mosh-UtilityProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UtilityProcedures.o `test -f 'UtilityProcedures.cpp' || echo '$(srcdir)/'`UtilityProcedures.cpp

mosh-UtilityProcedures.obj: UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UtilityProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-UtilityProcedures.Tpo -c -o mosh-UtilityProcedures.obj `if test -f 'UtilityProcedures.cpp'; then $(CYGPATH_W) 'UtilityProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilityProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UtilityProcedures.Tpo $(DEPDIR)/mosh-UtilityProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtilityProcedures.cpp' object='mosh-UtilityProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UtilityProcedures.obj `if test -f 'UtilityProcedures.cpp'; then $(CYGPATH_W) 'UtilityProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilityProcedures.cpp'; fi`

mosh-Reader.o: Reader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Reader.o -MD -MP -MF $(DEPDIR)/mosh-Reader.Tpo -c -o mosh-Reader.o `test -f 'Reader.cpp' || echo '$(srcdir)/'`Reader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Reader.Tpo $(DEPDIR)/mosh-Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.cpp' object='mosh-Reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Reader.o `test -f 'Reader.cpp' || echo '$(srcdir)/'`Reader.cpp

mosh-Reader.obj: Reader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Reader.obj -MD -MP -MF $(DEPDIR)/mosh-Reader.Tpo -c -o mosh-Reader.obj `if test -f 'Reader.cpp'; then $(CYGPATH_W) 'Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Reader.Tpo $(DEPDIR)/mosh-Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.cpp' object='mosh-Reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Reader.obj `if test -f 'Reader.cpp'; then $(CYGPATH_W) 'Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.cpp'; fi`

mosh-NumberReader.o: NumberReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-NumberReader.o -MD -MP -MF $(DEPDIR)/mosh-NumberReader.Tpo -c -o mosh-NumberReader.o `test -f 'NumberReader.cpp' || echo '$(srcdir)/'`NumberReader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-NumberReader.Tpo $(DEPDIR)/mosh-NumberReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.cpp' object='mosh-NumberReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-NumberReader.o `test -f 'NumberReader.cpp' || echo '$(srcdir)/'`NumberReader.cpp

mosh-NumberReader.obj: NumberReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-NumberReader.obj -MD -MP -MF $(DEPDIR)/mosh-NumberReader.Tpo -c -o mosh-NumberReader.obj `if test -f 'NumberReader.cpp'; then $(CYGPATH_W) 'NumberReader.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-NumberReader.Tpo $(DEPDIR)/mosh-NumberReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.cpp' object='mosh-NumberReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-NumberReader.obj `if test -f 'NumberReader.cpp'; then $(CYGPATH_W) 'NumberReader.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.cpp'; fi`

mosh-scheme.o: scheme.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-scheme.o -MD -MP -MF $(DEPDIR)/mosh-scheme.Tpo -c -o mosh-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-scheme.Tpo $(DEPDIR)/mosh-scheme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheme.cpp' object='mosh-scheme.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp

mosh-scheme.obj: scheme.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-scheme.obj -MD -MP -MF $(DEPDIR)/mosh-scheme.Tpo -c -o mosh-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-scheme.Tpo $(DEPDIR)/mosh-scheme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheme.cpp' object='mosh-scheme.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`

mosh-Regexp.o: Regexp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Regexp.o -MD -MP -MF $(DEPDIR)/mosh-Regexp.Tpo -c -o mosh-Regexp.o `test -f 'Regexp.cpp' || echo '$(srcdir)/'`Regexp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Regexp.Tpo $(DEPDIR)/mosh-Regexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Regexp.cpp' object='mosh-Regexp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Regexp.o `test -f 'Regexp.cpp' || echo '$(srcdir)/'`Regexp.cpp

mosh-Regexp.obj: Regexp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Regexp.obj -MD -MP -MF $(DEPDIR)/mosh-Regexp.Tpo -c -o mosh-Regexp.obj `if test -f 'Regexp.cpp'; then $(CYGPATH_W) 'Regexp.cpp'; else $(CYGPATH_W) '$(srcdir)/Regexp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Regexp.Tpo $(DEPDIR)/mosh-Regexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Regexp.cpp' object='mosh-Regexp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Regexp.obj `if test -f 'Regexp.cpp'; then $(CYGPATH_W) 'Regexp.cpp'; else $(CYGPATH_W) '$(srcdir)/Regexp.cpp'; fi`

mosh-Symbol.o: Symbol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Symbol.o -MD -MP -MF $(DEPDIR)/mosh-Symbol.Tpo -c -o mosh-Symbol.o `test -f 'Symbol.cpp' || echo '$(srcdir)/'`Symbol.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Symbol.Tpo $(DEPDIR)/mosh-Symbol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Symbol.cpp' object='mosh-Symbol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Symbol.o `test -f 'Symbol.cpp' || echo '$(srcdir)/'`Symbol.cpp

mosh-Symbol.obj: Symbol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Symbol.obj -MD -MP -MF $(DEPDIR)/mosh-Symbol.Tpo -c -o mosh-Symbol.obj `if test -f 'Symbol.cpp'; then $(CYGPATH_W) 'Symbol.cpp'; else $(CYGPATH_W) '$(srcdir)/Symbol.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Symbol.Tpo $(DEPDIR)/mosh-Symbol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Symbol.cpp' object='mosh-Symbol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Symbol.obj `if test -f 'Symbol.cpp'; then $(CYGPATH_W) 'Symbol.cpp'; else $(CYGPATH_W) '$(srcdir)/Symbol.cpp'; fi`

mosh-VM.o: VM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-VM.o -MD -MP -MF $(DEPDIR)/mosh-VM.Tpo -c -o mosh-VM.o `test -f 'VM.cpp' || echo '$(srcdir)/'`VM.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-VM.Tpo $(DEPDIR)/mosh-VM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM.cpp' object='mosh-VM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-VM.o `test -f 'VM.cpp' || echo '$(srcdir)/'`VM.cpp

mosh-VM.obj: VM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-VM.obj -MD -MP -MF $(DEPDIR)/mosh-VM.Tpo -c -o mosh-VM.obj `if test -f 'VM.cpp'; then $(CYGPATH_W) 'VM.cpp'; else $(CYGPATH_W) '$(srcdir)/VM.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-VM.Tpo $(DEPDIR)/mosh-VM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM.cpp' object='mosh-VM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-VM.obj `if test -f 'VM.cpp'; then $(CYGPATH_W) 'VM.cpp'; else $(CYGPATH_W) '$(srcdir)/VM.cpp'; fi`

mosh-Scanner.o: Scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Scanner.o -MD -MP -MF $(DEPDIR)/mosh-Scanner.Tpo -c -o mosh-Scanner.o `test -f 'Scanner.cpp' || echo '$(srcdir)/'`Scanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Scanner.Tpo $(DEPDIR)/mosh-Scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Scanner.cpp' object='mosh-Scanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Scanner.o `test -f 'Scanner.cpp' || echo '$(srcdir)/'`Scanner.cpp

mosh-Scanner.obj: Scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Scanner.obj -MD -MP -MF $(DEPDIR)/mosh-Scanner.Tpo -c -o mosh-Scanner.obj `if test -f 'Scanner.cpp'; then $(CYGPATH_W) 'Scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/Scanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Scanner.Tpo $(DEPDIR)/mosh-Scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Scanner.cpp' object='mosh-Scanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Scanner.obj `if test -f 'Scanner.cpp'; then $(CYGPATH_W) 'Scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/Scanner.cpp'; fi`

mosh-NumberScanner.o: NumberScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-NumberScanner.o -MD -MP -MF $(DEPDIR)/mosh-NumberScanner.Tpo -c -o mosh-NumberScanner.o `test -f 'NumberScanner.cpp' || echo '$(srcdir)/'`NumberScanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-NumberScanner.Tpo $(DEPDIR)/mosh-NumberScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberScanner.cpp' object='mosh-NumberScanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-NumberScanner.o `test -f 'NumberScanner.cpp' || echo '$(srcdir)/'`NumberScanner.cpp

mosh-NumberScanner.obj: NumberScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-NumberScanner.obj -MD -MP -MF $(DEPDIR)/mosh-NumberScanner.Tpo -c -o mosh-NumberScanner.obj `if test -f 'NumberScanner.cpp'; then $(CYGPATH_W) 'NumberScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberScanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-NumberScanner.Tpo $(DEPDIR)/mosh-NumberScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberScanner.cpp' object='mosh-NumberScanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-NumberScanner.obj `if test -f 'NumberScanner.cpp'; then $(CYGPATH_W) 'NumberScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberScanner.cpp'; fi`

mosh-ByteArrayBinaryInputPort.o: ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ByteArrayBinaryInputPort.o -MD -MP -MF $(DEPDIR)/mosh-ByteArrayBinaryInputPort.Tpo -c -o mosh-ByteArrayBinaryInputPort.o `test -f 'ByteArrayBinaryInputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ByteArrayBinaryInputPort.Tpo $(DEPDIR)/mosh-ByteArrayBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryInputPort.cpp' object='mosh-ByteArrayBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ByteArrayBinaryInputPort.o `test -f 'ByteArrayBinaryInputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryInputPort.cpp

mosh-ByteArrayBinaryInputPort.obj: ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ByteArrayBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/mosh-ByteArrayBinaryInputPort.Tpo -c -o mosh-ByteArrayBinaryInputPort.obj `if test -f 'ByteArrayBinaryInputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ByteArrayBinaryInputPort.Tpo $(DEPDIR)/mosh-ByteArrayBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryInputPort.cpp' object='mosh-ByteArrayBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ByteArrayBinaryInputPort.obj `if test -f 'ByteArrayBinaryInputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryInputPort.cpp'; fi`

mosh-ScannerHelper.o: ScannerHelper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ScannerHelper.o -MD -MP -MF $(DEPDIR)/mosh-ScannerHelper.Tpo -c -o mosh-ScannerHelper.o `test -f 'ScannerHelper.cpp' || echo '$(srcdir)/'`ScannerHelper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ScannerHelper.Tpo $(DEPDIR)/mosh-ScannerHelper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScannerHelper.cpp' object='mosh-ScannerHelper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ScannerHelper.o `test -f 'ScannerHelper.cpp' || echo '$(srcdir)/'`ScannerHelper.cpp

mosh-ScannerHelper.obj: ScannerHelper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ScannerHelper.obj -MD -MP -MF $(DEPDIR)/mosh-ScannerHelper.Tpo -c -o mosh-ScannerHelper.obj `if test -f 'ScannerHelper.cpp'; then $(CYGPATH_W) 'ScannerHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/ScannerHelper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ScannerHelper.Tpo $(DEPDIR)/mosh-ScannerHelper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScannerHelper.cpp' object='mosh-ScannerHelper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ScannerHelper.obj `if test -f 'ScannerHelper.cpp'; then $(CYGPATH_W) 'ScannerHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/ScannerHelper.cpp'; fi`

mosh-Reader.tab.o: Reader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Reader.tab.o -MD -MP -MF $(DEPDIR)/mosh-Reader.tab.Tpo -c -o mosh-Reader.tab.o `test -f 'Reader.tab.cpp' || echo '$(srcdir)/'`Reader.tab.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Reader.tab.Tpo $(DEPDIR)/mosh-Reader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.tab.cpp' object='mosh-Reader.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Reader.tab.o `test -f 'Reader.tab.cpp' || echo '$(srcdir)/'`Reader.tab.cpp

mosh-Reader.tab.obj: Reader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Reader.tab.obj -MD -MP -MF $(DEPDIR)/mosh-Reader.tab.Tpo -c -o mosh-Reader.tab.obj `if test -f 'Reader.tab.cpp'; then $(CYGPATH_W) 'Reader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Reader.tab.Tpo $(DEPDIR)/mosh-Reader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.tab.cpp' object='mosh-Reader.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Reader.tab.obj `if test -f 'Reader.tab.cpp'; then $(CYGPATH_W) 'Reader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.tab.cpp'; fi`

mosh-NumberReader.tab.o: NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-NumberReader.tab.o -MD -MP -MF $(DEPDIR)/mosh-NumberReader.tab.Tpo -c -o mosh-NumberReader.tab.o `test -f 'NumberReader.tab.cpp' || echo '$(srcdir)/'`NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-NumberReader.tab.Tpo $(DEPDIR)/mosh-NumberReader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.tab.cpp' object='mosh-NumberReader.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-NumberReader.tab.o `test -f 'NumberReader.tab.cpp' || echo '$(srcdir)/'`NumberReader.tab.cpp

mosh-NumberReader.tab.obj: NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-NumberReader.tab.obj -MD -MP -MF $(DEPDIR)/mosh-NumberReader.tab.Tpo -c -o mosh-NumberReader.tab.obj `if test -f 'NumberReader.tab.cpp'; then $(CYGPATH_W) 'NumberReader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-NumberReader.tab.Tpo $(DEPDIR)/mosh-NumberReader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.tab.cpp' object='mosh-NumberReader.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-NumberReader.tab.obj `if test -f 'NumberReader.tab.cpp'; then $(CYGPATH_W) 'NumberReader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.tab.cpp'; fi`

mosh-FileBinaryInputPort.o: FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FileBinaryInputPort.o -MD -MP -MF $(DEPDIR)/mosh-FileBinaryInputPort.Tpo -c -o mosh-FileBinaryInputPort.o `test -f 'FileBinaryInputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FileBinaryInputPort.Tpo $(DEPDIR)/mosh-FileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputPort.cpp' object='mosh-FileBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FileBinaryInputPort.o `test -f 'FileBinaryInputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputPort.cpp

mosh-FileBinaryInputPort.obj: FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FileBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/mosh-FileBinaryInputPort.Tpo -c -o mosh-FileBinaryInputPort.obj `if test -f 'FileBinaryInputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FileBinaryInputPort.Tpo $(DEPDIR)/mosh-FileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputPort.cpp' object='mosh-FileBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FileBinaryInputPort.obj `if test -f 'FileBinaryInputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputPort.cpp'; fi`

mosh-FileBinaryOutputPort.o: FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FileBinaryOutputPort.o -MD -MP -MF $(DEPDIR)/mosh-FileBinaryOutputPort.Tpo -c -o mosh-FileBinaryOutputPort.o `test -f 'FileBinaryOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FileBinaryOutputPort.Tpo $(DEPDIR)/mosh-FileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryOutputPort.cpp' object='mosh-FileBinaryOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FileBinaryOutputPort.o `test -f 'FileBinaryOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryOutputPort.cpp

mosh-FileBinaryOutputPort.obj: FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FileBinaryOutputPort.obj -MD -MP -MF $(DEPDIR)/mosh-FileBinaryOutputPort.Tpo -c -o mosh-FileBinaryOutputPort.obj `if test -f 'FileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FileBinaryOutputPort.Tpo $(DEPDIR)/mosh-FileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryOutputPort.cpp' object='mosh-FileBinaryOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FileBinaryOutputPort.obj `if test -f 'FileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryOutputPort.cpp'; fi`

mosh-CustomBinaryInputPort.o: CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CustomBinaryInputPort.o -MD -MP -MF $(DEPDIR)/mosh-CustomBinaryInputPort.Tpo -c -o mosh-CustomBinaryInputPort.o `test -f 'CustomBinaryInputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CustomBinaryInputPort.Tpo $(DEPDIR)/mosh-CustomBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputPort.cpp' object='mosh-CustomBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CustomBinaryInputPort.o `test -f 'CustomBinaryInputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputPort.cpp

mosh-CustomBinaryInputPort.obj: CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CustomBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/mosh-CustomBinaryInputPort.Tpo -c -o mosh-CustomBinaryInputPort.obj `if test -f 'CustomBinaryInputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CustomBinaryInputPort.Tpo $(DEPDIR)/mosh-CustomBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputPort.cpp' object='mosh-CustomBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CustomBinaryInputPort.obj `if test -f 'CustomBinaryInputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputPort.cpp'; fi`

mosh-TextualOutputPort.o: TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-TextualOutputPort.o -MD -MP -MF $(DEPDIR)/mosh-TextualOutputPort.Tpo -c -o mosh-TextualOutputPort.o `test -f 'TextualOutputPort.cpp' || echo '$(srcdir)/'`TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-TextualOutputPort.Tpo $(DEPDIR)/mosh-TextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualOutputPort.cpp' object='mosh-TextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-TextualOutputPort.o `test -f 'TextualOutputPort.cpp' || echo '$(srcdir)/'`TextualOutputPort.cpp

mosh-TextualOutputPort.obj: TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-TextualOutputPort.obj -MD -MP -MF $(DEPDIR)/mosh-TextualOutputPort.Tpo -c -o mosh-TextualOutputPort.obj `if test -f 'TextualOutputPort.cpp'; then $(CYGPATH_W) 'TextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-TextualOutputPort.Tpo $(DEPDIR)/mosh-TextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualOutputPort.cpp' object='mosh-TextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-TextualOutputPort.obj `if test -f 'TextualOutputPort.cpp'; then $(CYGPATH_W) 'TextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualOutputPort.cpp'; fi`

mosh-TextualByteVectorOutputPort.o: TextualByteVectorOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-TextualByteVectorOutputPort.o -MD -MP -MF $(DEPDIR)/mosh-TextualByteVectorOutputPort.Tpo -c -o mosh-TextualByteVectorOutputPort.o `test -f 'TextualByteVectorOutputPort.cpp' || echo '$(srcdir)/'`TextualByteVectorOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-TextualByteVectorOutputPort.Tpo $(DEPDIR)/mosh-TextualByteVectorOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualByteVectorOutputPort.cpp' object='mosh-TextualByteVectorOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-TextualByteVectorOutputPort.o `test -f 'TextualByteVectorOutputPort.cpp' || echo '$(srcdir)/'`TextualByteVectorOutputPort.cpp

mosh-TextualByteVectorOutputPort.obj: TextualByteVectorOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-TextualByteVectorOutputPort.obj -MD -MP -MF $(DEPDIR)/mosh-TextualByteVectorOutputPort.Tpo -c -o mosh-TextualByteVectorOutputPort.obj `if test -f 'TextualByteVectorOutputPort.cpp'; then $(CYGPATH_W) 'TextualByteVectorOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualByteVectorOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-TextualByteVectorOutputPort.Tpo $(DEPDIR)/mosh-TextualByteVectorOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualByteVectorOutputPort.cpp' object='mosh-TextualByteVectorOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-TextualByteVectorOutputPort.obj `if test -f 'TextualByteVectorOutputPort.cpp'; then $(CYGPATH_W) 'TextualByteVectorOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualByteVectorOutputPort.cpp'; fi`

mosh-TextualInputPort.o: TextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-TextualInputPort.o -MD -MP -MF $(DEPDIR)/mosh-TextualInputPort.Tpo -c -o mosh-TextualInputPort.o `test -f 'TextualInputPort.cpp' || echo '$(srcdir)/'`TextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-TextualInputPort.Tpo $(DEPDIR)/mosh-TextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualInputPort.cpp' object='mosh-TextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-TextualInputPort.o `test -f 'TextualInputPort.cpp' || echo '$(srcdir)/'`TextualInputPort.cpp

mosh-TextualInputPort.obj: TextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-TextualInputPort.obj -MD -MP -MF $(DEPDIR)/mosh-TextualInputPort.Tpo -c -o mosh-TextualInputPort.obj `if test -f 'TextualInputPort.cpp'; then $(CYGPATH_W) 'TextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-TextualInputPort.Tpo $(DEPDIR)/mosh-TextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualInputPort.cpp' object='mosh-TextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-TextualInputPort.obj `if test -f 'TextualInputPort.cpp'; then $(CYGPATH_W) 'TextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualInputPort.cpp'; fi`

mosh-StringTextualOutputPort.o: StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-StringTextualOutputPort.o -MD -MP -MF $(DEPDIR)/mosh-StringTextualOutputPort.Tpo -c -o mosh-StringTextualOutputPort.o `test -f 'StringTextualOutputPort.cpp' || echo '$(srcdir)/'`StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-StringTextualOutputPort.Tpo $(DEPDIR)/mosh-StringTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualOutputPort.cpp' object='mosh-StringTextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-StringTextualOutputPort.o `test -f 'StringTextualOutputPort.cpp' || echo '$(srcdir)/'`StringTextualOutputPort.cpp

mosh-StringTextualOutputPort.obj: StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-StringTextualOutputPort.obj -MD -MP -MF $(DEPDIR)/mosh-StringTextualOutputPort.Tpo -c -o mosh-StringTextualOutputPort.obj `if test -f 'StringTextualOutputPort.cpp'; then $(CYGPATH_W) 'StringTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-StringTextualOutputPort.Tpo $(DEPDIR)/mosh-StringTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualOutputPort.cpp' object='mosh-StringTextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-StringTextualOutputPort.obj `if test -f 'StringTextualOutputPort.cpp'; then $(CYGPATH_W) 'StringTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualOutputPort.cpp'; fi`

mosh-StringTextualInputPort.o: StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-StringTextualInputPort.o -MD -MP -MF $(DEPDIR)/mosh-StringTextualInputPort.Tpo -c -o mosh-StringTextualInputPort.o `test -f 'StringTextualInputPort.cpp' || echo '$(srcdir)/'`StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-StringTextualInputPort.Tpo $(DEPDIR)/mosh-StringTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualInputPort.cpp' object='mosh-StringTextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-StringTextualInputPort.o `test -f 'StringTextualInputPort.cpp' || echo '$(srcdir)/'`StringTextualInputPort.cpp

mosh-StringTextualInputPort.obj: StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-StringTextualInputPort.obj -MD -MP -MF $(DEPDIR)/mosh-StringTextualInputPort.Tpo -c -o mosh-StringTextualInputPort.obj `if test -f 'StringTextualInputPort.cpp'; then $(CYGPATH_W) 'StringTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-StringTextualInputPort.Tpo $(DEPDIR)/mosh-StringTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualInputPort.cpp' object='mosh-StringTextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-StringTextualInputPort.obj `if test -f 'StringTextualInputPort.cpp'; then $(CYGPATH_W) 'StringTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualInputPort.cpp'; fi`

mosh-UTF8Codec.o: UTF8Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UTF8Codec.o -MD -MP -MF $(DEPDIR)/mosh-UTF8Codec.Tpo -c -o mosh-UTF8Codec.o `test -f 'UTF8Codec.cpp' || echo '$(srcdir)/'`UTF8Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UTF8Codec.Tpo $(DEPDIR)/mosh-UTF8Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF8Codec.cpp' object='mosh-UTF8Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UTF8Codec.o `test -f 'UTF8Codec.cpp' || echo '$(srcdir)/'`UTF8Codec.cpp

mosh-UTF8Codec.obj: UTF8Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UTF8Codec.obj -MD -MP -MF $(DEPDIR)/mosh-UTF8Codec.Tpo -c -o mosh-UTF8Codec.obj `if test -f 'UTF8Codec.cpp'; then $(CYGPATH_W) 'UTF8Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF8Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UTF8Codec.Tpo $(DEPDIR)/mosh-UTF8Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF8Codec.cpp' object='mosh-UTF8Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UTF8Codec.obj `if test -f 'UTF8Codec.cpp'; then $(CYGPATH_W) 'UTF8Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF8Codec.cpp'; fi`

mosh-UTF16Codec.o: UTF16Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UTF16Codec.o -MD -MP -MF $(DEPDIR)/mosh-UTF16Codec.Tpo -c -o mosh-UTF16Codec.o `test -f 'UTF16Codec.cpp' || echo '$(srcdir)/'`UTF16Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UTF16Codec.Tpo $(DEPDIR)/mosh-UTF16Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF16Codec.cpp' object='mosh-UTF16Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UTF16Codec.o `test -f 'UTF16Codec.cpp' || echo '$(srcdir)/'`UTF16Codec.cpp

mosh-UTF16Codec.obj: UTF16Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UTF16Codec.obj -MD -MP -MF $(DEPDIR)/mosh-UTF16Codec.Tpo -c -o mosh-UTF16Codec.obj `if test -f 'UTF16Codec.cpp'; then $(CYGPATH_W) 'UTF16Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF16Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UTF16Codec.Tpo $(DEPDIR)/mosh-UTF16Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF16Codec.cpp' object='mosh-UTF16Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UTF16Codec.obj `if test -f 'UTF16Codec.cpp'; then $(CYGPATH_W) 'UTF16Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF16Codec.cpp'; fi`

mosh-UTF32Codec.o: UTF32Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UTF32Codec.o -MD -MP -MF $(DEPDIR)/mosh-UTF32Codec.Tpo -c -o mosh-UTF32Codec.o `test -f 'UTF32Codec.cpp' || echo '$(srcdir)/'`UTF32Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UTF32Codec.Tpo $(DEPDIR)/mosh-UTF32Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF32Codec.cpp' object='mosh-UTF32Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UTF32Codec.o `test -f 'UTF32Codec.cpp' || echo '$(srcdir)/'`UTF32Codec.cpp

mosh-UTF32Codec.obj: UTF32Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-UTF32Codec.obj -MD -MP -MF $(DEPDIR)/mosh-UTF32Codec.Tpo -c -o mosh-UTF32Codec.obj `if test -f 'UTF32Codec.cpp'; then $(CYGPATH_W) 'UTF32Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF32Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-UTF32Codec.Tpo $(DEPDIR)/mosh-UTF32Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF32Codec.cpp' object='mosh-UTF32Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-UTF32Codec.obj `if test -f 'UTF32Codec.cpp'; then $(CYGPATH_W) 'UTF32Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF32Codec.cpp'; fi`

mosh-EqHashTable.o: EqHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-EqHashTable.o -MD -MP -MF $(DEPDIR)/mosh-EqHashTable.Tpo -c -o mosh-EqHashTable.o `test -f 'EqHashTable.cpp' || echo '$(srcdir)/'`EqHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-EqHashTable.Tpo $(DEPDIR)/mosh-EqHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqHashTable.cpp' object='mosh-EqHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-EqHashTable.o `test -f 'EqHashTable.cpp' || echo '$(srcdir)/'`EqHashTable.cpp

mosh-EqHashTable.obj: EqHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-EqHashTable.obj -MD -MP -MF $(DEPDIR)/mosh-EqHashTable.Tpo -c -o mosh-EqHashTable.obj `if test -f 'EqHashTable.cpp'; then $(CYGPATH_W) 'EqHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-EqHashTable.Tpo $(DEPDIR)/mosh-EqHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqHashTable.cpp' object='mosh-EqHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-EqHashTable.obj `if test -f 'EqHashTable.cpp'; then $(CYGPATH_W) 'EqHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqHashTable.cpp'; fi`

mosh-SString.o: SString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-SString.o -MD -MP -MF $(DEPDIR)/mosh-SString.Tpo -c -o mosh-SString.o `test -f 'SString.cpp' || echo '$(srcdir)/'`SString.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-SString.Tpo $(DEPDIR)/mosh-SString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SString.cpp' object='mosh-SString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-SString.o `test -f 'SString.cpp' || echo '$(srcdir)/'`SString.cpp

mosh-SString.obj: SString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-SString.obj -MD -MP -MF $(DEPDIR)/mosh-SString.Tpo -c -o mosh-SString.obj `if test -f 'SString.cpp'; then $(CYGPATH_W) 'SString.cpp'; else $(CYGPATH_W) '$(srcdir)/SString.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-SString.Tpo $(DEPDIR)/mosh-SString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SString.cpp' object='mosh-SString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-SString.obj `if test -f 'SString.cpp'; then $(CYGPATH_W) 'SString.cpp'; else $(CYGPATH_W) '$(srcdir)/SString.cpp'; fi`

mosh-GenericHashTable.o: GenericHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-GenericHashTable.o -MD -MP -MF $(DEPDIR)/mosh-GenericHashTable.Tpo -c -o mosh-GenericHashTable.o `test -f 'GenericHashTable.cpp' || echo '$(srcdir)/'`GenericHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-GenericHashTable.Tpo $(DEPDIR)/mosh-GenericHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GenericHashTable.cpp' object='mosh-GenericHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-GenericHashTable.o `test -f 'GenericHashTable.cpp' || echo '$(srcdir)/'`GenericHashTable.cpp

mosh-GenericHashTable.obj: GenericHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-GenericHashTable.obj -MD -MP -MF $(DEPDIR)/mosh-GenericHashTable.Tpo -c -o mosh-GenericHashTable.obj `if test -f 'GenericHashTable.cpp'; then $(CYGPATH_W) 'GenericHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/GenericHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-GenericHashTable.Tpo $(DEPDIR)/mosh-GenericHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GenericHashTable.cpp' object='mosh-GenericHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-GenericHashTable.obj `if test -f 'GenericHashTable.cpp'; then $(CYGPATH_W) 'GenericHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/GenericHashTable.cpp'; fi`

mosh-Object.o: Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Object.o -MD -MP -MF $(DEPDIR)/mosh-Object.Tpo -c -o mosh-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Object.Tpo $(DEPDIR)/mosh-Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Object.cpp' object='mosh-Object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp

mosh-Object.obj: Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Object.obj -MD -MP -MF $(DEPDIR)/mosh-Object.Tpo -c -o mosh-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Object.Tpo $(DEPDIR)/mosh-Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Object.cpp' object='mosh-Object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`

mosh-RecordTypeDescriptor.o: RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RecordTypeDescriptor.o -MD -MP -MF $(DEPDIR)/mosh-RecordTypeDescriptor.Tpo -c -o mosh-RecordTypeDescriptor.o `test -f 'RecordTypeDescriptor.cpp' || echo '$(srcdir)/'`RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RecordTypeDescriptor.Tpo $(DEPDIR)/mosh-RecordTypeDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordTypeDescriptor.cpp' object='mosh-RecordTypeDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RecordTypeDescriptor.o `test -f 'RecordTypeDescriptor.cpp' || echo '$(srcdir)/'`RecordTypeDescriptor.cpp

mosh-RecordTypeDescriptor.obj: RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RecordTypeDescriptor.obj -MD -MP -MF $(DEPDIR)/mosh-RecordTypeDescriptor.Tpo -c -o mosh-RecordTypeDescriptor.obj `if test -f 'RecordTypeDescriptor.cpp'; then $(CYGPATH_W) 'RecordTypeDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordTypeDescriptor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RecordTypeDescriptor.Tpo $(DEPDIR)/mosh-RecordTypeDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordTypeDescriptor.cpp' object='mosh-RecordTypeDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RecordTypeDescriptor.obj `if test -f 'RecordTypeDescriptor.cpp'; then $(CYGPATH_W) 'RecordTypeDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordTypeDescriptor.cpp'; fi`

mosh-RecordConstructorDescriptor.o: RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RecordConstructorDescriptor.o -MD -MP -MF $(DEPDIR)/mosh-RecordConstructorDescriptor.Tpo -c -o mosh-RecordConstructorDescriptor.o `test -f 'RecordConstructorDescriptor.cpp' || echo '$(srcdir)/'`RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RecordConstructorDescriptor.Tpo $(DEPDIR)/mosh-RecordConstructorDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordConstructorDescriptor.cpp' object='mosh-RecordConstructorDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RecordConstructorDescriptor.o `test -f 'RecordConstructorDescriptor.cpp' || echo '$(srcdir)/'`RecordConstructorDescriptor.cpp

mosh-RecordConstructorDescriptor.obj: RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RecordConstructorDescriptor.obj -MD -MP -MF $(DEPDIR)/mosh-RecordConstructorDescriptor.Tpo -c -o mosh-RecordConstructorDescriptor.obj `if test -f 'RecordConstructorDescriptor.cpp'; then $(CYGPATH_W) 'RecordConstructorDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordConstructorDescriptor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RecordConstructorDescriptor.Tpo $(DEPDIR)/mosh-RecordConstructorDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordConstructorDescriptor.cpp' object='mosh-RecordConstructorDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RecordConstructorDescriptor.obj `if test -f 'RecordConstructorDescriptor.cpp'; then $(CYGPATH_W) 'RecordConstructorDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordConstructorDescriptor.cpp'; fi`

mosh-Record.o: Record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Record.o -MD -MP -MF $(DEPDIR)/mosh-Record.Tpo -c -o mosh-Record.o `test -f 'Record.cpp' || echo '$(srcdir)/'`Record.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Record.Tpo $(DEPDIR)/mosh-Record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Record.cpp' object='mosh-Record.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Record.o `test -f 'Record.cpp' || echo '$(srcdir)/'`Record.cpp

mosh-Record.obj: Record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Record.obj -MD -MP -MF $(DEPDIR)/mosh-Record.Tpo -c -o mosh-Record.obj `if test -f 'Record.cpp'; then $(CYGPATH_W) 'Record.cpp'; else $(CYGPATH_W) '$(srcdir)/Record.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Record.Tpo $(DEPDIR)/mosh-Record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Record.cpp' object='mosh-Record.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Record.obj `if test -f 'Record.cpp'; then $(CYGPATH_W) 'Record.cpp'; else $(CYGPATH_W) '$(srcdir)/Record.cpp'; fi`

mosh-RecordProcedures.o: RecordProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RecordProcedures.o -MD -MP -MF $(DEPDIR)/mosh-RecordProcedures.Tpo -c -o mosh-RecordProcedures.o `test -f 'RecordProcedures.cpp' || echo '$(srcdir)/'`RecordProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RecordProcedures.Tpo $(DEPDIR)/mosh-RecordProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordProcedures.cpp' object='mosh-RecordProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RecordProcedures.o `test -f 'RecordProcedures.cpp' || echo '$(srcdir)/'`RecordProcedures.cpp

mosh-RecordProcedures.obj: RecordProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RecordProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-RecordProcedures.Tpo -c -o mosh-RecordProcedures.obj `if test -f 'RecordProcedures.cpp'; then $(CYGPATH_W) 'RecordProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RecordProcedures.Tpo $(DEPDIR)/mosh-RecordProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordProcedures.cpp' object='mosh-RecordProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RecordProcedures.obj `if test -f 'RecordProcedures.cpp'; then $(CYGPATH_W) 'RecordProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordProcedures.cpp'; fi`

mosh-ConditionProcedures.o: ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ConditionProcedures.o -MD -MP -MF $(DEPDIR)/mosh-ConditionProcedures.Tpo -c -o mosh-ConditionProcedures.o `test -f 'ConditionProcedures.cpp' || echo '$(srcdir)/'`ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ConditionProcedures.Tpo $(DEPDIR)/mosh-ConditionProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConditionProcedures.cpp' object='mosh-ConditionProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ConditionProcedures.o `test -f 'ConditionProcedures.cpp' || echo '$(srcdir)/'`ConditionProcedures.cpp

mosh-ConditionProcedures.obj: ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ConditionProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-ConditionProcedures.Tpo -c -o mosh-ConditionProcedures.obj `if test -f 'ConditionProcedures.cpp'; then $(CYGPATH_W) 'ConditionProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ConditionProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ConditionProcedures.Tpo $(DEPDIR)/mosh-ConditionProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConditionProcedures.cpp' object='mosh-ConditionProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ConditionProcedures.obj `if test -f 'ConditionProcedures.cpp'; then $(CYGPATH_W) 'ConditionProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ConditionProcedures.cpp'; fi`

mosh-CompilerProcedures.o: CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CompilerProcedures.o -MD -MP -MF $(DEPDIR)/mosh-CompilerProcedures.Tpo -c -o mosh-CompilerProcedures.o `test -f 'CompilerProcedures.cpp' || echo '$(srcdir)/'`CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CompilerProcedures.Tpo $(DEPDIR)/mosh-CompilerProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompilerProcedures.cpp' object='mosh-CompilerProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CompilerProcedures.o `test -f 'CompilerProcedures.cpp' || echo '$(srcdir)/'`CompilerProcedures.cpp

mosh-CompilerProcedures.obj: CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CompilerProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-CompilerProcedures.Tpo -c -o mosh-CompilerProcedures.obj `if test -f 'CompilerProcedures.cpp'; then $(CYGPATH_W) 'CompilerProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/CompilerProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CompilerProcedures.Tpo $(DEPDIR)/mosh-CompilerProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompilerProcedures.cpp' object='mosh-CompilerProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CompilerProcedures.obj `if test -f 'CompilerProcedures.cpp'; then $(CYGPATH_W) 'CompilerProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/CompilerProcedures.cpp'; fi`

mosh-HashTableProceduures.o: HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-HashTableProceduures.o -MD -MP -MF $(DEPDIR)/mosh-HashTableProceduures.Tpo -c -o mosh-HashTableProceduures.o `test -f 'HashTableProceduures.cpp' || echo '$(srcdir)/'`HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-HashTableProceduures.Tpo $(DEPDIR)/mosh-HashTableProceduures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HashTableProceduures.cpp' object='mosh-HashTableProceduures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-HashTableProceduures.o `test -f 'HashTableProceduures.cpp' || echo '$(srcdir)/'`HashTableProceduures.cpp

mosh-HashTableProceduures.obj: HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-HashTableProceduures.obj -MD -MP -MF $(DEPDIR)/mosh-HashTableProceduures.Tpo -c -o mosh-HashTableProceduures.obj `if test -f 'HashTableProceduures.cpp'; then $(CYGPATH_W) 'HashTableProceduures.cpp'; else $(CYGPATH_W) '$(srcdir)/HashTableProceduures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-HashTableProceduures.Tpo $(DEPDIR)/mosh-HashTableProceduures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HashTableProceduures.cpp' object='mosh-HashTableProceduures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-HashTableProceduures.obj `if test -f 'HashTableProceduures.cpp'; then $(CYGPATH_W) 'HashTableProceduures.cpp'; else $(CYGPATH_W) '$(srcdir)/HashTableProceduures.cpp'; fi`

mosh-RegexpProcedures.o: RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RegexpProcedures.o -MD -MP -MF $(DEPDIR)/mosh-RegexpProcedures.Tpo -c -o mosh-RegexpProcedures.o `test -f 'RegexpProcedures.cpp' || echo '$(srcdir)/'`RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RegexpProcedures.Tpo $(DEPDIR)/mosh-RegexpProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegexpProcedures.cpp' object='mosh-RegexpProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RegexpProcedures.o `test -f 'RegexpProcedures.cpp' || echo '$(srcdir)/'`RegexpProcedures.cpp

mosh-RegexpProcedures.obj: RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-RegexpProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-RegexpProcedures.Tpo -c -o mosh-RegexpProcedures.obj `if test -f 'RegexpProcedures.cpp'; then $(CYGPATH_W) 'RegexpProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RegexpProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-RegexpProcedures.Tpo $(DEPDIR)/mosh-RegexpProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegexpProcedures.cpp' object='mosh-RegexpProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-RegexpProcedures.obj `if test -f 'RegexpProcedures.cpp'; then $(CYGPATH_W) 'RegexpProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RegexpProcedures.cpp'; fi`

mosh-StringProcedures.o: StringProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-StringProcedures.o -MD -MP -MF $(DEPDIR)/mosh-StringProcedures.Tpo -c -o mosh-StringProcedures.o `test -f 'StringProcedures.cpp' || echo '$(srcdir)/'`StringProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-StringProcedures.Tpo $(DEPDIR)/mosh-StringProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringProcedures.cpp' object='mosh-StringProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-StringProcedures.o `test -f 'StringProcedures.cpp' || echo '$(srcdir)/'`StringProcedures.cpp

mosh-StringProcedures.obj: StringProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-StringProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-StringProcedures.Tpo -c -o mosh-StringProcedures.obj `if test -f 'StringProcedures.cpp'; then $(CYGPATH_W) 'StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/StringProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-StringProcedures.Tpo $(DEPDIR)/mosh-StringProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringProcedures.cpp' object='mosh-StringProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-StringProcedures.obj `if test -f 'StringProcedures.cpp'; then $(CYGPATH_W) 'StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/StringProcedures.cpp'; fi`

mosh-PortProcedures.o: PortProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-PortProcedures.o -MD -MP -MF $(DEPDIR)/mosh-PortProcedures.Tpo -c -o mosh-PortProcedures.o `test -f 'PortProcedures.cpp' || echo '$(srcdir)/'`PortProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-PortProcedures.Tpo $(DEPDIR)/mosh-PortProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortProcedures.cpp' object='mosh-PortProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-PortProcedures.o `test -f 'PortProcedures.cpp' || echo '$(srcdir)/'`PortProcedures.cpp

mosh-PortProcedures.obj: PortProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-PortProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-PortProcedures.Tpo -c -o mosh-PortProcedures.obj `if test -f 'PortProcedures.cpp'; then $(CYGPATH_W) 'PortProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/PortProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-PortProcedures.Tpo $(DEPDIR)/mosh-PortProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortProcedures.cpp' object='mosh-PortProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-PortProcedures.obj `if test -f 'PortProcedures.cpp'; then $(CYGPATH_W) 'PortProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/PortProcedures.cpp'; fi`

mosh-ListProcedures.o: ListProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ListProcedures.o -MD -MP -MF $(DEPDIR)/mosh-ListProcedures.Tpo -c -o mosh-ListProcedures.o `test -f 'ListProcedures.cpp' || echo '$(srcdir)/'`ListProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ListProcedures.Tpo $(DEPDIR)/mosh-ListProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListProcedures.cpp' object='mosh-ListProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ListProcedures.o `test -f 'ListProcedures.cpp' || echo '$(srcdir)/'`ListProcedures.cpp

mosh-ListProcedures.obj: ListProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ListProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-ListProcedures.Tpo -c -o mosh-ListProcedures.obj `if test -f 'ListProcedures.cpp'; then $(CYGPATH_W) 'ListProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ListProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ListProcedures.Tpo $(DEPDIR)/mosh-ListProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListProcedures.cpp' object='mosh-ListProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ListProcedures.obj `if test -f 'ListProcedures.cpp'; then $(CYGPATH_W) 'ListProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ListProcedures.cpp'; fi`

mosh-ErrorProcedures.o: ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ErrorProcedures.o -MD -MP -MF $(DEPDIR)/mosh-ErrorProcedures.Tpo -c -o mosh-ErrorProcedures.o `test -f 'ErrorProcedures.cpp' || echo '$(srcdir)/'`ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ErrorProcedures.Tpo $(DEPDIR)/mosh-ErrorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ErrorProcedures.cpp' object='mosh-ErrorProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ErrorProcedures.o `test -f 'ErrorProcedures.cpp' || echo '$(srcdir)/'`ErrorProcedures.cpp

mosh-ErrorProcedures.obj: ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ErrorProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-ErrorProcedures.Tpo -c -o mosh-ErrorProcedures.obj `if test -f 'ErrorProcedures.cpp'; then $(CYGPATH_W) 'ErrorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ErrorProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ErrorProcedures.Tpo $(DEPDIR)/mosh-ErrorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ErrorProcedures.cpp' object='mosh-ErrorProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ErrorProcedures.obj `if test -f 'ErrorProcedures.cpp'; then $(CYGPATH_W) 'ErrorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ErrorProcedures.cpp'; fi`

mosh-ArithmeticProcedures.o: ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ArithmeticProcedures.o -MD -MP -MF $(DEPDIR)/mosh-ArithmeticProcedures.Tpo -c -o mosh-ArithmeticProcedures.o `test -f 'ArithmeticProcedures.cpp' || echo '$(srcdir)/'`ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ArithmeticProcedures.Tpo $(DEPDIR)/mosh-ArithmeticProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ArithmeticProcedures.cpp' object='mosh-ArithmeticProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ArithmeticProcedures.o `test -f 'ArithmeticProcedures.cpp' || echo '$(srcdir)/'`ArithmeticProcedures.cpp

mosh-ArithmeticProcedures.obj: ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ArithmeticProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-ArithmeticProcedures.Tpo -c -o mosh-ArithmeticProcedures.obj `if test -f 'ArithmeticProcedures.cpp'; then $(CYGPATH_W) 'ArithmeticProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ArithmeticProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ArithmeticProcedures.Tpo $(DEPDIR)/mosh-ArithmeticProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ArithmeticProcedures.cpp' object='mosh-ArithmeticProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ArithmeticProcedures.obj `if test -f 'ArithmeticProcedures.cpp'; then $(CYGPATH_W) 'ArithmeticProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ArithmeticProcedures.cpp'; fi`

mosh-FlonumProcedures.o: FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FlonumProcedures.o -MD -MP -MF $(DEPDIR)/mosh-FlonumProcedures.Tpo -c -o mosh-FlonumProcedures.o `test -f 'FlonumProcedures.cpp' || echo '$(srcdir)/'`FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FlonumProcedures.Tpo $(DEPDIR)/mosh-FlonumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FlonumProcedures.cpp' object='mosh-FlonumProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FlonumProcedures.o `test -f 'FlonumProcedures.cpp' || echo '$(srcdir)/'`FlonumProcedures.cpp

mosh-FlonumProcedures.obj: FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FlonumProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-FlonumProcedures.Tpo -c -o mosh-FlonumProcedures.obj `if test -f 'FlonumProcedures.cpp'; then $(CYGPATH_W) 'FlonumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FlonumProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FlonumProcedures.Tpo $(DEPDIR)/mosh-FlonumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FlonumProcedures.cpp' object='mosh-FlonumProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FlonumProcedures.obj `if test -f 'FlonumProcedures.cpp'; then $(CYGPATH_W) 'FlonumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FlonumProcedures.cpp'; fi`

mosh-BitwiseProcedures.o: BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-BitwiseProcedures.o -MD -MP -MF $(DEPDIR)/mosh-BitwiseProcedures.Tpo -c -o mosh-BitwiseProcedures.o `test -f 'BitwiseProcedures.cpp' || echo '$(srcdir)/'`BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-BitwiseProcedures.Tpo $(DEPDIR)/mosh-BitwiseProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitwiseProcedures.cpp' object='mosh-BitwiseProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-BitwiseProcedures.o `test -f 'BitwiseProcedures.cpp' || echo '$(srcdir)/'`BitwiseProcedures.cpp

mosh-BitwiseProcedures.obj: BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-BitwiseProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-BitwiseProcedures.Tpo -c -o mosh-BitwiseProcedures.obj `if test -f 'BitwiseProcedures.cpp'; then $(CYGPATH_W) 'BitwiseProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/BitwiseProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-BitwiseProcedures.Tpo $(DEPDIR)/mosh-BitwiseProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitwiseProcedures.cpp' object='mosh-BitwiseProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-BitwiseProcedures.obj `if test -f 'BitwiseProcedures.cpp'; then $(CYGPATH_W) 'BitwiseProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/BitwiseProcedures.cpp'; fi`

mosh-ByteVectorProcedures.o: ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ByteVectorProcedures.o -MD -MP -MF $(DEPDIR)/mosh-ByteVectorProcedures.Tpo -c -o mosh-ByteVectorProcedures.o `test -f 'ByteVectorProcedures.cpp' || echo '$(srcdir)/'`ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ByteVectorProcedures.Tpo $(DEPDIR)/mosh-ByteVectorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteVectorProcedures.cpp' object='mosh-ByteVectorProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ByteVectorProcedures.o `test -f 'ByteVectorProcedures.cpp' || echo '$(srcdir)/'`ByteVectorProcedures.cpp

mosh-ByteVectorProcedures.obj: ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ByteVectorProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-ByteVectorProcedures.Tpo -c -o mosh-ByteVectorProcedures.obj `if test -f 'ByteVectorProcedures.cpp'; then $(CYGPATH_W) 'ByteVectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteVectorProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ByteVectorProcedures.Tpo $(DEPDIR)/mosh-ByteVectorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteVectorProcedures.cpp' object='mosh-ByteVectorProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ByteVectorProcedures.obj `if test -f 'ByteVectorProcedures.cpp'; then $(CYGPATH_W) 'ByteVectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteVectorProcedures.cpp'; fi`

mosh-Equivalent.o: Equivalent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Equivalent.o -MD -MP -MF $(DEPDIR)/mosh-Equivalent.Tpo -c -o mosh-Equivalent.o `test -f 'Equivalent.cpp' || echo '$(srcdir)/'`Equivalent.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Equivalent.Tpo $(DEPDIR)/mosh-Equivalent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Equivalent.cpp' object='mosh-Equivalent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Equivalent.o `test -f 'Equivalent.cpp' || echo '$(srcdir)/'`Equivalent.cpp

mosh-Equivalent.obj: Equivalent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Equivalent.obj -MD -MP -MF $(DEPDIR)/mosh-Equivalent.Tpo -c -o mosh-Equivalent.obj `if test -f 'Equivalent.cpp'; then $(CYGPATH_W) 'Equivalent.cpp'; else $(CYGPATH_W) '$(srcdir)/Equivalent.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Equivalent.Tpo $(DEPDIR)/mosh-Equivalent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Equivalent.cpp' object='mosh-Equivalent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Equivalent.obj `if test -f 'Equivalent.cpp'; then $(CYGPATH_W) 'Equivalent.cpp'; else $(CYGPATH_W) '$(srcdir)/Equivalent.cpp'; fi`

mosh-CompoundCondition.o: CompoundCondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CompoundCondition.o -MD -MP -MF $(DEPDIR)/mosh-CompoundCondition.Tpo -c -o mosh-CompoundCondition.o `test -f 'CompoundCondition.cpp' || echo '$(srcdir)/'`CompoundCondition.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CompoundCondition.Tpo $(DEPDIR)/mosh-CompoundCondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundCondition.cpp' object='mosh-CompoundCondition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CompoundCondition.o `test -f 'CompoundCondition.cpp' || echo '$(srcdir)/'`CompoundCondition.cpp

mosh-CompoundCondition.obj: CompoundCondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CompoundCondition.obj -MD -MP -MF $(DEPDIR)/mosh-CompoundCondition.Tpo -c -o mosh-CompoundCondition.obj `if test -f 'CompoundCondition.cpp'; then $(CYGPATH_W) 'CompoundCondition.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundCondition.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CompoundCondition.Tpo $(DEPDIR)/mosh-CompoundCondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundCondition.cpp' object='mosh-CompoundCondition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CompoundCondition.obj `if test -f 'CompoundCondition.cpp'; then $(CYGPATH_W) 'CompoundCondition.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundCondition.cpp'; fi`

mosh-ucs4string.o: ucs4string.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ucs4string.o -MD -MP -MF $(DEPDIR)/mosh-ucs4string.Tpo -c -o mosh-ucs4string.o `test -f 'ucs4string.cpp' || echo '$(srcdir)/'`ucs4string.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ucs4string.Tpo $(DEPDIR)/mosh-ucs4string.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ucs4string.cpp' object='mosh-ucs4string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ucs4string.o `test -f 'ucs4string.cpp' || echo '$(srcdir)/'`ucs4string.cpp

mosh-ucs4string.obj: ucs4string.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-ucs4string.obj -MD -MP -MF $(DEPDIR)/mosh-ucs4string.Tpo -c -o mosh-ucs4string.obj `if test -f 'ucs4string.cpp'; then $(CYGPATH_W) 'ucs4string.cpp'; else $(CYGPATH_W) '$(srcdir)/ucs4string.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-ucs4string.Tpo $(DEPDIR)/mosh-ucs4string.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ucs4string.cpp' object='mosh-ucs4string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-ucs4string.obj `if test -f 'ucs4string.cpp'; then $(CYGPATH_W) 'ucs4string.cpp'; else $(CYGPATH_W) '$(srcdir)/ucs4string.cpp'; fi`

mosh-Vector.o: Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Vector.o -MD -MP -MF $(DEPDIR)/mosh-Vector.Tpo -c -o mosh-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Vector.Tpo $(DEPDIR)/mosh-Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector.cpp' object='mosh-Vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp

mosh-Vector.obj: Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Vector.obj -MD -MP -MF $(DEPDIR)/mosh-Vector.Tpo -c -o mosh-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Vector.Tpo $(DEPDIR)/mosh-Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector.cpp' object='mosh-Vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`

mosh-Fasl.o: Fasl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Fasl.o -MD -MP -MF $(DEPDIR)/mosh-Fasl.Tpo -c -o mosh-Fasl.o `test -f 'Fasl.cpp' || echo '$(srcdir)/'`Fasl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Fasl.Tpo $(DEPDIR)/mosh-Fasl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fasl.cpp' object='mosh-Fasl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Fasl.o `test -f 'Fasl.cpp' || echo '$(srcdir)/'`Fasl.cpp

mosh-Fasl.obj: Fasl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Fasl.obj -MD -MP -MF $(DEPDIR)/mosh-Fasl.Tpo -c -o mosh-Fasl.obj `if test -f 'Fasl.cpp'; then $(CYGPATH_W) 'Fasl.cpp'; else $(CYGPATH_W) '$(srcdir)/Fasl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Fasl.Tpo $(DEPDIR)/mosh-Fasl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fasl.cpp' object='mosh-Fasl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Fasl.obj `if test -f 'Fasl.cpp'; then $(CYGPATH_W) 'Fasl.cpp'; else $(CYGPATH_W) '$(srcdir)/Fasl.cpp'; fi`

mosh-Arithmetic.o: Arithmetic.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Arithmetic.o -MD -MP -MF $(DEPDIR)/mosh-Arithmetic.Tpo -c -o mosh-Arithmetic.o `test -f 'Arithmetic.cpp' || echo '$(srcdir)/'`Arithmetic.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Arithmetic.Tpo $(DEPDIR)/mosh-Arithmetic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arithmetic.cpp' object='mosh-Arithmetic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Arithmetic.o `test -f 'Arithmetic.cpp' || echo '$(srcdir)/'`Arithmetic.cpp

mosh-Arithmetic.obj: Arithmetic.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Arithmetic.obj -MD -MP -MF $(DEPDIR)/mosh-Arithmetic.Tpo -c -o mosh-Arithmetic.obj `if test -f 'Arithmetic.cpp'; then $(CYGPATH_W) 'Arithmetic.cpp'; else $(CYGPATH_W) '$(srcdir)/Arithmetic.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Arithmetic.Tpo $(DEPDIR)/mosh-Arithmetic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arithmetic.cpp' object='mosh-Arithmetic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Arithmetic.obj `if test -f 'Arithmetic.cpp'; then $(CYGPATH_W) 'Arithmetic.cpp'; else $(CYGPATH_W) '$(srcdir)/Arithmetic.cpp'; fi`

mosh-Ratnum.o: Ratnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Ratnum.o -MD -MP -MF $(DEPDIR)/mosh-Ratnum.Tpo -c -o mosh-Ratnum.o `test -f 'Ratnum.cpp' || echo '$(srcdir)/'`Ratnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Ratnum.Tpo $(DEPDIR)/mosh-Ratnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Ratnum.cpp' object='mosh-Ratnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Ratnum.o `test -f 'Ratnum.cpp' || echo '$(srcdir)/'`Ratnum.cpp

mosh-Ratnum.obj: Ratnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Ratnum.obj -MD -MP -MF $(DEPDIR)/mosh-Ratnum.Tpo -c -o mosh-Ratnum.obj `if test -f 'Ratnum.cpp'; then $(CYGPATH_W) 'Ratnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Ratnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Ratnum.Tpo $(DEPDIR)/mosh-Ratnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Ratnum.cpp' object='mosh-Ratnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Ratnum.obj `if test -f 'Ratnum.cpp'; then $(CYGPATH_W) 'Ratnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Ratnum.cpp'; fi`

mosh-Bignum.o: Bignum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Bignum.o -MD -MP -MF $(DEPDIR)/mosh-Bignum.Tpo -c -o mosh-Bignum.o `test -f 'Bignum.cpp' || echo '$(srcdir)/'`Bignum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Bignum.Tpo $(DEPDIR)/mosh-Bignum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bignum.cpp' object='mosh-Bignum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Bignum.o `test -f 'Bignum.cpp' || echo '$(srcdir)/'`Bignum.cpp

mosh-Bignum.obj: Bignum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Bignum.obj -MD -MP -MF $(DEPDIR)/mosh-Bignum.Tpo -c -o mosh-Bignum.obj `if test -f 'Bignum.cpp'; then $(CYGPATH_W) 'Bignum.cpp'; else $(CYGPATH_W) '$(srcdir)/Bignum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Bignum.Tpo $(DEPDIR)/mosh-Bignum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bignum.cpp' object='mosh-Bignum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Bignum.obj `if test -f 'Bignum.cpp'; then $(CYGPATH_W) 'Bignum.cpp'; else $(CYGPATH_W) '$(srcdir)/Bignum.cpp'; fi`

mosh-Flonum.o: Flonum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Flonum.o -MD -MP -MF $(DEPDIR)/mosh-Flonum.Tpo -c -o mosh-Flonum.o `test -f 'Flonum.cpp' || echo '$(srcdir)/'`Flonum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Flonum.Tpo $(DEPDIR)/mosh-Flonum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Flonum.cpp' object='mosh-Flonum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Flonum.o `test -f 'Flonum.cpp' || echo '$(srcdir)/'`Flonum.cpp

mosh-Flonum.obj: Flonum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Flonum.obj -MD -MP -MF $(DEPDIR)/mosh-Flonum.Tpo -c -o mosh-Flonum.obj `if test -f 'Flonum.cpp'; then $(CYGPATH_W) 'Flonum.cpp'; else $(CYGPATH_W) '$(srcdir)/Flonum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Flonum.Tpo $(DEPDIR)/mosh-Flonum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Flonum.cpp' object='mosh-Flonum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Flonum.obj `if test -f 'Flonum.cpp'; then $(CYGPATH_W) 'Flonum.cpp'; else $(CYGPATH_W) '$(srcdir)/Flonum.cpp'; fi`

mosh-CodeBuilder.o: CodeBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CodeBuilder.o -MD -MP -MF $(DEPDIR)/mosh-CodeBuilder.Tpo -c -o mosh-CodeBuilder.o `test -f 'CodeBuilder.cpp' || echo '$(srcdir)/'`CodeBuilder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CodeBuilder.Tpo $(DEPDIR)/mosh-CodeBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CodeBuilder.cpp' object='mosh-CodeBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CodeBuilder.o `test -f 'CodeBuilder.cpp' || echo '$(srcdir)/'`CodeBuilder.cpp

mosh-CodeBuilder.obj: CodeBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-CodeBuilder.obj -MD -MP -MF $(DEPDIR)/mosh-CodeBuilder.Tpo -c -o mosh-CodeBuilder.obj `if test -f 'CodeBuilder.cpp'; then $(CYGPATH_W) 'CodeBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/CodeBuilder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-CodeBuilder.Tpo $(DEPDIR)/mosh-CodeBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CodeBuilder.cpp' object='mosh-CodeBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-CodeBuilder.obj `if test -f 'CodeBuilder.cpp'; then $(CYGPATH_W) 'CodeBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/CodeBuilder.cpp'; fi`

mosh-FixnumProcedures.o: FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FixnumProcedures.o -MD -MP -MF $(DEPDIR)/mosh-FixnumProcedures.Tpo -c -o mosh-FixnumProcedures.o `test -f 'FixnumProcedures.cpp' || echo '$(srcdir)/'`FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FixnumProcedures.Tpo $(DEPDIR)/mosh-FixnumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FixnumProcedures.cpp' object='mosh-FixnumProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FixnumProcedures.o `test -f 'FixnumProcedures.cpp' || echo '$(srcdir)/'`FixnumProcedures.cpp

mosh-FixnumProcedures.obj: FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-FixnumProcedures.obj -MD -MP -MF $(DEPDIR)/mosh-FixnumProcedures.Tpo -c -o mosh-FixnumProcedures.obj `if test -f 'FixnumProcedures.cpp'; then $(CYGPATH_W) 'FixnumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FixnumProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-FixnumProcedures.Tpo $(DEPDIR)/mosh-FixnumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FixnumProcedures.cpp' object='mosh-FixnumProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-FixnumProcedures.obj `if test -f 'FixnumProcedures.cpp'; then $(CYGPATH_W) 'FixnumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FixnumProcedures.cpp'; fi`

mosh-Latin1Codec.o: Latin1Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Latin1Codec.o -MD -MP -MF $(DEPDIR)/mosh-Latin1Codec.Tpo -c -o mosh-Latin1Codec.o `test -f 'Latin1Codec.cpp' || echo '$(srcdir)/'`Latin1Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Latin1Codec.Tpo $(DEPDIR)/mosh-Latin1Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Latin1Codec.cpp' object='mosh-Latin1Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Latin1Codec.o `test -f 'Latin1Codec.cpp' || echo '$(srcdir)/'`Latin1Codec.cpp

mosh-Latin1Codec.obj: Latin1Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-Latin1Codec.obj -MD -MP -MF $(DEPDIR)/mosh-Latin1Codec.Tpo -c -o mosh-Latin1Codec.obj `if test -f 'Latin1Codec.cpp'; then $(CYGPATH_W) 'Latin1Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Latin1Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-Latin1Codec.Tpo $(DEPDIR)/mosh-Latin1Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Latin1Codec.cpp' object='mosh-Latin1Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-Latin1Codec.obj `if test -f 'Latin1Codec.cpp'; then $(CYGPATH_W) 'Latin1Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Latin1Codec.cpp'; fi`

test_vector-TestVector.o: TestVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TestVector.o -MD -MP -MF $(DEPDIR)/test_vector-TestVector.Tpo -c -o test_vector-TestVector.o `test -f 'TestVector.cpp' || echo '$(srcdir)/'`TestVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TestVector.Tpo $(DEPDIR)/test_vector-TestVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestVector.cpp' object='test_vector-TestVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TestVector.o `test -f 'TestVector.cpp' || echo '$(srcdir)/'`TestVector.cpp

test_vector-TestVector.obj: TestVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TestVector.obj -MD -MP -MF $(DEPDIR)/test_vector-TestVector.Tpo -c -o test_vector-TestVector.obj `if test -f 'TestVector.cpp'; then $(CYGPATH_W) 'TestVector.cpp'; else $(CYGPATH_W) '$(srcdir)/TestVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TestVector.Tpo $(DEPDIR)/test_vector-TestVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestVector.cpp' object='test_vector-TestVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TestVector.obj `if test -f 'TestVector.cpp'; then $(CYGPATH_W) 'TestVector.cpp'; else $(CYGPATH_W) '$(srcdir)/TestVector.cpp'; fi`

test_vector-read.o: read.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-read.o -MD -MP -MF $(DEPDIR)/test_vector-read.Tpo -c -o test_vector-read.o `test -f 'read.cpp' || echo '$(srcdir)/'`read.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-read.Tpo $(DEPDIR)/test_vector-read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read.cpp' object='test_vector-read.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-read.o `test -f 'read.cpp' || echo '$(srcdir)/'`read.cpp

test_vector-read.obj: read.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-read.obj -MD -MP -MF $(DEPDIR)/test_vector-read.Tpo -c -o test_vector-read.obj `if test -f 'read.cpp'; then $(CYGPATH_W) 'read.cpp'; else $(CYGPATH_W) '$(srcdir)/read.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-read.Tpo $(DEPDIR)/test_vector-read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read.cpp' object='test_vector-read.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-read.obj `if test -f 'read.cpp'; then $(CYGPATH_W) 'read.cpp'; else $(CYGPATH_W) '$(srcdir)/read.cpp'; fi`

test_vector-Transcoder.o: Transcoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Transcoder.o -MD -MP -MF $(DEPDIR)/test_vector-Transcoder.Tpo -c -o test_vector-Transcoder.o `test -f 'Transcoder.cpp' || echo '$(srcdir)/'`Transcoder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Transcoder.Tpo $(DEPDIR)/test_vector-Transcoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Transcoder.cpp' object='test_vector-Transcoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Transcoder.o `test -f 'Transcoder.cpp' || echo '$(srcdir)/'`Transcoder.cpp

test_vector-Transcoder.obj: Transcoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Transcoder.obj -MD -MP -MF $(DEPDIR)/test_vector-Transcoder.Tpo -c -o test_vector-Transcoder.obj `if test -f 'Transcoder.cpp'; then $(CYGPATH_W) 'Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transcoder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Transcoder.Tpo $(DEPDIR)/test_vector-Transcoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Transcoder.cpp' object='test_vector-Transcoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Transcoder.obj `if test -f 'Transcoder.cpp'; then $(CYGPATH_W) 'Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transcoder.cpp'; fi`

test_vector-EqvHashTable.o: EqvHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-EqvHashTable.o -MD -MP -MF $(DEPDIR)/test_vector-EqvHashTable.Tpo -c -o test_vector-EqvHashTable.o `test -f 'EqvHashTable.cpp' || echo '$(srcdir)/'`EqvHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-EqvHashTable.Tpo $(DEPDIR)/test_vector-EqvHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqvHashTable.cpp' object='test_vector-EqvHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-EqvHashTable.o `test -f 'EqvHashTable.cpp' || echo '$(srcdir)/'`EqvHashTable.cpp

test_vector-EqvHashTable.obj: EqvHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-EqvHashTable.obj -MD -MP -MF $(DEPDIR)/test_vector-EqvHashTable.Tpo -c -o test_vector-EqvHashTable.obj `if test -f 'EqvHashTable.cpp'; then $(CYGPATH_W) 'EqvHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqvHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-EqvHashTable.Tpo $(DEPDIR)/test_vector-EqvHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqvHashTable.cpp' object='test_vector-EqvHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-EqvHashTable.obj `if test -f 'EqvHashTable.cpp'; then $(CYGPATH_W) 'EqvHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqvHashTable.cpp'; fi`

test_vector-Compnum.o: Compnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Compnum.o -MD -MP -MF $(DEPDIR)/test_vector-Compnum.Tpo -c -o test_vector-Compnum.o `test -f 'Compnum.cpp' || echo '$(srcdir)/'`Compnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Compnum.Tpo $(DEPDIR)/test_vector-Compnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compnum.cpp' object='test_vector-Compnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Compnum.o `test -f 'Compnum.cpp' || echo '$(srcdir)/'`Compnum.cpp

test_vector-Compnum.obj: Compnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Compnum.obj -MD -MP -MF $(DEPDIR)/test_vector-Compnum.Tpo -c -o test_vector-Compnum.obj `if test -f 'Compnum.cpp'; then $(CYGPATH_W) 'Compnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Compnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Compnum.Tpo $(DEPDIR)/test_vector-Compnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compnum.cpp' object='test_vector-Compnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Compnum.obj `if test -f 'Compnum.cpp'; then $(CYGPATH_W) 'Compnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Compnum.cpp'; fi`

test_vector-Fixnum.o: Fixnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Fixnum.o -MD -MP -MF $(DEPDIR)/test_vector-Fixnum.Tpo -c -o test_vector-Fixnum.o `test -f 'Fixnum.cpp' || echo '$(srcdir)/'`Fixnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Fixnum.Tpo $(DEPDIR)/test_vector-Fixnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fixnum.cpp' object='test_vector-Fixnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Fixnum.o `test -f 'Fixnum.cpp' || echo '$(srcdir)/'`Fixnum.cpp

test_vector-Fixnum.obj: Fixnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Fixnum.obj -MD -MP -MF $(DEPDIR)/test_vector-Fixnum.Tpo -c -o test_vector-Fixnum.obj `if test -f 'Fixnum.cpp'; then $(CYGPATH_W) 'Fixnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Fixnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Fixnum.Tpo $(DEPDIR)/test_vector-Fixnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fixnum.cpp' object='test_vector-Fixnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Fixnum.obj `if test -f 'Fixnum.cpp'; then $(CYGPATH_W) 'Fixnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Fixnum.cpp'; fi`

test_vector-Closure.o: Closure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Closure.o -MD -MP -MF $(DEPDIR)/test_vector-Closure.Tpo -c -o test_vector-Closure.o `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Closure.Tpo $(DEPDIR)/test_vector-Closure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Closure.cpp' object='test_vector-Closure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Closure.o `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp

test_vector-Closure.obj: Closure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Closure.obj -MD -MP -MF $(DEPDIR)/test_vector-Closure.Tpo -c -o test_vector-Closure.obj `if test -f 'Closure.cpp'; then $(CYGPATH_W) 'Closure.cpp'; else $(CYGPATH_W) '$(srcdir)/Closure.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Closure.Tpo $(DEPDIR)/test_vector-Closure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Closure.cpp' object='test_vector-Closure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Closure.obj `if test -f 'Closure.cpp'; then $(CYGPATH_W) 'Closure.cpp'; else $(CYGPATH_W) '$(srcdir)/Closure.cpp'; fi`

test_vector-UtilityProcedures.o: UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UtilityProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-UtilityProcedures.Tpo -c -o test_vector-UtilityProcedures.o `test -f 'UtilityProcedures.cpp' || echo '$(srcdir)/'`UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UtilityProcedures.Tpo $(DEPDIR)/test_vector-UtilityProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtilityProcedures.cpp' object='test_vector-UtilityProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UtilityProcedures.o `test -f 'UtilityProcedures.cpp' || echo '$(srcdir)/'`UtilityProcedures.cpp

test_vector-UtilityProcedures.obj: UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UtilityProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-UtilityProcedures.Tpo -c -o test_vector-UtilityProcedures.obj `if test -f 'UtilityProcedures.cpp'; then $(CYGPATH_W) 'UtilityProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilityProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UtilityProcedures.Tpo $(DEPDIR)/test_vector-UtilityProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtilityProcedures.cpp' object='test_vector-UtilityProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UtilityProcedures.obj `if test -f 'UtilityProcedures.cpp'; then $(CYGPATH_W) 'UtilityProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilityProcedures.cpp'; fi`

test_vector-Reader.o: Reader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Reader.o -MD -MP -MF $(DEPDIR)/test_vector-Reader.Tpo -c -o test_vector-Reader.o `test -f 'Reader.cpp' || echo '$(srcdir)/'`Reader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Reader.Tpo $(DEPDIR)/test_vector-Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.cpp' object='test_vector-Reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Reader.o `test -f 'Reader.cpp' || echo '$(srcdir)/'`Reader.cpp

test_vector-Reader.obj: Reader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Reader.obj -MD -MP -MF $(DEPDIR)/test_vector-Reader.Tpo -c -o test_vector-Reader.obj `if test -f 'Reader.cpp'; then $(CYGPATH_W) 'Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Reader.Tpo $(DEPDIR)/test_vector-Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.cpp' object='test_vector-Reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Reader.obj `if test -f 'Reader.cpp'; then $(CYGPATH_W) 'Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.cpp'; fi`

test_vector-NumberReader.o: NumberReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-NumberReader.o -MD -MP -MF $(DEPDIR)/test_vector-NumberReader.Tpo -c -o test_vector-NumberReader.o `test -f 'NumberReader.cpp' || echo '$(srcdir)/'`NumberReader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-NumberReader.Tpo $(DEPDIR)/test_vector-NumberReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.cpp' object='test_vector-NumberReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-NumberReader.o `test -f 'NumberReader.cpp' || echo '$(srcdir)/'`NumberReader.cpp

test_vector-NumberReader.obj: NumberReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-NumberReader.obj -MD -MP -MF $(DEPDIR)/test_vector-NumberReader.Tpo -c -o test_vector-NumberReader.obj `if test -f 'NumberReader.cpp'; then $(CYGPATH_W) 'NumberReader.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-NumberReader.Tpo $(DEPDIR)/test_vector-NumberReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.cpp' object='test_vector-NumberReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-NumberReader.obj `if test -f 'NumberReader.cpp'; then $(CYGPATH_W) 'NumberReader.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.cpp'; fi`

test_vector-scheme.o: scheme.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-scheme.o -MD -MP -MF $(DEPDIR)/test_vector-scheme.Tpo -c -o test_vector-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-scheme.Tpo $(DEPDIR)/test_vector-scheme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheme.cpp' object='test_vector-scheme.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp

test_vector-scheme.obj: scheme.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-scheme.obj -MD -MP -MF $(DEPDIR)/test_vector-scheme.Tpo -c -o test_vector-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-scheme.Tpo $(DEPDIR)/test_vector-scheme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheme.cpp' object='test_vector-scheme.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`

test_vector-Regexp.o: Regexp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Regexp.o -MD -MP -MF $(DEPDIR)/test_vector-Regexp.Tpo -c -o test_vector-Regexp.o `test -f 'Regexp.cpp' || echo '$(srcdir)/'`Regexp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Regexp.Tpo $(DEPDIR)/test_vector-Regexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Regexp.cpp' object='test_vector-Regexp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Regexp.o `test -f 'Regexp.cpp' || echo '$(srcdir)/'`Regexp.cpp

test_vector-Regexp.obj: Regexp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Regexp.obj -MD -MP -MF $(DEPDIR)/test_vector-Regexp.Tpo -c -o test_vector-Regexp.obj `if test -f 'Regexp.cpp'; then $(CYGPATH_W) 'Regexp.cpp'; else $(CYGPATH_W) '$(srcdir)/Regexp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Regexp.Tpo $(DEPDIR)/test_vector-Regexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Regexp.cpp' object='test_vector-Regexp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Regexp.obj `if test -f 'Regexp.cpp'; then $(CYGPATH_W) 'Regexp.cpp'; else $(CYGPATH_W) '$(srcdir)/Regexp.cpp'; fi`

test_vector-Symbol.o: Symbol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Symbol.o -MD -MP -MF $(DEPDIR)/test_vector-Symbol.Tpo -c -o test_vector-Symbol.o `test -f 'Symbol.cpp' || echo '$(srcdir)/'`Symbol.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Symbol.Tpo $(DEPDIR)/test_vector-Symbol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Symbol.cpp' object='test_vector-Symbol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Symbol.o `test -f 'Symbol.cpp' || echo '$(srcdir)/'`Symbol.cpp

test_vector-Symbol.obj: Symbol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Symbol.obj -MD -MP -MF $(DEPDIR)/test_vector-Symbol.Tpo -c -o test_vector-Symbol.obj `if test -f 'Symbol.cpp'; then $(CYGPATH_W) 'Symbol.cpp'; else $(CYGPATH_W) '$(srcdir)/Symbol.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Symbol.Tpo $(DEPDIR)/test_vector-Symbol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Symbol.cpp' object='test_vector-Symbol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Symbol.obj `if test -f 'Symbol.cpp'; then $(CYGPATH_W) 'Symbol.cpp'; else $(CYGPATH_W) '$(srcdir)/Symbol.cpp'; fi`

test_vector-VM.o: VM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-VM.o -MD -MP -MF $(DEPDIR)/test_vector-VM.Tpo -c -o test_vector-VM.o `test -f 'VM.cpp' || echo '$(srcdir)/'`VM.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-VM.Tpo $(DEPDIR)/test_vector-VM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM.cpp' object='test_vector-VM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-VM.o `test -f 'VM.cpp' || echo '$(srcdir)/'`VM.cpp

test_vector-VM.obj: VM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-VM.obj -MD -MP -MF $(DEPDIR)/test_vector-VM.Tpo -c -o test_vector-VM.obj `if test -f 'VM.cpp'; then $(CYGPATH_W) 'VM.cpp'; else $(CYGPATH_W) '$(srcdir)/VM.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-VM.Tpo $(DEPDIR)/test_vector-VM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM.cpp' object='test_vector-VM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-VM.obj `if test -f 'VM.cpp'; then $(CYGPATH_W) 'VM.cpp'; else $(CYGPATH_W) '$(srcdir)/VM.cpp'; fi`

test_vector-Scanner.o: Scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Scanner.o -MD -MP -MF $(DEPDIR)/test_vector-Scanner.Tpo -c -o test_vector-Scanner.o `test -f 'Scanner.cpp' || echo '$(srcdir)/'`Scanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Scanner.Tpo $(DEPDIR)/test_vector-Scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Scanner.cpp' object='test_vector-Scanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Scanner.o `test -f 'Scanner.cpp' || echo '$(srcdir)/'`Scanner.cpp

test_vector-Scanner.obj: Scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Scanner.obj -MD -MP -MF $(DEPDIR)/test_vector-Scanner.Tpo -c -o test_vector-Scanner.obj `if test -f 'Scanner.cpp'; then $(CYGPATH_W) 'Scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/Scanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Scanner.Tpo $(DEPDIR)/test_vector-Scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Scanner.cpp' object='test_vector-Scanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Scanner.obj `if test -f 'Scanner.cpp'; then $(CYGPATH_W) 'Scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/Scanner.cpp'; fi`

test_vector-NumberScanner.o: NumberScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-NumberScanner.o -MD -MP -MF $(DEPDIR)/test_vector-NumberScanner.Tpo -c -o test_vector-NumberScanner.o `test -f 'NumberScanner.cpp' || echo '$(srcdir)/'`NumberScanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-NumberScanner.Tpo $(DEPDIR)/test_vector-NumberScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberScanner.cpp' object='test_vector-NumberScanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-NumberScanner.o `test -f 'NumberScanner.cpp' || echo '$(srcdir)/'`NumberScanner.cpp

test_vector-NumberScanner.obj: NumberScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-NumberScanner.obj -MD -MP -MF $(DEPDIR)/test_vector-NumberScanner.Tpo -c -o test_vector-NumberScanner.obj `if test -f 'NumberScanner.cpp'; then $(CYGPATH_W) 'NumberScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberScanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-NumberScanner.Tpo $(DEPDIR)/test_vector-NumberScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberScanner.cpp' object='test_vector-NumberScanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-NumberScanner.obj `if test -f 'NumberScanner.cpp'; then $(CYGPATH_W) 'NumberScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberScanner.cpp'; fi`

test_vector-ByteArrayBinaryInputPort.o: ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ByteArrayBinaryInputPort.o -MD -MP -MF $(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Tpo -c -o test_vector-ByteArrayBinaryInputPort.o `test -f 'ByteArrayBinaryInputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Tpo $(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryInputPort.cpp' object='test_vector-ByteArrayBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ByteArrayBinaryInputPort.o `test -f 'ByteArrayBinaryInputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryInputPort.cpp

test_vector-ByteArrayBinaryInputPort.obj: ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ByteArrayBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Tpo -c -o test_vector-ByteArrayBinaryInputPort.obj `if test -f 'ByteArrayBinaryInputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Tpo $(DEPDIR)/test_vector-ByteArrayBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryInputPort.cpp' object='test_vector-ByteArrayBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ByteArrayBinaryInputPort.obj `if test -f 'ByteArrayBinaryInputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryInputPort.cpp'; fi`

test_vector-ScannerHelper.o: ScannerHelper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ScannerHelper.o -MD -MP -MF $(DEPDIR)/test_vector-ScannerHelper.Tpo -c -o test_vector-ScannerHelper.o `test -f 'ScannerHelper.cpp' || echo '$(srcdir)/'`ScannerHelper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ScannerHelper.Tpo $(DEPDIR)/test_vector-ScannerHelper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScannerHelper.cpp' object='test_vector-ScannerHelper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ScannerHelper.o `test -f 'ScannerHelper.cpp' || echo '$(srcdir)/'`ScannerHelper.cpp

test_vector-ScannerHelper.obj: ScannerHelper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ScannerHelper.obj -MD -MP -MF $(DEPDIR)/test_vector-ScannerHelper.Tpo -c -o test_vector-ScannerHelper.obj `if test -f 'ScannerHelper.cpp'; then $(CYGPATH_W) 'ScannerHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/ScannerHelper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ScannerHelper.Tpo $(DEPDIR)/test_vector-ScannerHelper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScannerHelper.cpp' object='test_vector-ScannerHelper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ScannerHelper.obj `if test -f 'ScannerHelper.cpp'; then $(CYGPATH_W) 'ScannerHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/ScannerHelper.cpp'; fi`

test_vector-Reader.tab.o: Reader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Reader.tab.o -MD -MP -MF $(DEPDIR)/test_vector-Reader.tab.Tpo -c -o test_vector-Reader.tab.o `test -f 'Reader.tab.cpp' || echo '$(srcdir)/'`Reader.tab.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Reader.tab.Tpo $(DEPDIR)/test_vector-Reader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.tab.cpp' object='test_vector-Reader.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Reader.tab.o `test -f 'Reader.tab.cpp' || echo '$(srcdir)/'`Reader.tab.cpp

test_vector-Reader.tab.obj: Reader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Reader.tab.obj -MD -MP -MF $(DEPDIR)/test_vector-Reader.tab.Tpo -c -o test_vector-Reader.tab.obj `if test -f 'Reader.tab.cpp'; then $(CYGPATH_W) 'Reader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Reader.tab.Tpo $(DEPDIR)/test_vector-Reader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.tab.cpp' object='test_vector-Reader.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Reader.tab.obj `if test -f 'Reader.tab.cpp'; then $(CYGPATH_W) 'Reader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.tab.cpp'; fi`

test_vector-NumberReader.tab.o: NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-NumberReader.tab.o -MD -MP -MF $(DEPDIR)/test_vector-NumberReader.tab.Tpo -c -o test_vector-NumberReader.tab.o `test -f 'NumberReader.tab.cpp' || echo '$(srcdir)/'`NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-NumberReader.tab.Tpo $(DEPDIR)/test_vector-NumberReader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.tab.cpp' object='test_vector-NumberReader.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-NumberReader.tab.o `test -f 'NumberReader.tab.cpp' || echo '$(srcdir)/'`NumberReader.tab.cpp

test_vector-NumberReader.tab.obj: NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-NumberReader.tab.obj -MD -MP -MF $(DEPDIR)/test_vector-NumberReader.tab.Tpo -c -o test_vector-NumberReader.tab.obj `if test -f 'NumberReader.tab.cpp'; then $(CYGPATH_W) 'NumberReader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-NumberReader.tab.Tpo $(DEPDIR)/test_vector-NumberReader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.tab.cpp' object='test_vector-NumberReader.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-NumberReader.tab.obj `if test -f 'NumberReader.tab.cpp'; then $(CYGPATH_W) 'NumberReader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.tab.cpp'; fi`

test_vector-FileBinaryInputPort.o: FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FileBinaryInputPort.o -MD -MP -MF $(DEPDIR)/test_vector-FileBinaryInputPort.Tpo -c -o test_vector-FileBinaryInputPort.o `test -f 'FileBinaryInputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FileBinaryInputPort.Tpo $(DEPDIR)/test_vector-FileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputPort.cpp' object='test_vector-FileBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FileBinaryInputPort.o `test -f 'FileBinaryInputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputPort.cpp

test_vector-FileBinaryInputPort.obj: FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FileBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-FileBinaryInputPort.Tpo -c -o test_vector-FileBinaryInputPort.obj `if test -f 'FileBinaryInputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FileBinaryInputPort.Tpo $(DEPDIR)/test_vector-FileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputPort.cpp' object='test_vector-FileBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FileBinaryInputPort.obj `if test -f 'FileBinaryInputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputPort.cpp'; fi`

test_vector-FileBinaryOutputPort.o: FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FileBinaryOutputPort.o -MD -MP -MF $(DEPDIR)/test_vector-FileBinaryOutputPort.Tpo -c -o test_vector-FileBinaryOutputPort.o `test -f 'FileBinaryOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FileBinaryOutputPort.Tpo $(DEPDIR)/test_vector-FileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryOutputPort.cpp' object='test_vector-FileBinaryOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FileBinaryOutputPort.o `test -f 'FileBinaryOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryOutputPort.cpp

test_vector-FileBinaryOutputPort.obj: FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FileBinaryOutputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-FileBinaryOutputPort.Tpo -c -o test_vector-FileBinaryOutputPort.obj `if test -f 'FileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FileBinaryOutputPort.Tpo $(DEPDIR)/test_vector-FileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryOutputPort.cpp' object='test_vector-FileBinaryOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FileBinaryOutputPort.obj `if test -f 'FileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryOutputPort.cpp'; fi`

test_vector-CustomBinaryInputPort.o: CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CustomBinaryInputPort.o -MD -MP -MF $(DEPDIR)/test_vector-CustomBinaryInputPort.Tpo -c -o test_vector-CustomBinaryInputPort.o `test -f 'CustomBinaryInputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CustomBinaryInputPort.Tpo $(DEPDIR)/test_vector-CustomBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputPort.cpp' object='test_vector-CustomBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CustomBinaryInputPort.o `test -f 'CustomBinaryInputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputPort.cpp

test_vector-CustomBinaryInputPort.obj: CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CustomBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-CustomBinaryInputPort.Tpo -c -o test_vector-CustomBinaryInputPort.obj `if test -f 'CustomBinaryInputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CustomBinaryInputPort.Tpo $(DEPDIR)/test_vector-CustomBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputPort.cpp' object='test_vector-CustomBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CustomBinaryInputPort.obj `if test -f 'CustomBinaryInputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputPort.cpp'; fi`

test_vector-TextualOutputPort.o: TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TextualOutputPort.o -MD -MP -MF $(DEPDIR)/test_vector-TextualOutputPort.Tpo -c -o test_vector-TextualOutputPort.o `test -f 'TextualOutputPort.cpp' || echo '$(srcdir)/'`TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TextualOutputPort.Tpo $(DEPDIR)/test_vector-TextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualOutputPort.cpp' object='test_vector-TextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TextualOutputPort.o `test -f 'TextualOutputPort.cpp' || echo '$(srcdir)/'`TextualOutputPort.cpp

test_vector-TextualOutputPort.obj: TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TextualOutputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-TextualOutputPort.Tpo -c -o test_vector-TextualOutputPort.obj `if test -f 'TextualOutputPort.cpp'; then $(CYGPATH_W) 'TextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TextualOutputPort.Tpo $(DEPDIR)/test_vector-TextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualOutputPort.cpp' object='test_vector-TextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TextualOutputPort.obj `if test -f 'TextualOutputPort.cpp'; then $(CYGPATH_W) 'TextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualOutputPort.cpp'; fi`

test_vector-TextualByteVectorOutputPort.o: TextualByteVectorOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TextualByteVectorOutputPort.o -MD -MP -MF $(DEPDIR)/test_vector-TextualByteVectorOutputPort.Tpo -c -o test_vector-TextualByteVectorOutputPort.o `test -f 'TextualByteVectorOutputPort.cpp' || echo '$(srcdir)/'`TextualByteVectorOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TextualByteVectorOutputPort.Tpo $(DEPDIR)/test_vector-TextualByteVectorOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualByteVectorOutputPort.cpp' object='test_vector-TextualByteVectorOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TextualByteVectorOutputPort.o `test -f 'TextualByteVectorOutputPort.cpp' || echo '$(srcdir)/'`TextualByteVectorOutputPort.cpp

test_vector-TextualByteVectorOutputPort.obj: TextualByteVectorOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TextualByteVectorOutputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-TextualByteVectorOutputPort.Tpo -c -o test_vector-TextualByteVectorOutputPort.obj `if test -f 'TextualByteVectorOutputPort.cpp'; then $(CYGPATH_W) 'TextualByteVectorOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualByteVectorOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TextualByteVectorOutputPort.Tpo $(DEPDIR)/test_vector-TextualByteVectorOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualByteVectorOutputPort.cpp' object='test_vector-TextualByteVectorOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TextualByteVectorOutputPort.obj `if test -f 'TextualByteVectorOutputPort.cpp'; then $(CYGPATH_W) 'TextualByteVectorOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualByteVectorOutputPort.cpp'; fi`

test_vector-TextualInputPort.o: TextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TextualInputPort.o -MD -MP -MF $(DEPDIR)/test_vector-TextualInputPort.Tpo -c -o test_vector-TextualInputPort.o `test -f 'TextualInputPort.cpp' || echo '$(srcdir)/'`TextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TextualInputPort.Tpo $(DEPDIR)/test_vector-TextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualInputPort.cpp' object='test_vector-TextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TextualInputPort.o `test -f 'TextualInputPort.cpp' || echo '$(srcdir)/'`TextualInputPort.cpp

test_vector-TextualInputPort.obj: TextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-TextualInputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-TextualInputPort.Tpo -c -o test_vector-TextualInputPort.obj `if test -f 'TextualInputPort.cpp'; then $(CYGPATH_W) 'TextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-TextualInputPort.Tpo $(DEPDIR)/test_vector-TextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualInputPort.cpp' object='test_vector-TextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-TextualInputPort.obj `if test -f 'TextualInputPort.cpp'; then $(CYGPATH_W) 'TextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualInputPort.cpp'; fi`

test_vector-StringTextualOutputPort.o: StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-StringTextualOutputPort.o -MD -MP -MF $(DEPDIR)/test_vector-StringTextualOutputPort.Tpo -c -o test_vector-StringTextualOutputPort.o `test -f 'StringTextualOutputPort.cpp' || echo '$(srcdir)/'`StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-StringTextualOutputPort.Tpo $(DEPDIR)/test_vector-StringTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualOutputPort.cpp' object='test_vector-StringTextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-StringTextualOutputPort.o `test -f 'StringTextualOutputPort.cpp' || echo '$(srcdir)/'`StringTextualOutputPort.cpp

test_vector-StringTextualOutputPort.obj: StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-StringTextualOutputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-StringTextualOutputPort.Tpo -c -o test_vector-StringTextualOutputPort.obj `if test -f 'StringTextualOutputPort.cpp'; then $(CYGPATH_W) 'StringTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-StringTextualOutputPort.Tpo $(DEPDIR)/test_vector-StringTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualOutputPort.cpp' object='test_vector-StringTextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-StringTextualOutputPort.obj `if test -f 'StringTextualOutputPort.cpp'; then $(CYGPATH_W) 'StringTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualOutputPort.cpp'; fi`

test_vector-StringTextualInputPort.o: StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-StringTextualInputPort.o -MD -MP -MF $(DEPDIR)/test_vector-StringTextualInputPort.Tpo -c -o test_vector-StringTextualInputPort.o `test -f 'StringTextualInputPort.cpp' || echo '$(srcdir)/'`StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-StringTextualInputPort.Tpo $(DEPDIR)/test_vector-StringTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualInputPort.cpp' object='test_vector-StringTextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-StringTextualInputPort.o `test -f 'StringTextualInputPort.cpp' || echo '$(srcdir)/'`StringTextualInputPort.cpp

test_vector-StringTextualInputPort.obj: StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-StringTextualInputPort.obj -MD -MP -MF $(DEPDIR)/test_vector-StringTextualInputPort.Tpo -c -o test_vector-StringTextualInputPort.obj `if test -f 'StringTextualInputPort.cpp'; then $(CYGPATH_W) 'StringTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-StringTextualInputPort.Tpo $(DEPDIR)/test_vector-StringTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualInputPort.cpp' object='test_vector-StringTextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-StringTextualInputPort.obj `if test -f 'StringTextualInputPort.cpp'; then $(CYGPATH_W) 'StringTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualInputPort.cpp'; fi`

test_vector-UTF8Codec.o: UTF8Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UTF8Codec.o -MD -MP -MF $(DEPDIR)/test_vector-UTF8Codec.Tpo -c -o test_vector-UTF8Codec.o `test -f 'UTF8Codec.cpp' || echo '$(srcdir)/'`UTF8Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UTF8Codec.Tpo $(DEPDIR)/test_vector-UTF8Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF8Codec.cpp' object='test_vector-UTF8Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UTF8Codec.o `test -f 'UTF8Codec.cpp' || echo '$(srcdir)/'`UTF8Codec.cpp

test_vector-UTF8Codec.obj: UTF8Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UTF8Codec.obj -MD -MP -MF $(DEPDIR)/test_vector-UTF8Codec.Tpo -c -o test_vector-UTF8Codec.obj `if test -f 'UTF8Codec.cpp'; then $(CYGPATH_W) 'UTF8Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF8Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UTF8Codec.Tpo $(DEPDIR)/test_vector-UTF8Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF8Codec.cpp' object='test_vector-UTF8Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UTF8Codec.obj `if test -f 'UTF8Codec.cpp'; then $(CYGPATH_W) 'UTF8Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF8Codec.cpp'; fi`

test_vector-UTF16Codec.o: UTF16Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UTF16Codec.o -MD -MP -MF $(DEPDIR)/test_vector-UTF16Codec.Tpo -c -o test_vector-UTF16Codec.o `test -f 'UTF16Codec.cpp' || echo '$(srcdir)/'`UTF16Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UTF16Codec.Tpo $(DEPDIR)/test_vector-UTF16Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF16Codec.cpp' object='test_vector-UTF16Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UTF16Codec.o `test -f 'UTF16Codec.cpp' || echo '$(srcdir)/'`UTF16Codec.cpp

test_vector-UTF16Codec.obj: UTF16Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UTF16Codec.obj -MD -MP -MF $(DEPDIR)/test_vector-UTF16Codec.Tpo -c -o test_vector-UTF16Codec.obj `if test -f 'UTF16Codec.cpp'; then $(CYGPATH_W) 'UTF16Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF16Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UTF16Codec.Tpo $(DEPDIR)/test_vector-UTF16Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF16Codec.cpp' object='test_vector-UTF16Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UTF16Codec.obj `if test -f 'UTF16Codec.cpp'; then $(CYGPATH_W) 'UTF16Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF16Codec.cpp'; fi`

test_vector-UTF32Codec.o: UTF32Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UTF32Codec.o -MD -MP -MF $(DEPDIR)/test_vector-UTF32Codec.Tpo -c -o test_vector-UTF32Codec.o `test -f 'UTF32Codec.cpp' || echo '$(srcdir)/'`UTF32Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UTF32Codec.Tpo $(DEPDIR)/test_vector-UTF32Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF32Codec.cpp' object='test_vector-UTF32Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UTF32Codec.o `test -f 'UTF32Codec.cpp' || echo '$(srcdir)/'`UTF32Codec.cpp

test_vector-UTF32Codec.obj: UTF32Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-UTF32Codec.obj -MD -MP -MF $(DEPDIR)/test_vector-UTF32Codec.Tpo -c -o test_vector-UTF32Codec.obj `if test -f 'UTF32Codec.cpp'; then $(CYGPATH_W) 'UTF32Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF32Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-UTF32Codec.Tpo $(DEPDIR)/test_vector-UTF32Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF32Codec.cpp' object='test_vector-UTF32Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-UTF32Codec.obj `if test -f 'UTF32Codec.cpp'; then $(CYGPATH_W) 'UTF32Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF32Codec.cpp'; fi`

test_vector-EqHashTable.o: EqHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-EqHashTable.o -MD -MP -MF $(DEPDIR)/test_vector-EqHashTable.Tpo -c -o test_vector-EqHashTable.o `test -f 'EqHashTable.cpp' || echo '$(srcdir)/'`EqHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-EqHashTable.Tpo $(DEPDIR)/test_vector-EqHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqHashTable.cpp' object='test_vector-EqHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-EqHashTable.o `test -f 'EqHashTable.cpp' || echo '$(srcdir)/'`EqHashTable.cpp

test_vector-EqHashTable.obj: EqHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-EqHashTable.obj -MD -MP -MF $(DEPDIR)/test_vector-EqHashTable.Tpo -c -o test_vector-EqHashTable.obj `if test -f 'EqHashTable.cpp'; then $(CYGPATH_W) 'EqHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-EqHashTable.Tpo $(DEPDIR)/test_vector-EqHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqHashTable.cpp' object='test_vector-EqHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-EqHashTable.obj `if test -f 'EqHashTable.cpp'; then $(CYGPATH_W) 'EqHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqHashTable.cpp'; fi`

test_vector-SString.o: SString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-SString.o -MD -MP -MF $(DEPDIR)/test_vector-SString.Tpo -c -o test_vector-SString.o `test -f 'SString.cpp' || echo '$(srcdir)/'`SString.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-SString.Tpo $(DEPDIR)/test_vector-SString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SString.cpp' object='test_vector-SString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-SString.o `test -f 'SString.cpp' || echo '$(srcdir)/'`SString.cpp

test_vector-SString.obj: SString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-SString.obj -MD -MP -MF $(DEPDIR)/test_vector-SString.Tpo -c -o test_vector-SString.obj `if test -f 'SString.cpp'; then $(CYGPATH_W) 'SString.cpp'; else $(CYGPATH_W) '$(srcdir)/SString.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-SString.Tpo $(DEPDIR)/test_vector-SString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SString.cpp' object='test_vector-SString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-SString.obj `if test -f 'SString.cpp'; then $(CYGPATH_W) 'SString.cpp'; else $(CYGPATH_W) '$(srcdir)/SString.cpp'; fi`

test_vector-GenericHashTable.o: GenericHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-GenericHashTable.o -MD -MP -MF $(DEPDIR)/test_vector-GenericHashTable.Tpo -c -o test_vector-GenericHashTable.o `test -f 'GenericHashTable.cpp' || echo '$(srcdir)/'`GenericHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-GenericHashTable.Tpo $(DEPDIR)/test_vector-GenericHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GenericHashTable.cpp' object='test_vector-GenericHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-GenericHashTable.o `test -f 'GenericHashTable.cpp' || echo '$(srcdir)/'`GenericHashTable.cpp

test_vector-GenericHashTable.obj: GenericHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-GenericHashTable.obj -MD -MP -MF $(DEPDIR)/test_vector-GenericHashTable.Tpo -c -o test_vector-GenericHashTable.obj `if test -f 'GenericHashTable.cpp'; then $(CYGPATH_W) 'GenericHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/GenericHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-GenericHashTable.Tpo $(DEPDIR)/test_vector-GenericHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GenericHashTable.cpp' object='test_vector-GenericHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-GenericHashTable.obj `if test -f 'GenericHashTable.cpp'; then $(CYGPATH_W) 'GenericHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/GenericHashTable.cpp'; fi`

test_vector-Object.o: Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Object.o -MD -MP -MF $(DEPDIR)/test_vector-Object.Tpo -c -o test_vector-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Object.Tpo $(DEPDIR)/test_vector-Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Object.cpp' object='test_vector-Object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp

test_vector-Object.obj: Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Object.obj -MD -MP -MF $(DEPDIR)/test_vector-Object.Tpo -c -o test_vector-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Object.Tpo $(DEPDIR)/test_vector-Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Object.cpp' object='test_vector-Object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`

test_vector-RecordTypeDescriptor.o: RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RecordTypeDescriptor.o -MD -MP -MF $(DEPDIR)/test_vector-RecordTypeDescriptor.Tpo -c -o test_vector-RecordTypeDescriptor.o `test -f 'RecordTypeDescriptor.cpp' || echo '$(srcdir)/'`RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RecordTypeDescriptor.Tpo $(DEPDIR)/test_vector-RecordTypeDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordTypeDescriptor.cpp' object='test_vector-RecordTypeDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RecordTypeDescriptor.o `test -f 'RecordTypeDescriptor.cpp' || echo '$(srcdir)/'`RecordTypeDescriptor.cpp

test_vector-RecordTypeDescriptor.obj: RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RecordTypeDescriptor.obj -MD -MP -MF $(DEPDIR)/test_vector-RecordTypeDescriptor.Tpo -c -o test_vector-RecordTypeDescriptor.obj `if test -f 'RecordTypeDescriptor.cpp'; then $(CYGPATH_W) 'RecordTypeDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordTypeDescriptor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RecordTypeDescriptor.Tpo $(DEPDIR)/test_vector-RecordTypeDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordTypeDescriptor.cpp' object='test_vector-RecordTypeDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RecordTypeDescriptor.obj `if test -f 'RecordTypeDescriptor.cpp'; then $(CYGPATH_W) 'RecordTypeDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordTypeDescriptor.cpp'; fi`

test_vector-RecordConstructorDescriptor.o: RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RecordConstructorDescriptor.o -MD -MP -MF $(DEPDIR)/test_vector-RecordConstructorDescriptor.Tpo -c -o test_vector-RecordConstructorDescriptor.o `test -f 'RecordConstructorDescriptor.cpp' || echo '$(srcdir)/'`RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RecordConstructorDescriptor.Tpo $(DEPDIR)/test_vector-RecordConstructorDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordConstructorDescriptor.cpp' object='test_vector-RecordConstructorDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RecordConstructorDescriptor.o `test -f 'RecordConstructorDescriptor.cpp' || echo '$(srcdir)/'`RecordConstructorDescriptor.cpp

test_vector-RecordConstructorDescriptor.obj: RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RecordConstructorDescriptor.obj -MD -MP -MF $(DEPDIR)/test_vector-RecordConstructorDescriptor.Tpo -c -o test_vector-RecordConstructorDescriptor.obj `if test -f 'RecordConstructorDescriptor.cpp'; then $(CYGPATH_W) 'RecordConstructorDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordConstructorDescriptor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RecordConstructorDescriptor.Tpo $(DEPDIR)/test_vector-RecordConstructorDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordConstructorDescriptor.cpp' object='test_vector-RecordConstructorDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RecordConstructorDescriptor.obj `if test -f 'RecordConstructorDescriptor.cpp'; then $(CYGPATH_W) 'RecordConstructorDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordConstructorDescriptor.cpp'; fi`

test_vector-Record.o: Record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Record.o -MD -MP -MF $(DEPDIR)/test_vector-Record.Tpo -c -o test_vector-Record.o `test -f 'Record.cpp' || echo '$(srcdir)/'`Record.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Record.Tpo $(DEPDIR)/test_vector-Record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Record.cpp' object='test_vector-Record.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Record.o `test -f 'Record.cpp' || echo '$(srcdir)/'`Record.cpp

test_vector-Record.obj: Record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Record.obj -MD -MP -MF $(DEPDIR)/test_vector-Record.Tpo -c -o test_vector-Record.obj `if test -f 'Record.cpp'; then $(CYGPATH_W) 'Record.cpp'; else $(CYGPATH_W) '$(srcdir)/Record.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Record.Tpo $(DEPDIR)/test_vector-Record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Record.cpp' object='test_vector-Record.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Record.obj `if test -f 'Record.cpp'; then $(CYGPATH_W) 'Record.cpp'; else $(CYGPATH_W) '$(srcdir)/Record.cpp'; fi`

test_vector-RecordProcedures.o: RecordProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RecordProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-RecordProcedures.Tpo -c -o test_vector-RecordProcedures.o `test -f 'RecordProcedures.cpp' || echo '$(srcdir)/'`RecordProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RecordProcedures.Tpo $(DEPDIR)/test_vector-RecordProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordProcedures.cpp' object='test_vector-RecordProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RecordProcedures.o `test -f 'RecordProcedures.cpp' || echo '$(srcdir)/'`RecordProcedures.cpp

test_vector-RecordProcedures.obj: RecordProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RecordProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-RecordProcedures.Tpo -c -o test_vector-RecordProcedures.obj `if test -f 'RecordProcedures.cpp'; then $(CYGPATH_W) 'RecordProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RecordProcedures.Tpo $(DEPDIR)/test_vector-RecordProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordProcedures.cpp' object='test_vector-RecordProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RecordProcedures.obj `if test -f 'RecordProcedures.cpp'; then $(CYGPATH_W) 'RecordProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordProcedures.cpp'; fi`

test_vector-ConditionProcedures.o: ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ConditionProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-ConditionProcedures.Tpo -c -o test_vector-ConditionProcedures.o `test -f 'ConditionProcedures.cpp' || echo '$(srcdir)/'`ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ConditionProcedures.Tpo $(DEPDIR)/test_vector-ConditionProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConditionProcedures.cpp' object='test_vector-ConditionProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ConditionProcedures.o `test -f 'ConditionProcedures.cpp' || echo '$(srcdir)/'`ConditionProcedures.cpp

test_vector-ConditionProcedures.obj: ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ConditionProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-ConditionProcedures.Tpo -c -o test_vector-ConditionProcedures.obj `if test -f 'ConditionProcedures.cpp'; then $(CYGPATH_W) 'ConditionProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ConditionProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ConditionProcedures.Tpo $(DEPDIR)/test_vector-ConditionProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConditionProcedures.cpp' object='test_vector-ConditionProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ConditionProcedures.obj `if test -f 'ConditionProcedures.cpp'; then $(CYGPATH_W) 'ConditionProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ConditionProcedures.cpp'; fi`

test_vector-CompilerProcedures.o: CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CompilerProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-CompilerProcedures.Tpo -c -o test_vector-CompilerProcedures.o `test -f 'CompilerProcedures.cpp' || echo '$(srcdir)/'`CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CompilerProcedures.Tpo $(DEPDIR)/test_vector-CompilerProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompilerProcedures.cpp' object='test_vector-CompilerProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CompilerProcedures.o `test -f 'CompilerProcedures.cpp' || echo '$(srcdir)/'`CompilerProcedures.cpp

test_vector-CompilerProcedures.obj: CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CompilerProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-CompilerProcedures.Tpo -c -o test_vector-CompilerProcedures.obj `if test -f 'CompilerProcedures.cpp'; then $(CYGPATH_W) 'CompilerProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/CompilerProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CompilerProcedures.Tpo $(DEPDIR)/test_vector-CompilerProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompilerProcedures.cpp' object='test_vector-CompilerProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CompilerProcedures.obj `if test -f 'CompilerProcedures.cpp'; then $(CYGPATH_W) 'CompilerProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/CompilerProcedures.cpp'; fi`

test_vector-HashTableProceduures.o: HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-HashTableProceduures.o -MD -MP -MF $(DEPDIR)/test_vector-HashTableProceduures.Tpo -c -o test_vector-HashTableProceduures.o `test -f 'HashTableProceduures.cpp' || echo '$(srcdir)/'`HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-HashTableProceduures.Tpo $(DEPDIR)/test_vector-HashTableProceduures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HashTableProceduures.cpp' object='test_vector-HashTableProceduures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-HashTableProceduures.o `test -f 'HashTableProceduures.cpp' || echo '$(srcdir)/'`HashTableProceduures.cpp

test_vector-HashTableProceduures.obj: HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-HashTableProceduures.obj -MD -MP -MF $(DEPDIR)/test_vector-HashTableProceduures.Tpo -c -o test_vector-HashTableProceduures.obj `if test -f 'HashTableProceduures.cpp'; then $(CYGPATH_W) 'HashTableProceduures.cpp'; else $(CYGPATH_W) '$(srcdir)/HashTableProceduures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-HashTableProceduures.Tpo $(DEPDIR)/test_vector-HashTableProceduures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HashTableProceduures.cpp' object='test_vector-HashTableProceduures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-HashTableProceduures.obj `if test -f 'HashTableProceduures.cpp'; then $(CYGPATH_W) 'HashTableProceduures.cpp'; else $(CYGPATH_W) '$(srcdir)/HashTableProceduures.cpp'; fi`

test_vector-RegexpProcedures.o: RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RegexpProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-RegexpProcedures.Tpo -c -o test_vector-RegexpProcedures.o `test -f 'RegexpProcedures.cpp' || echo '$(srcdir)/'`RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RegexpProcedures.Tpo $(DEPDIR)/test_vector-RegexpProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegexpProcedures.cpp' object='test_vector-RegexpProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RegexpProcedures.o `test -f 'RegexpProcedures.cpp' || echo '$(srcdir)/'`RegexpProcedures.cpp

test_vector-RegexpProcedures.obj: RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-RegexpProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-RegexpProcedures.Tpo -c -o test_vector-RegexpProcedures.obj `if test -f 'RegexpProcedures.cpp'; then $(CYGPATH_W) 'RegexpProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RegexpProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-RegexpProcedures.Tpo $(DEPDIR)/test_vector-RegexpProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegexpProcedures.cpp' object='test_vector-RegexpProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-RegexpProcedures.obj `if test -f 'RegexpProcedures.cpp'; then $(CYGPATH_W) 'RegexpProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RegexpProcedures.cpp'; fi`

test_vector-StringProcedures.o: StringProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-StringProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-StringProcedures.Tpo -c -o test_vector-StringProcedures.o `test -f 'StringProcedures.cpp' || echo '$(srcdir)/'`StringProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-StringProcedures.Tpo $(DEPDIR)/test_vector-StringProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringProcedures.cpp' object='test_vector-StringProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-StringProcedures.o `test -f 'StringProcedures.cpp' || echo '$(srcdir)/'`StringProcedures.cpp

test_vector-StringProcedures.obj: StringProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-StringProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-StringProcedures.Tpo -c -o test_vector-StringProcedures.obj `if test -f 'StringProcedures.cpp'; then $(CYGPATH_W) 'StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/StringProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-StringProcedures.Tpo $(DEPDIR)/test_vector-StringProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringProcedures.cpp' object='test_vector-StringProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-StringProcedures.obj `if test -f 'StringProcedures.cpp'; then $(CYGPATH_W) 'StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/StringProcedures.cpp'; fi`

test_vector-PortProcedures.o: PortProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-PortProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-PortProcedures.Tpo -c -o test_vector-PortProcedures.o `test -f 'PortProcedures.cpp' || echo '$(srcdir)/'`PortProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-PortProcedures.Tpo $(DEPDIR)/test_vector-PortProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortProcedures.cpp' object='test_vector-PortProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-PortProcedures.o `test -f 'PortProcedures.cpp' || echo '$(srcdir)/'`PortProcedures.cpp

test_vector-PortProcedures.obj: PortProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-PortProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-PortProcedures.Tpo -c -o test_vector-PortProcedures.obj `if test -f 'PortProcedures.cpp'; then $(CYGPATH_W) 'PortProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/PortProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-PortProcedures.Tpo $(DEPDIR)/test_vector-PortProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortProcedures.cpp' object='test_vector-PortProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-PortProcedures.obj `if test -f 'PortProcedures.cpp'; then $(CYGPATH_W) 'PortProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/PortProcedures.cpp'; fi`

test_vector-ListProcedures.o: ListProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ListProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-ListProcedures.Tpo -c -o test_vector-ListProcedures.o `test -f 'ListProcedures.cpp' || echo '$(srcdir)/'`ListProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ListProcedures.Tpo $(DEPDIR)/test_vector-ListProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListProcedures.cpp' object='test_vector-ListProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ListProcedures.o `test -f 'ListProcedures.cpp' || echo '$(srcdir)/'`ListProcedures.cpp

test_vector-ListProcedures.obj: ListProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ListProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-ListProcedures.Tpo -c -o test_vector-ListProcedures.obj `if test -f 'ListProcedures.cpp'; then $(CYGPATH_W) 'ListProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ListProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ListProcedures.Tpo $(DEPDIR)/test_vector-ListProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListProcedures.cpp' object='test_vector-ListProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ListProcedures.obj `if test -f 'ListProcedures.cpp'; then $(CYGPATH_W) 'ListProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ListProcedures.cpp'; fi`

test_vector-ErrorProcedures.o: ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ErrorProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-ErrorProcedures.Tpo -c -o test_vector-ErrorProcedures.o `test -f 'ErrorProcedures.cpp' || echo '$(srcdir)/'`ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ErrorProcedures.Tpo $(DEPDIR)/test_vector-ErrorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ErrorProcedures.cpp' object='test_vector-ErrorProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ErrorProcedures.o `test -f 'ErrorProcedures.cpp' || echo '$(srcdir)/'`ErrorProcedures.cpp

test_vector-ErrorProcedures.obj: ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ErrorProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-ErrorProcedures.Tpo -c -o test_vector-ErrorProcedures.obj `if test -f 'ErrorProcedures.cpp'; then $(CYGPATH_W) 'ErrorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ErrorProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ErrorProcedures.Tpo $(DEPDIR)/test_vector-ErrorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ErrorProcedures.cpp' object='test_vector-ErrorProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ErrorProcedures.obj `if test -f 'ErrorProcedures.cpp'; then $(CYGPATH_W) 'ErrorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ErrorProcedures.cpp'; fi`

test_vector-ArithmeticProcedures.o: ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ArithmeticProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-ArithmeticProcedures.Tpo -c -o test_vector-ArithmeticProcedures.o `test -f 'ArithmeticProcedures.cpp' || echo '$(srcdir)/'`ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ArithmeticProcedures.Tpo $(DEPDIR)/test_vector-ArithmeticProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ArithmeticProcedures.cpp' object='test_vector-ArithmeticProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ArithmeticProcedures.o `test -f 'ArithmeticProcedures.cpp' || echo '$(srcdir)/'`ArithmeticProcedures.cpp

test_vector-ArithmeticProcedures.obj: ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ArithmeticProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-ArithmeticProcedures.Tpo -c -o test_vector-ArithmeticProcedures.obj `if test -f 'ArithmeticProcedures.cpp'; then $(CYGPATH_W) 'ArithmeticProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ArithmeticProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ArithmeticProcedures.Tpo $(DEPDIR)/test_vector-ArithmeticProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ArithmeticProcedures.cpp' object='test_vector-ArithmeticProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ArithmeticProcedures.obj `if test -f 'ArithmeticProcedures.cpp'; then $(CYGPATH_W) 'ArithmeticProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ArithmeticProcedures.cpp'; fi`

test_vector-FlonumProcedures.o: FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FlonumProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-FlonumProcedures.Tpo -c -o test_vector-FlonumProcedures.o `test -f 'FlonumProcedures.cpp' || echo '$(srcdir)/'`FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FlonumProcedures.Tpo $(DEPDIR)/test_vector-FlonumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FlonumProcedures.cpp' object='test_vector-FlonumProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FlonumProcedures.o `test -f 'FlonumProcedures.cpp' || echo '$(srcdir)/'`FlonumProcedures.cpp

test_vector-FlonumProcedures.obj: FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FlonumProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-FlonumProcedures.Tpo -c -o test_vector-FlonumProcedures.obj `if test -f 'FlonumProcedures.cpp'; then $(CYGPATH_W) 'FlonumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FlonumProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FlonumProcedures.Tpo $(DEPDIR)/test_vector-FlonumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FlonumProcedures.cpp' object='test_vector-FlonumProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FlonumProcedures.obj `if test -f 'FlonumProcedures.cpp'; then $(CYGPATH_W) 'FlonumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FlonumProcedures.cpp'; fi`

test_vector-BitwiseProcedures.o: BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-BitwiseProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-BitwiseProcedures.Tpo -c -o test_vector-BitwiseProcedures.o `test -f 'BitwiseProcedures.cpp' || echo '$(srcdir)/'`BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-BitwiseProcedures.Tpo $(DEPDIR)/test_vector-BitwiseProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitwiseProcedures.cpp' object='test_vector-BitwiseProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-BitwiseProcedures.o `test -f 'BitwiseProcedures.cpp' || echo '$(srcdir)/'`BitwiseProcedures.cpp

test_vector-BitwiseProcedures.obj: BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-BitwiseProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-BitwiseProcedures.Tpo -c -o test_vector-BitwiseProcedures.obj `if test -f 'BitwiseProcedures.cpp'; then $(CYGPATH_W) 'BitwiseProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/BitwiseProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-BitwiseProcedures.Tpo $(DEPDIR)/test_vector-BitwiseProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitwiseProcedures.cpp' object='test_vector-BitwiseProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-BitwiseProcedures.obj `if test -f 'BitwiseProcedures.cpp'; then $(CYGPATH_W) 'BitwiseProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/BitwiseProcedures.cpp'; fi`

test_vector-ByteVectorProcedures.o: ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ByteVectorProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-ByteVectorProcedures.Tpo -c -o test_vector-ByteVectorProcedures.o `test -f 'ByteVectorProcedures.cpp' || echo '$(srcdir)/'`ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ByteVectorProcedures.Tpo $(DEPDIR)/test_vector-ByteVectorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteVectorProcedures.cpp' object='test_vector-ByteVectorProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ByteVectorProcedures.o `test -f 'ByteVectorProcedures.cpp' || echo '$(srcdir)/'`ByteVectorProcedures.cpp

test_vector-ByteVectorProcedures.obj: ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ByteVectorProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-ByteVectorProcedures.Tpo -c -o test_vector-ByteVectorProcedures.obj `if test -f 'ByteVectorProcedures.cpp'; then $(CYGPATH_W) 'ByteVectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteVectorProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ByteVectorProcedures.Tpo $(DEPDIR)/test_vector-ByteVectorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteVectorProcedures.cpp' object='test_vector-ByteVectorProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ByteVectorProcedures.obj `if test -f 'ByteVectorProcedures.cpp'; then $(CYGPATH_W) 'ByteVectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteVectorProcedures.cpp'; fi`

test_vector-Equivalent.o: Equivalent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Equivalent.o -MD -MP -MF $(DEPDIR)/test_vector-Equivalent.Tpo -c -o test_vector-Equivalent.o `test -f 'Equivalent.cpp' || echo '$(srcdir)/'`Equivalent.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Equivalent.Tpo $(DEPDIR)/test_vector-Equivalent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Equivalent.cpp' object='test_vector-Equivalent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Equivalent.o `test -f 'Equivalent.cpp' || echo '$(srcdir)/'`Equivalent.cpp

test_vector-Equivalent.obj: Equivalent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Equivalent.obj -MD -MP -MF $(DEPDIR)/test_vector-Equivalent.Tpo -c -o test_vector-Equivalent.obj `if test -f 'Equivalent.cpp'; then $(CYGPATH_W) 'Equivalent.cpp'; else $(CYGPATH_W) '$(srcdir)/Equivalent.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Equivalent.Tpo $(DEPDIR)/test_vector-Equivalent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Equivalent.cpp' object='test_vector-Equivalent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Equivalent.obj `if test -f 'Equivalent.cpp'; then $(CYGPATH_W) 'Equivalent.cpp'; else $(CYGPATH_W) '$(srcdir)/Equivalent.cpp'; fi`

test_vector-CompoundCondition.o: CompoundCondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CompoundCondition.o -MD -MP -MF $(DEPDIR)/test_vector-CompoundCondition.Tpo -c -o test_vector-CompoundCondition.o `test -f 'CompoundCondition.cpp' || echo '$(srcdir)/'`CompoundCondition.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CompoundCondition.Tpo $(DEPDIR)/test_vector-CompoundCondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundCondition.cpp' object='test_vector-CompoundCondition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CompoundCondition.o `test -f 'CompoundCondition.cpp' || echo '$(srcdir)/'`CompoundCondition.cpp

test_vector-CompoundCondition.obj: CompoundCondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CompoundCondition.obj -MD -MP -MF $(DEPDIR)/test_vector-CompoundCondition.Tpo -c -o test_vector-CompoundCondition.obj `if test -f 'CompoundCondition.cpp'; then $(CYGPATH_W) 'CompoundCondition.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundCondition.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CompoundCondition.Tpo $(DEPDIR)/test_vector-CompoundCondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundCondition.cpp' object='test_vector-CompoundCondition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CompoundCondition.obj `if test -f 'CompoundCondition.cpp'; then $(CYGPATH_W) 'CompoundCondition.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundCondition.cpp'; fi`

test_vector-ucs4string.o: ucs4string.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ucs4string.o -MD -MP -MF $(DEPDIR)/test_vector-ucs4string.Tpo -c -o test_vector-ucs4string.o `test -f 'ucs4string.cpp' || echo '$(srcdir)/'`ucs4string.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ucs4string.Tpo $(DEPDIR)/test_vector-ucs4string.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ucs4string.cpp' object='test_vector-ucs4string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ucs4string.o `test -f 'ucs4string.cpp' || echo '$(srcdir)/'`ucs4string.cpp

test_vector-ucs4string.obj: ucs4string.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-ucs4string.obj -MD -MP -MF $(DEPDIR)/test_vector-ucs4string.Tpo -c -o test_vector-ucs4string.obj `if test -f 'ucs4string.cpp'; then $(CYGPATH_W) 'ucs4string.cpp'; else $(CYGPATH_W) '$(srcdir)/ucs4string.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-ucs4string.Tpo $(DEPDIR)/test_vector-ucs4string.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ucs4string.cpp' object='test_vector-ucs4string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-ucs4string.obj `if test -f 'ucs4string.cpp'; then $(CYGPATH_W) 'ucs4string.cpp'; else $(CYGPATH_W) '$(srcdir)/ucs4string.cpp'; fi`

test_vector-Vector.o: Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Vector.o -MD -MP -MF $(DEPDIR)/test_vector-Vector.Tpo -c -o test_vector-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Vector.Tpo $(DEPDIR)/test_vector-Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector.cpp' object='test_vector-Vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp

test_vector-Vector.obj: Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Vector.obj -MD -MP -MF $(DEPDIR)/test_vector-Vector.Tpo -c -o test_vector-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Vector.Tpo $(DEPDIR)/test_vector-Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector.cpp' object='test_vector-Vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`

test_vector-Fasl.o: Fasl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Fasl.o -MD -MP -MF $(DEPDIR)/test_vector-Fasl.Tpo -c -o test_vector-Fasl.o `test -f 'Fasl.cpp' || echo '$(srcdir)/'`Fasl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Fasl.Tpo $(DEPDIR)/test_vector-Fasl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fasl.cpp' object='test_vector-Fasl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Fasl.o `test -f 'Fasl.cpp' || echo '$(srcdir)/'`Fasl.cpp

test_vector-Fasl.obj: Fasl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Fasl.obj -MD -MP -MF $(DEPDIR)/test_vector-Fasl.Tpo -c -o test_vector-Fasl.obj `if test -f 'Fasl.cpp'; then $(CYGPATH_W) 'Fasl.cpp'; else $(CYGPATH_W) '$(srcdir)/Fasl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Fasl.Tpo $(DEPDIR)/test_vector-Fasl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fasl.cpp' object='test_vector-Fasl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Fasl.obj `if test -f 'Fasl.cpp'; then $(CYGPATH_W) 'Fasl.cpp'; else $(CYGPATH_W) '$(srcdir)/Fasl.cpp'; fi`

test_vector-Arithmetic.o: Arithmetic.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Arithmetic.o -MD -MP -MF $(DEPDIR)/test_vector-Arithmetic.Tpo -c -o test_vector-Arithmetic.o `test -f 'Arithmetic.cpp' || echo '$(srcdir)/'`Arithmetic.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Arithmetic.Tpo $(DEPDIR)/test_vector-Arithmetic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arithmetic.cpp' object='test_vector-Arithmetic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Arithmetic.o `test -f 'Arithmetic.cpp' || echo '$(srcdir)/'`Arithmetic.cpp

test_vector-Arithmetic.obj: Arithmetic.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Arithmetic.obj -MD -MP -MF $(DEPDIR)/test_vector-Arithmetic.Tpo -c -o test_vector-Arithmetic.obj `if test -f 'Arithmetic.cpp'; then $(CYGPATH_W) 'Arithmetic.cpp'; else $(CYGPATH_W) '$(srcdir)/Arithmetic.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Arithmetic.Tpo $(DEPDIR)/test_vector-Arithmetic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arithmetic.cpp' object='test_vector-Arithmetic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Arithmetic.obj `if test -f 'Arithmetic.cpp'; then $(CYGPATH_W) 'Arithmetic.cpp'; else $(CYGPATH_W) '$(srcdir)/Arithmetic.cpp'; fi`

test_vector-Ratnum.o: Ratnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Ratnum.o -MD -MP -MF $(DEPDIR)/test_vector-Ratnum.Tpo -c -o test_vector-Ratnum.o `test -f 'Ratnum.cpp' || echo '$(srcdir)/'`Ratnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Ratnum.Tpo $(DEPDIR)/test_vector-Ratnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Ratnum.cpp' object='test_vector-Ratnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Ratnum.o `test -f 'Ratnum.cpp' || echo '$(srcdir)/'`Ratnum.cpp

test_vector-Ratnum.obj: Ratnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Ratnum.obj -MD -MP -MF $(DEPDIR)/test_vector-Ratnum.Tpo -c -o test_vector-Ratnum.obj `if test -f 'Ratnum.cpp'; then $(CYGPATH_W) 'Ratnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Ratnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Ratnum.Tpo $(DEPDIR)/test_vector-Ratnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Ratnum.cpp' object='test_vector-Ratnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Ratnum.obj `if test -f 'Ratnum.cpp'; then $(CYGPATH_W) 'Ratnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Ratnum.cpp'; fi`

test_vector-Bignum.o: Bignum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Bignum.o -MD -MP -MF $(DEPDIR)/test_vector-Bignum.Tpo -c -o test_vector-Bignum.o `test -f 'Bignum.cpp' || echo '$(srcdir)/'`Bignum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Bignum.Tpo $(DEPDIR)/test_vector-Bignum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bignum.cpp' object='test_vector-Bignum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Bignum.o `test -f 'Bignum.cpp' || echo '$(srcdir)/'`Bignum.cpp

test_vector-Bignum.obj: Bignum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Bignum.obj -MD -MP -MF $(DEPDIR)/test_vector-Bignum.Tpo -c -o test_vector-Bignum.obj `if test -f 'Bignum.cpp'; then $(CYGPATH_W) 'Bignum.cpp'; else $(CYGPATH_W) '$(srcdir)/Bignum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Bignum.Tpo $(DEPDIR)/test_vector-Bignum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bignum.cpp' object='test_vector-Bignum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Bignum.obj `if test -f 'Bignum.cpp'; then $(CYGPATH_W) 'Bignum.cpp'; else $(CYGPATH_W) '$(srcdir)/Bignum.cpp'; fi`

test_vector-Flonum.o: Flonum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Flonum.o -MD -MP -MF $(DEPDIR)/test_vector-Flonum.Tpo -c -o test_vector-Flonum.o `test -f 'Flonum.cpp' || echo '$(srcdir)/'`Flonum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Flonum.Tpo $(DEPDIR)/test_vector-Flonum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Flonum.cpp' object='test_vector-Flonum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Flonum.o `test -f 'Flonum.cpp' || echo '$(srcdir)/'`Flonum.cpp

test_vector-Flonum.obj: Flonum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Flonum.obj -MD -MP -MF $(DEPDIR)/test_vector-Flonum.Tpo -c -o test_vector-Flonum.obj `if test -f 'Flonum.cpp'; then $(CYGPATH_W) 'Flonum.cpp'; else $(CYGPATH_W) '$(srcdir)/Flonum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Flonum.Tpo $(DEPDIR)/test_vector-Flonum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Flonum.cpp' object='test_vector-Flonum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Flonum.obj `if test -f 'Flonum.cpp'; then $(CYGPATH_W) 'Flonum.cpp'; else $(CYGPATH_W) '$(srcdir)/Flonum.cpp'; fi`

test_vector-CodeBuilder.o: CodeBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CodeBuilder.o -MD -MP -MF $(DEPDIR)/test_vector-CodeBuilder.Tpo -c -o test_vector-CodeBuilder.o `test -f 'CodeBuilder.cpp' || echo '$(srcdir)/'`CodeBuilder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CodeBuilder.Tpo $(DEPDIR)/test_vector-CodeBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CodeBuilder.cpp' object='test_vector-CodeBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CodeBuilder.o `test -f 'CodeBuilder.cpp' || echo '$(srcdir)/'`CodeBuilder.cpp

test_vector-CodeBuilder.obj: CodeBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-CodeBuilder.obj -MD -MP -MF $(DEPDIR)/test_vector-CodeBuilder.Tpo -c -o test_vector-CodeBuilder.obj `if test -f 'CodeBuilder.cpp'; then $(CYGPATH_W) 'CodeBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/CodeBuilder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-CodeBuilder.Tpo $(DEPDIR)/test_vector-CodeBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CodeBuilder.cpp' object='test_vector-CodeBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-CodeBuilder.obj `if test -f 'CodeBuilder.cpp'; then $(CYGPATH_W) 'CodeBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/CodeBuilder.cpp'; fi`

test_vector-FixnumProcedures.o: FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FixnumProcedures.o -MD -MP -MF $(DEPDIR)/test_vector-FixnumProcedures.Tpo -c -o test_vector-FixnumProcedures.o `test -f 'FixnumProcedures.cpp' || echo '$(srcdir)/'`FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FixnumProcedures.Tpo $(DEPDIR)/test_vector-FixnumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FixnumProcedures.cpp' object='test_vector-FixnumProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FixnumProcedures.o `test -f 'FixnumProcedures.cpp' || echo '$(srcdir)/'`FixnumProcedures.cpp

test_vector-FixnumProcedures.obj: FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-FixnumProcedures.obj -MD -MP -MF $(DEPDIR)/test_vector-FixnumProcedures.Tpo -c -o test_vector-FixnumProcedures.obj `if test -f 'FixnumProcedures.cpp'; then $(CYGPATH_W) 'FixnumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FixnumProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-FixnumProcedures.Tpo $(DEPDIR)/test_vector-FixnumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FixnumProcedures.cpp' object='test_vector-FixnumProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-FixnumProcedures.obj `if test -f 'FixnumProcedures.cpp'; then $(CYGPATH_W) 'FixnumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FixnumProcedures.cpp'; fi`

test_vector-Latin1Codec.o: Latin1Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Latin1Codec.o -MD -MP -MF $(DEPDIR)/test_vector-Latin1Codec.Tpo -c -o test_vector-Latin1Codec.o `test -f 'Latin1Codec.cpp' || echo '$(srcdir)/'`Latin1Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Latin1Codec.Tpo $(DEPDIR)/test_vector-Latin1Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Latin1Codec.cpp' object='test_vector-Latin1Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Latin1Codec.o `test -f 'Latin1Codec.cpp' || echo '$(srcdir)/'`Latin1Codec.cpp

test_vector-Latin1Codec.obj: Latin1Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -MT test_vector-Latin1Codec.obj -MD -MP -MF $(DEPDIR)/test_vector-Latin1Codec.Tpo -c -o test_vector-Latin1Codec.obj `if test -f 'Latin1Codec.cpp'; then $(CYGPATH_W) 'Latin1Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Latin1Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vector-Latin1Codec.Tpo $(DEPDIR)/test_vector-Latin1Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Latin1Codec.cpp' object='test_vector-Latin1Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vector_CXXFLAGS) $(CXXFLAGS) -c -o test_vector-Latin1Codec.obj `if test -f 'Latin1Codec.cpp'; then $(CYGPATH_W) 'Latin1Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Latin1Codec.cpp'; fi`
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(MKDIR_P) "$(DESTDIR)$(datadir)"
	@list='$(data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done
install-nobase_dataDATA: $(nobase_data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(MKDIR_P) "$(DESTDIR)$(datadir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(nobase_dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-nobase_dataDATA:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_data_DATA)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)" "$(DESTDIR)$(datadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dataDATA install-nobase_dataDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dataDATA \
	uninstall-nobase_dataDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic ctags \
	ctags-recursive dist dist-all dist-bzip2 dist-gzip dist-lzma \
	dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dataDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_dataDATA \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dataDATA \
	uninstall-nobase_dataDATA


update:
	find . -name "*.ss.fasl" | xargs rm
	./mosh scripts/pre-compile-r6rs.scm scripts/pre-compile-target.scm

# when you release comment out start

Reader.tab.cpp: Reader.y
	bison -d $< -o $@

NumberReader.tab.cpp: NumberReader.y
	bison -p "number_yy" -d $< -o $@

Scanner.cpp : scanner.re
	/usr/local/bin/re2c -u $< > $@ # -d is debug option

NumberScanner.cpp : NumberScanner.re
	/usr/local/bin/re2c -cu $< > $@ # -d is debug option

r6rs-test:
	(cd r6rs-examples && ../mosh hello.ss)
	(cd r6rs-examples && ../mosh let-syntax.ss)
	(cd r6rs-examples && ../mosh env.ss)

#### Instruction.h
Instruction.h: ./instruction.scm
	@GOSH@ ./scripts/gen-insn.scm $(PWD)/$< > $(PWD)/$@

main.cpp: psyntax.h compiler-with-library.h match.h

./compiler-vm-cpp.scm: ./compiler.scm free-vars-decl.scm
	@GOSH@ ./scripts/gen-compiler.scm $(PWD)/$< "mosh" > $(PWD)/$@

compiler-with-library.scmc: ./compiler-with-library.scm ./compiler-vm.scm
	@GOSH@ ./vm.scm compile-file-with-macro $(PWD)/$< > $(PWD)/$@

SUFFIXES: .scmc .h

.scmc.h:
	mosh scripts/scmc2fasl.scm $(PWD)/$< $(PWD)/$<.fasl
	mosh scripts/binary2c.scm $(PWD)/$<.fasl $(PWD)/$@

match.scmc: ./match.scm ./compiler-vm.scm
	@GOSH@ ./vm.scm compile-file-without-macro $(PWD)/$< > $(PWD)/$@

# we need to replace #\null => #\nul and |...| => ...
# It is the difference between gauche and mosh.
psyntax.scmc: tools/psyntax-r6rs/rev10_to_10/psyntax.scm ./compiler-vm.scm
	@GOSH@ ./vm.scm compile-file-without-macro $(PWD)/$< > $(PWD)/$@
	sed -i -e "s/#\\\\null/#\\\\nul/g;s/|\.\.\.|/\.\.\./g" $(PWD)/$@

./compiler-with-library.scm: ./library.scm ./compiler-vm-cpp.scm $(CORE_LIBS)
	cat $^ > $(PWD)/$@

./free-vars-decl.scm: ./free-vars.scm
	@GOSH@ ./scripts/gen-free-vars-decl.scm $(PWD)/$< > $(PWD)/$@

./compiler-vm.scm: ./compiler.scm free-vars-decl.scm
	./scripts/gen-compiler.scm $(PWD)/$< "vm?" > $(PWD)/$@

./compiler-vm-outer.scm: ./compiler.scm free-vars-decl.scm
	./scripts/gen-compiler.scm $(PWD)/$< "vm-outer?" > $(PWD)/$@  || (rm -f $(PWD)/$@ && false)

./compiler-gauche.scm: ./compiler.scm free-vars-decl.scm
	./scripts/gen-compiler.scm $(PWD)/$< "gauche" > $(PWD)/$@  || (rm -f $(PWD)/$@ && false)

labels.cpp: ./instruction.scm
	@GOSH@ ./scripts/gen-label.scm $< > $(PWD)/$@

DebugInstruction.h: instruction.scm
	@GOSH@ ./scripts/gen-short-insn.scm $(PWD)/$< > $(PWD)/$@

VM.cpp: cprocedures.cpp labels.cpp

./cprocedures.cpp: ./free-vars-decl.scm ./scripts/gen-cproc.scm
	@GOSH@ ./scripts/gen-cproc.scm > $@

all-tests.scm: ./test-data.scm
	mosh -5 ./scripts/gen-test.scm $< $@
#	echo 'run -5 scripts/gen-test.scm test-data.scm all-tests.scm ' | gdb ./mosh

# when you release comment out end

#### benchmark
.PHONY: bench doc

bench:
#	@GOSH@ ./scripts/bench.scm > /dev/null
	LANG=C @GOSH@ ./scripts/bench2.scm

#### test
check: test

test:./mosh all-tests.scm 
	./mosh -r5 test/reader.scm
	./mosh -5 all-tests.scm
#	./mosh r6rs-examples/srfi8-test.ss
	./mosh r6rs-examples/record-test.ss
	./mosh r6rs-examples/condition-test.ss
	./mosh r6rs-examples/exception-test.ss
	./mosh r6rs-examples/unicode-test.ss
	(cd r6rs-test-suite && $(MAKE) $@)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_CPPFLAGS_) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_CPPFLAGS_) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# doc:
# 	@GOSH@ ./scripts/gen-doc.scm "manual" "doc/"
# 	@GOSH@ ./scripts/gen-doc-index.scm "top" "doc/"

fulltest:
	./mosh -t
	./vm.scm
	./scripts/test-compiler.scm
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
