(((title . "LAML Compatibility Functions") (author . "Kurt Nørmark") (affiliation . "Department of Computer Science, Aalborg University") (abstract . "The LAML software relies on a number of functions, which are non-standard both in R4RS and\n            R5RS. You can think of these as functions that extend R4RS/R5RS a little bit to fill the gap\n            between the LAML code base and the Scheme standard. We support a set of compatibility files for different platforms, operating systems,\n            and Scheme systems in the directory lib/compatibility/ of the LAML distribution. The relevant compatibility\n            file is loaded automatically by laml.scm, based on the configuration file that\n            you elaborated as part of LAML installation process. It is important to understand that some of the compatibility functions, described in this manual, are alread implemented by some Scheme systems.\n            If that is the case, it is not necessary to implement them in the LAML compatility file. Help to implementors:  See also advice on how to port LAML to another Scheme System.") (scheme-source-file . not-provided) (laml-resource . "true") (documentation-commenting-style . not-provided) (default-attribute-explanation . not-provided) (source-destination-delta . not-provided) (css-prestylesheet . "compact") (css-stylesheet . "argentinal") (css-stylesheet-copying . not-provided) (make-dtd-manual-template . not-provided) (keep-syntactical-comment-file . not-provided) (manual-destination-name . not-provided) (mirror-names-defined . not-provided) (mirror-name-prefix . not-provided) (attribute-sorting . not-provided) (scheme-source-linking . not-provided)) ((section-id "mandatory") (kind "manual-section") (section-title "Mandatory compatibility functions") (section-body "Here follows documentation of the important compatibility functions that must be implemented by in order to use LAML.")) ((kind "manual-page") (title "file-exits?") (form "(file-exists? file-path)") (description "Returns whether a file named file-path exists.") (parameters (parameter "file-path" "the full and absolute path to the file (a text string).")) (returns "A boolean value") (cross-references)) ((kind "manual-page") (title "directory-exists?") (form "(directory-exists? dir-path)") (description "Returns whether the directory dir-path exists.") (parameters (parameter "dir-path" "the full and absolute directory path to the directory. As a convention in LAML, a directory path is always terminated by a forward slash character: '/'. dir-path is a text string.")) (returns "A boolean value") (cross-references)) ((kind "manual-page") (title "delete-file") (form "(delete-file file-path)") (description "Deletes a file.") (parameters (parameter "file-path" "the full and absolute path to the file (a text string).")) (cross-references)) ((kind "manual-page") (title "copy-file") (form "(copy-file source destination)") (description "Copy the source file to destination file.") (pre-condition "The source file exists, and the target file does not exist.") (parameters (parameter "source" "The full file path to the source file") (parameter "target" "The full file path to the destination file")) (post-condition "Both the source file and target file exists, and they are identical.") (cross-references)) ((kind "manual-page") (title "make-directory-in-directory") (form "(make-directory-in-directory in-directory-path new-dir)") (description "Make a new directory new-dir in an existing directory path..") (pre-condition "There is no directory new-dir in in-directory-path") (parameters (parameter "in-directory-path" "a full and absolute directory path (ending in a forward slash). A string") (parameter "new-dir" "a simple directory name (without any slash character). A string.")) (post-condition "Directory new-dir in in-directory-path exists.") (cross-references)) ((kind "manual-page") (title "directory-list") (form "(directory-list dir-path)") (description "Return a list of files and directories in dir-path.") (parameters (parameter "dir-path" "a full and absolute directory path, which ends in a forward slash.")) (returns "The list of file and directory names (without initial path). The resulting list does not include the directories named '.' and '..'.") (cross-references)) ((kind "manual-page") (title "current-time") (form "(current-time)") (description "Returns the number of seconds elapsed since January 1, 1970. A LAML compatibility function.") (returns "An integer") (cross-references)) ((kind "manual-page") (title "sort-list") (form "(sort-list list leq-fn)") (description "Returns a sorted copy of list. The sorting is based on the function leq-fn, which returns if two elements in the list are considered less than or equal. See note below.") (parameters (parameter "list" "A list") (parameter "leq-fn" "A function of two parameters (list elements) (lambda (e1 e1) ...) which return if e1 is less than or equal to e2.")) (returns "The sorted list") (misc "Note to implementors of sort-list: If you cannot easily provide an implementation of sort-list, we provide the file lib/compatibility/sorting/sort.scm with Aubrey Jaffer's sorting functions. You can include this file in the compatibility file and add (define sort-list sort:sort).") (cross-references)) ((kind "manual-page") (title "bound?") (form "(bound? name)") (description "Return if the name is bound in the current interaction environment.") (parameters (parameter "name" "A symbol")) (cross-references)) ((kind "manual-page") (title "eval-cur-env") (form "(eval-cur-env e)") (description "Evaluates the expression e in the current interaction environment. Rationale: Bridges the differences between R4RS systems (in which eval is not standardized) and R5RS systems, in which eval takes two parameters.") (parameters (parameter "e" "A Scheme expression, such as a list structure.")) (returns "The value of e") (cross-references)) ((kind "manual-page") (title "error") (form "(error error-message-string)") (description "Stop program executation and print information about the error, as described by the string error-message-string. Most Scheme systems supports this function already.") (parameters (parameter "error-message-string" "The error message. A string")) (cross-references)) ((section-id "optional") (kind "manual-section") (section-title "Optional compatibility functions") (section-body "Here follows a few compatibility functions which are not used in central parts of LAML. You cannot necessarily expect these functions to exist in your LAML system. ")) ((kind "manual-page") (title "getenv") (form "(getenv name)") (description "Read and return the value of an environment variable in the operating system. Mainly Used for LAML CGI programming purposes.") (parameters (parameter "name" "A string")) (returns "The value of the environment variable") (cross-references)) ((kind "manual-page") (title "mail") (form "(mail receiver title contents)") (description "Send email to receiver with title and contents.") (parameters (parameter "receiver" "email address. A string") (parameter "title" "Email title. A string") (parameter "contents" "Email body. A string")) (cross-references)) ((kind "manual-page") (title "url-target-exists?") (form "(url-target-exists? url-string)") (description "Return if the absolute URL, as represented by url-string, exists. If you use the value all or absolute  of the variable xml-link-checking in lib/xml-in-laml/xml-in-laml.scm you must implement this function. This provides for checking the existence of the absolute URLs in your documents. In other situations, you do not need to implement it.") (parameters (parameter "url-strinig" "A URL. A string")) (returns "A boolean result") (cross-references)))