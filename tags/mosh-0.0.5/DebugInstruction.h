// Do not edit this file generated by gen-insn.scm
#ifndef __SCHEME_DEBUG_INSTRUCTION_H__
#define __SCHEME_DEBUG_INSTRUCTION_H__

class DebugInstruction
{
public:
    enum {
        NO_INSN = 0,
        APPEND2 = 1,
        CALL = 2,
        APPLY = 3,
        PUSH = 4,
        ASSIGN_FREE = 5,
        ASSIGN_GLOBAL = 6,
        ASSIGN_LOCAL = 7,
        BOX = 8,
        CAAR = 9,
        CADR = 10,
        CAR = 11,
        CDAR = 12,
        CDDR = 13,
        CDR = 14,
        CLOSURE = 15,
        CONS = 16,
        CONSTANT = 17,
        DEFINE_GLOBAL = 18,
        DISPLAY = 19,
        ENTER = 20,
        EQ = 21,
        EQV = 22,
        EQUAL = 23,
        FRAME = 24,
        IMPORT = 25,
        INDIRECT = 26,
        LEAVE = 27,
        LET_FRAME = 28,
        LIBRARY = 29,
        LIST = 30,
        LOCAL_JMP = 31,
        MAKE_CONTINUATION = 32,
        MAKE_VECTOR = 33,
        NOP = 34,
        NOT = 35,
        NULL_P = 36,
        NUMBER_ADD = 37,
        NUMBER_EQUAL = 38,
        NUMBER_GE = 39,
        NUMBER_GT = 40,
        NUMBER_LE = 41,
        NUMBER_LT = 42,
        NUMBER_MUL = 43,
        NUMBER_DIV = 44,
        NUMBER_SUB = 45,
        PAIR_P = 46,
        READ = 47,
        READ_CHAR = 48,
        REDUCE = 49,
        REFER_FREE = 50,
        REFER_GLOBAL = 51,
        REFER_LOCAL = 52,
        RESTORE_CONTINUATION = 53,
        RETURN = 54,
        SET_CAR = 55,
        SET_CDR = 56,
        SHIFT = 57,
        SYMBOL_P = 58,
        TEST = 59,
        UNDEF = 60,
        VECTOR_LENGTH = 61,
        VECTOR_P = 62,
        VECTOR_REF = 63,
        VECTOR_SET = 64,
        CONSTANT_PUSH = 65,
        REFER_LOCAL0 = 66,
        REFER_LOCAL1 = 67,
        REFER_LOCAL2 = 68,
        REFER_LOCAL3 = 69,
        REFER_FREE0 = 70,
        REFER_FREE1 = 71,
        REFER_FREE2 = 72,
        REFER_FREE3 = 73,
        REFER_LOCAL0_PUSH = 74,
        REFER_LOCAL0_PUSH_CONSTANT = 75,
        REFER_LOCAL1_PUSH_CONSTANT = 76,
        REFER_LOCAL1_PUSH = 77,
        NUMBER_SUB_PUSH = 78,
        PUSH_ENTER = 79,
        HALT = 80,
        LEAVE1 = 81,
        CALL1 = 82,
        NUMBER_LE_TEST = 83,
        NUMBER_ADD_PUSH = 84,
        RETURN1 = 85,
        RETURN2 = 86,
        RETURN3 = 87,
        CALL2 = 88,
        REFER_LOCAL0_EQV_TEST = 89,
        PUSH_CONSTANT = 90,
        PUSH_FRAME = 91,
        REFER_FREE0_PUSH = 92,
        REFER_FREE1_PUSH = 93,
        REFER_FREE2_PUSH = 94,
        CAR_PUSH = 95,
        CDR_PUSH = 96,
        REFER_FREE0_INDIRECT = 97,
        REFER_FREE1_INDIRECT = 98,
        REFER_LOCAL2_PUSH = 99,
        SHIFT_CALL = 100,
        CALL3 = 101,
        NOT_TEST = 102,
        REFER_GLOBAL_CALL = 103,
        REFER_LOCAL0_NUMBER_ADD_PUSH = 104,
        REFER_LOCAL0_VECTOR_SET = 105,
        REFER_LOCAL0_VECTOR_REF = 106,
        REFER_FREE_PUSH = 107,
        REFER_LOCAL_PUSH = 108,
        VALUES = 109,
        RECEIVE = 110,
        UNFIXED_JUMP = 111,
        COUNT = 112,
        OPERAND_MAX = 5
    };
    static const char* toString(int v) {
        switch(v) {
        case NO_INSN: { return ""; }
            case APPEND2: { return "APPEND2";}
            case CALL: { return "CALL";}
            case APPLY: { return "APPLY";}
            case PUSH: { return "PUSH";}
            case ASSIGN_FREE: { return "ASSIGN_FREE";}
            case ASSIGN_GLOBAL: { return "ASSIGN_GLOBAL";}
            case ASSIGN_LOCAL: { return "ASSIGN_LOCAL";}
            case BOX: { return "BOX";}
            case CAAR: { return "CAAR";}
            case CADR: { return "CADR";}
            case CAR: { return "CAR";}
            case CDAR: { return "CDAR";}
            case CDDR: { return "CDDR";}
            case CDR: { return "CDR";}
            case CLOSURE: { return "CLOSURE";}
            case CONS: { return "CONS";}
            case CONSTANT: { return "CONSTANT";}
            case DEFINE_GLOBAL: { return "DEFINE_GLOBAL";}
            case DISPLAY: { return "DISPLAY";}
            case ENTER: { return "ENTER";}
            case EQ: { return "EQ";}
            case EQV: { return "EQV";}
            case EQUAL: { return "EQUAL";}
            case FRAME: { return "FRAME";}
            case IMPORT: { return "IMPORT";}
            case INDIRECT: { return "INDIRECT";}
            case LEAVE: { return "LEAVE";}
            case LET_FRAME: { return "LET_FRAME";}
            case LIBRARY: { return "LIBRARY";}
            case LIST: { return "LIST";}
            case LOCAL_JMP: { return "LOCAL_JMP";}
            case MAKE_CONTINUATION: { return "MAKE_CONTINUATION";}
            case MAKE_VECTOR: { return "MAKE_VECTOR";}
            case NOP: { return "NOP";}
            case NOT: { return "NOT";}
            case NULL_P: { return "NULL_P";}
            case NUMBER_ADD: { return "NUMBER_ADD";}
            case NUMBER_EQUAL: { return "NUMBER_EQUAL";}
            case NUMBER_GE: { return "NUMBER_GE";}
            case NUMBER_GT: { return "NUMBER_GT";}
            case NUMBER_LE: { return "NUMBER_LE";}
            case NUMBER_LT: { return "NUMBER_LT";}
            case NUMBER_MUL: { return "NUMBER_MUL";}
            case NUMBER_DIV: { return "NUMBER_DIV";}
            case NUMBER_SUB: { return "NUMBER_SUB";}
            case PAIR_P: { return "PAIR_P";}
            case READ: { return "READ";}
            case READ_CHAR: { return "READ_CHAR";}
            case REDUCE: { return "REDUCE";}
            case REFER_FREE: { return "REFER_FREE";}
            case REFER_GLOBAL: { return "REFER_GLOBAL";}
            case REFER_LOCAL: { return "REFER_LOCAL";}
            case RESTORE_CONTINUATION: { return "RESTORE_CONTINUATION";}
            case RETURN: { return "RETURN";}
            case SET_CAR: { return "SET_CAR";}
            case SET_CDR: { return "SET_CDR";}
            case SHIFT: { return "SHIFT";}
            case SYMBOL_P: { return "SYMBOL_P";}
            case TEST: { return "TEST";}
            case UNDEF: { return "UNDEF";}
            case VECTOR_LENGTH: { return "VECTOR_LENGTH";}
            case VECTOR_P: { return "VECTOR_P";}
            case VECTOR_REF: { return "VECTOR_REF";}
            case VECTOR_SET: { return "VECTOR_SET";}
            case CONSTANT_PUSH: { return "CONSTANT_PUSH";}
            case REFER_LOCAL0: { return "REFER_LOCAL0";}
            case REFER_LOCAL1: { return "REFER_LOCAL1";}
            case REFER_LOCAL2: { return "REFER_LOCAL2";}
            case REFER_LOCAL3: { return "REFER_LOCAL3";}
            case REFER_FREE0: { return "REFER_FREE0";}
            case REFER_FREE1: { return "REFER_FREE1";}
            case REFER_FREE2: { return "REFER_FREE2";}
            case REFER_FREE3: { return "REFER_FREE3";}
            case REFER_LOCAL0_PUSH: { return "REFER_LOCAL0_PUSH";}
            case REFER_LOCAL0_PUSH_CONSTANT: { return "REFER_LOCAL0_PUSH_CONSTANT";}
            case REFER_LOCAL1_PUSH_CONSTANT: { return "REFER_LOCAL1_PUSH_CONSTANT";}
            case REFER_LOCAL1_PUSH: { return "REFER_LOCAL1_PUSH";}
            case NUMBER_SUB_PUSH: { return "NUMBER_SUB_PUSH";}
            case PUSH_ENTER: { return "PUSH_ENTER";}
            case HALT: { return "HALT";}
            case LEAVE1: { return "LEAVE1";}
            case CALL1: { return "CALL1";}
            case NUMBER_LE_TEST: { return "NUMBER_LE_TEST";}
            case NUMBER_ADD_PUSH: { return "NUMBER_ADD_PUSH";}
            case RETURN1: { return "RETURN1";}
            case RETURN2: { return "RETURN2";}
            case RETURN3: { return "RETURN3";}
            case CALL2: { return "CALL2";}
            case REFER_LOCAL0_EQV_TEST: { return "REFER_LOCAL0_EQV_TEST";}
            case PUSH_CONSTANT: { return "PUSH_CONSTANT";}
            case PUSH_FRAME: { return "PUSH_FRAME";}
            case REFER_FREE0_PUSH: { return "REFER_FREE0_PUSH";}
            case REFER_FREE1_PUSH: { return "REFER_FREE1_PUSH";}
            case REFER_FREE2_PUSH: { return "REFER_FREE2_PUSH";}
            case CAR_PUSH: { return "CAR_PUSH";}
            case CDR_PUSH: { return "CDR_PUSH";}
            case REFER_FREE0_INDIRECT: { return "REFER_FREE0_INDIRECT";}
            case REFER_FREE1_INDIRECT: { return "REFER_FREE1_INDIRECT";}
            case REFER_LOCAL2_PUSH: { return "REFER_LOCAL2_PUSH";}
            case SHIFT_CALL: { return "SHIFT_CALL";}
            case CALL3: { return "CALL3";}
            case NOT_TEST: { return "NOT_TEST";}
            case REFER_GLOBAL_CALL: { return "REFER_GLOBAL_CALL";}
            case REFER_LOCAL0_NUMBER_ADD_PUSH: { return "REFER_LOCAL0_NUMBER_ADD_PUSH";}
            case REFER_LOCAL0_VECTOR_SET: { return "REFER_LOCAL0_VECTOR_SET";}
            case REFER_LOCAL0_VECTOR_REF: { return "REFER_LOCAL0_VECTOR_REF";}
            case REFER_FREE_PUSH: { return "REFER_FREE_PUSH";}
            case REFER_LOCAL_PUSH: { return "REFER_LOCAL_PUSH";}
            case VALUES: { return "VALUES";}
            case RECEIVE: { return "RECEIVE";}
            case UNFIXED_JUMP: { return "UNFIXED_JUMP";}
    }};
};
#endif // __SCHEME_DEBUG_INSTRUCTION_H__
